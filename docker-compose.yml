version: '3.8'

services:
  redis:
    image: redis:7
    restart: unless-stopped
    ports:
      - '6379:6379'

  postgres:
    image: postgres:15
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=lora
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data

  minio:
    image: minio/minio:RELEASE.2025-01-01T00-00-00Z
    command: server /data
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    ports:
      - '9000:9000'
    volumes:
      - minio_data:/data

  api:
    build: .
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - ./:/app
    ports:
      - '8782:8000'
    environment:
      REDIS_URL: "redis://redis:6379/0"
      DATABASE_URL: "postgresql+psycopg://postgres:postgres@postgres:5432/lora"
      STORAGE_TYPE: "s3"
      S3_BUCKET: "lora-bucket"
      AWS_ACCESS_KEY_ID: "minioadmin"
      AWS_SECRET_ACCESS_KEY: "minioadmin"
      S3_ENDPOINT_URL: "http://minio:9000"
    depends_on:
      - redis
      - postgres
      - minio

  worker:
    build: .
    command: rq worker --url $REDIS_URL default
    volumes:
      - ./:/app
    environment:
      REDIS_URL: "redis://redis:6379/0"
      DATABASE_URL: "postgresql+psycopg://postgres:postgres@postgres:5432/lora"
      STORAGE_TYPE: "s3"
      S3_BUCKET: "lora-bucket"
      AWS_ACCESS_KEY_ID: "minioadmin"
      AWS_SECRET_ACCESS_KEY: "minioadmin"
      S3_ENDPOINT_URL: "http://minio:9000"
    depends_on:
      - redis
      - postgres
      - minio

networks:
  default:
    name: lora_backend_net

volumes:
  postgres_data:
  minio_data:
