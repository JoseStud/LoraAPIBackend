11bd07f5b49d0efdda0c69b5e6ac333c
/* istanbul ignore next */
function cov_2dwuis6rfq() {
  var path = "/home/runner/work/LoraAPIBackend/LoraAPIBackend/app/frontend/static/js/utils/async.js";
  var hash = "81d909d703fd4994bfd5206ce144f3b0b49750bb";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/runner/work/LoraAPIBackend/LoraAPIBackend/app/frontend/static/js/utils/async.js",
    statementMap: {
      "0": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 59
        }
      },
      "1": {
        start: {
          line: 14,
          column: 34
        },
        end: {
          line: 14,
          column: 57
        }
      },
      "2": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 38,
          column: 6
        }
      },
      "3": {
        start: {
          line: 28,
          column: 22
        },
        end: {
          line: 31,
          column: 9
        }
      },
      "4": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 29,
          column: 27
        }
      },
      "5": {
        start: {
          line: 30,
          column: 12
        },
        end: {
          line: 30,
          column: 51
        }
      },
      "6": {
        start: {
          line: 30,
          column: 28
        },
        end: {
          line: 30,
          column: 51
        }
      },
      "7": {
        start: {
          line: 33,
          column: 24
        },
        end: {
          line: 33,
          column: 45
        }
      },
      "8": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 30
        }
      },
      "9": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 42
        }
      },
      "10": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 44
        }
      },
      "11": {
        start: {
          line: 37,
          column: 21
        },
        end: {
          line: 37,
          column: 44
        }
      },
      "12": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 56,
          column: 6
        }
      },
      "13": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 55,
          column: 9
        }
      },
      "14": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 52,
          column: 35
        }
      },
      "15": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 53,
          column: 30
        }
      },
      "16": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 54,
          column: 56
        }
      },
      "17": {
        start: {
          line: 54,
          column: 29
        },
        end: {
          line: 54,
          column: 47
        }
      },
      "18": {
        start: {
          line: 69,
          column: 4
        },
        end: {
          line: 82,
          column: 5
        }
      },
      "19": {
        start: {
          line: 69,
          column: 23
        },
        end: {
          line: 69,
          column: 24
        }
      },
      "20": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 81,
          column: 9
        }
      },
      "21": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 71,
          column: 37
        }
      },
      "22": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 73,
          column: 30
        }
      },
      "23": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 77,
          column: 13
        }
      },
      "24": {
        start: {
          line: 76,
          column: 16
        },
        end: {
          line: 76,
          column: 32
        }
      },
      "25": {
        start: {
          line: 79,
          column: 28
        },
        end: {
          line: 79,
          column: 60
        }
      },
      "26": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 80,
          column: 33
        }
      },
      "27": {
        start: {
          line: 92,
          column: 27
        },
        end: {
          line: 94,
          column: 6
        }
      },
      "28": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 93,
          column: 99
        }
      },
      "29": {
        start: {
          line: 93,
          column: 25
        },
        end: {
          line: 93,
          column: 86
        }
      },
      "30": {
        start: {
          line: 96,
          column: 4
        },
        end: {
          line: 96,
          column: 51
        }
      },
      "31": {
        start: {
          line: 107,
          column: 20
        },
        end: {
          line: 107,
          column: 22
        }
      },
      "32": {
        start: {
          line: 109,
          column: 4
        },
        end: {
          line: 113,
          column: 5
        }
      },
      "33": {
        start: {
          line: 109,
          column: 17
        },
        end: {
          line: 109,
          column: 18
        }
      },
      "34": {
        start: {
          line: 110,
          column: 22
        },
        end: {
          line: 110,
          column: 51
        }
      },
      "35": {
        start: {
          line: 111,
          column: 29
        },
        end: {
          line: 111,
          column: 68
        }
      },
      "36": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 112,
          column: 38
        }
      },
      "37": {
        start: {
          line: 115,
          column: 4
        },
        end: {
          line: 115,
          column: 19
        }
      },
      "38": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 131,
          column: 15
        }
      },
      "39": {
        start: {
          line: 133,
          column: 19
        },
        end: {
          line: 133,
          column: 20
        }
      },
      "40": {
        start: {
          line: 134,
          column: 22
        },
        end: {
          line: 134,
          column: 32
        }
      },
      "41": {
        start: {
          line: 136,
          column: 21
        },
        end: {
          line: 160,
          column: 11
        }
      },
      "42": {
        start: {
          line: 137,
          column: 24
        },
        end: {
          line: 137,
          column: 46
        }
      },
      "43": {
        start: {
          line: 138,
          column: 29
        },
        end: {
          line: 138,
          column: 55
        }
      },
      "44": {
        start: {
          line: 141,
          column: 20
        },
        end: {
          line: 141,
          column: 32
        }
      },
      "45": {
        start: {
          line: 142,
          column: 8
        },
        end: {
          line: 145,
          column: 9
        }
      },
      "46": {
        start: {
          line: 143,
          column: 31
        },
        end: {
          line: 143,
          column: 75
        }
      },
      "47": {
        start: {
          line: 144,
          column: 12
        },
        end: {
          line: 144,
          column: 76
        }
      },
      "48": {
        start: {
          line: 148,
          column: 29
        },
        end: {
          line: 148,
          column: 48
        }
      },
      "49": {
        start: {
          line: 149,
          column: 8
        },
        end: {
          line: 149,
          column: 49
        }
      },
      "50": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 152,
          column: 65
        }
      },
      "51": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 154,
          column: 45
        }
      },
      "52": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 159,
          column: 9
        }
      },
      "53": {
        start: {
          line: 158,
          column: 12
        },
        end: {
          line: 158,
          column: 36
        }
      },
      "54": {
        start: {
          line: 163,
          column: 4
        },
        end: {
          line: 163,
          column: 41
        }
      },
      "55": {
        start: {
          line: 163,
          column: 17
        },
        end: {
          line: 163,
          column: 40
        }
      }
    },
    fnMap: {
      "0": {
        name: "delay",
        decl: {
          start: {
            line: 13,
            column: 16
          },
          end: {
            line: 13,
            column: 21
          }
        },
        loc: {
          start: {
            line: 13,
            column: 26
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 13
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 14,
            column: 23
          },
          end: {
            line: 14,
            column: 24
          }
        },
        loc: {
          start: {
            line: 14,
            column: 34
          },
          end: {
            line: 14,
            column: 57
          }
        },
        line: 14
      },
      "2": {
        name: "debounce",
        decl: {
          start: {
            line: 24,
            column: 16
          },
          end: {
            line: 24,
            column: 24
          }
        },
        loc: {
          start: {
            line: 24,
            column: 56
          },
          end: {
            line: 39,
            column: 1
          }
        },
        line: 24
      },
      "3": {
        name: "executedFunction",
        decl: {
          start: {
            line: 27,
            column: 20
          },
          end: {
            line: 27,
            column: 36
          }
        },
        loc: {
          start: {
            line: 27,
            column: 46
          },
          end: {
            line: 38,
            column: 5
          }
        },
        line: 27
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 28,
            column: 22
          },
          end: {
            line: 28,
            column: 23
          }
        },
        loc: {
          start: {
            line: 28,
            column: 28
          },
          end: {
            line: 31,
            column: 9
          }
        },
        line: 28
      },
      "5": {
        name: "throttle",
        decl: {
          start: {
            line: 47,
            column: 16
          },
          end: {
            line: 47,
            column: 24
          }
        },
        loc: {
          start: {
            line: 47,
            column: 38
          },
          end: {
            line: 57,
            column: 1
          }
        },
        line: 47
      },
      "6": {
        name: "executedFunction",
        decl: {
          start: {
            line: 50,
            column: 20
          },
          end: {
            line: 50,
            column: 36
          }
        },
        loc: {
          start: {
            line: 50,
            column: 46
          },
          end: {
            line: 56,
            column: 5
          }
        },
        line: 50
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 54,
            column: 23
          },
          end: {
            line: 54,
            column: 24
          }
        },
        loc: {
          start: {
            line: 54,
            column: 29
          },
          end: {
            line: 54,
            column: 47
          }
        },
        line: 54
      },
      "8": {
        name: "retryWithBackoff",
        decl: {
          start: {
            line: 66,
            column: 22
          },
          end: {
            line: 66,
            column: 38
          }
        },
        loc: {
          start: {
            line: 66,
            column: 84
          },
          end: {
            line: 83,
            column: 1
          }
        },
        line: 66
      },
      "9": {
        name: "withTimeout",
        decl: {
          start: {
            line: 91,
            column: 16
          },
          end: {
            line: 91,
            column: 27
          }
        },
        loc: {
          start: {
            line: 91,
            column: 48
          },
          end: {
            line: 97,
            column: 1
          }
        },
        line: 91
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 92,
            column: 39
          },
          end: {
            line: 92,
            column: 40
          }
        },
        loc: {
          start: {
            line: 92,
            column: 54
          },
          end: {
            line: 94,
            column: 5
          }
        },
        line: 92
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 93,
            column: 19
          },
          end: {
            line: 93,
            column: 20
          }
        },
        loc: {
          start: {
            line: 93,
            column: 25
          },
          end: {
            line: 93,
            column: 86
          }
        },
        line: 93
      },
      "12": {
        name: "processBatches",
        decl: {
          start: {
            line: 106,
            column: 22
          },
          end: {
            line: 106,
            column: 36
          }
        },
        loc: {
          start: {
            line: 106,
            column: 70
          },
          end: {
            line: 116,
            column: 1
          }
        },
        line: 106
      },
      "13": {
        name: "simulateProgress",
        decl: {
          start: {
            line: 124,
            column: 16
          },
          end: {
            line: 124,
            column: 32
          }
        },
        loc: {
          start: {
            line: 124,
            column: 63
          },
          end: {
            line: 164,
            column: 1
          }
        },
        line: 124
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 136,
            column: 33
          },
          end: {
            line: 136,
            column: 34
          }
        },
        loc: {
          start: {
            line: 136,
            column: 39
          },
          end: {
            line: 160,
            column: 5
          }
        },
        line: 136
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 163,
            column: 11
          },
          end: {
            line: 163,
            column: 12
          }
        },
        loc: {
          start: {
            line: 163,
            column: 17
          },
          end: {
            line: 163,
            column: 40
          }
        },
        line: 163
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 24,
            column: 37
          },
          end: {
            line: 24,
            column: 54
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 24,
            column: 49
          },
          end: {
            line: 24,
            column: 54
          }
        }],
        line: 24
      },
      "1": {
        loc: {
          start: {
            line: 30,
            column: 12
          },
          end: {
            line: 30,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 12
          },
          end: {
            line: 30,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "2": {
        loc: {
          start: {
            line: 33,
            column: 24
          },
          end: {
            line: 33,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 33,
            column: 24
          },
          end: {
            line: 33,
            column: 33
          }
        }, {
          start: {
            line: 33,
            column: 37
          },
          end: {
            line: 33,
            column: 45
          }
        }],
        line: 33
      },
      "3": {
        loc: {
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 37,
            column: 44
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 37,
            column: 44
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 37
      },
      "4": {
        loc: {
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 55,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 55,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 51
      },
      "5": {
        loc: {
          start: {
            line: 66,
            column: 50
          },
          end: {
            line: 66,
            column: 64
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 66,
            column: 63
          },
          end: {
            line: 66,
            column: 64
          }
        }],
        line: 66
      },
      "6": {
        loc: {
          start: {
            line: 66,
            column: 66
          },
          end: {
            line: 66,
            column: 82
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 66,
            column: 78
          },
          end: {
            line: 66,
            column: 82
          }
        }],
        line: 66
      },
      "7": {
        loc: {
          start: {
            line: 75,
            column: 12
          },
          end: {
            line: 77,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 75,
            column: 12
          },
          end: {
            line: 77,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 75
      },
      "8": {
        loc: {
          start: {
            line: 106,
            column: 55
          },
          end: {
            line: 106,
            column: 68
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 106,
            column: 67
          },
          end: {
            line: 106,
            column: 68
          }
        }],
        line: 106
      },
      "9": {
        loc: {
          start: {
            line: 124,
            column: 49
          },
          end: {
            line: 124,
            column: 61
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 124,
            column: 59
          },
          end: {
            line: 124,
            column: 61
          }
        }],
        line: 124
      },
      "10": {
        loc: {
          start: {
            line: 126,
            column: 8
          },
          end: {
            line: 126,
            column: 24
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 126,
            column: 19
          },
          end: {
            line: 126,
            column: 24
          }
        }],
        line: 126
      },
      "11": {
        loc: {
          start: {
            line: 127,
            column: 8
          },
          end: {
            line: 127,
            column: 25
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 127,
            column: 23
          },
          end: {
            line: 127,
            column: 25
          }
        }],
        line: 127
      },
      "12": {
        loc: {
          start: {
            line: 128,
            column: 8
          },
          end: {
            line: 128,
            column: 23
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 128,
            column: 21
          },
          end: {
            line: 128,
            column: 23
          }
        }],
        line: 128
      },
      "13": {
        loc: {
          start: {
            line: 129,
            column: 8
          },
          end: {
            line: 129,
            column: 22
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 129,
            column: 21
          },
          end: {
            line: 129,
            column: 22
          }
        }],
        line: 129
      },
      "14": {
        loc: {
          start: {
            line: 130,
            column: 8
          },
          end: {
            line: 130,
            column: 24
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 130,
            column: 22
          },
          end: {
            line: 130,
            column: 24
          }
        }],
        line: 130
      },
      "15": {
        loc: {
          start: {
            line: 142,
            column: 8
          },
          end: {
            line: 145,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 142,
            column: 8
          },
          end: {
            line: 145,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 142
      },
      "16": {
        loc: {
          start: {
            line: 157,
            column: 8
          },
          end: {
            line: 159,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 157,
            column: 8
          },
          end: {
            line: 159,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 157
      },
      "17": {
        loc: {
          start: {
            line: 157,
            column: 12
          },
          end: {
            line: 157,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 157,
            column: 12
          },
          end: {
            line: 157,
            column: 35
          }
        }, {
          start: {
            line: 157,
            column: 39
          },
          end: {
            line: 157,
            column: 58
          }
        }],
        line: 157
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0],
      "6": [0],
      "7": [0, 0],
      "8": [0],
      "9": [0],
      "10": [0],
      "11": [0],
      "12": [0],
      "13": [0],
      "14": [0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "81d909d703fd4994bfd5206ce144f3b0b49750bb"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2dwuis6rfq = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2dwuis6rfq();
/**
 * Async Operation Utilities
 * 
 * Functions for handling asynchronous operations, delays,
 * debouncing, throttling, and other async patterns.
 */

/**
 * Create a delay/sleep function
 * @param {number} ms - Milliseconds to delay
 * @returns {Promise} Promise that resolves after the delay
 */
export function delay(ms) {
  /* istanbul ignore next */
  cov_2dwuis6rfq().f[0]++;
  cov_2dwuis6rfq().s[0]++;
  return new Promise(resolve => {
    /* istanbul ignore next */
    cov_2dwuis6rfq().f[1]++;
    cov_2dwuis6rfq().s[1]++;
    return setTimeout(resolve, ms);
  });
}

/**
 * Debounce a function - delays execution until after wait time has elapsed
 * @param {Function} func - The function to debounce
 * @param {number} wait - The wait time in milliseconds
 * @param {boolean} immediate - Whether to trigger on leading edge
 * @returns {Function} Debounced function
 */
export function debounce(func, wait, immediate =
/* istanbul ignore next */
(cov_2dwuis6rfq().b[0][0]++, false)) {
  /* istanbul ignore next */
  cov_2dwuis6rfq().f[2]++;
  let timeout;
  /* istanbul ignore next */
  cov_2dwuis6rfq().s[2]++;
  return function executedFunction(...args) {
    /* istanbul ignore next */
    cov_2dwuis6rfq().f[3]++;
    cov_2dwuis6rfq().s[3]++;
    const later = () => {
      /* istanbul ignore next */
      cov_2dwuis6rfq().f[4]++;
      cov_2dwuis6rfq().s[4]++;
      timeout = null;
      /* istanbul ignore next */
      cov_2dwuis6rfq().s[5]++;
      if (!immediate) {
        /* istanbul ignore next */
        cov_2dwuis6rfq().b[1][0]++;
        cov_2dwuis6rfq().s[6]++;
        func.apply(this, args);
      } else
      /* istanbul ignore next */
      {
        cov_2dwuis6rfq().b[1][1]++;
      }
    };
    const callNow =
    /* istanbul ignore next */
    (cov_2dwuis6rfq().s[7]++,
    /* istanbul ignore next */
    (cov_2dwuis6rfq().b[2][0]++, immediate) &&
    /* istanbul ignore next */
    (cov_2dwuis6rfq().b[2][1]++, !timeout));
    /* istanbul ignore next */
    cov_2dwuis6rfq().s[8]++;
    clearTimeout(timeout);
    /* istanbul ignore next */
    cov_2dwuis6rfq().s[9]++;
    timeout = setTimeout(later, wait);
    /* istanbul ignore next */
    cov_2dwuis6rfq().s[10]++;
    if (callNow) {
      /* istanbul ignore next */
      cov_2dwuis6rfq().b[3][0]++;
      cov_2dwuis6rfq().s[11]++;
      func.apply(this, args);
    } else
    /* istanbul ignore next */
    {
      cov_2dwuis6rfq().b[3][1]++;
    }
  };
}

/**
 * Throttle a function - limits execution to once per specified time period
 * @param {Function} func - The function to throttle
 * @param {number} limit - The time limit in milliseconds
 * @returns {Function} Throttled function
 */
export function throttle(func, limit) {
  /* istanbul ignore next */
  cov_2dwuis6rfq().f[5]++;
  let inThrottle;
  /* istanbul ignore next */
  cov_2dwuis6rfq().s[12]++;
  return function executedFunction(...args) {
    /* istanbul ignore next */
    cov_2dwuis6rfq().f[6]++;
    cov_2dwuis6rfq().s[13]++;
    if (!inThrottle) {
      /* istanbul ignore next */
      cov_2dwuis6rfq().b[4][0]++;
      cov_2dwuis6rfq().s[14]++;
      func.apply(this, args);
      /* istanbul ignore next */
      cov_2dwuis6rfq().s[15]++;
      inThrottle = true;
      /* istanbul ignore next */
      cov_2dwuis6rfq().s[16]++;
      setTimeout(() => {
        /* istanbul ignore next */
        cov_2dwuis6rfq().f[7]++;
        cov_2dwuis6rfq().s[17]++;
        return inThrottle = false;
      }, limit);
    } else
    /* istanbul ignore next */
    {
      cov_2dwuis6rfq().b[4][1]++;
    }
  };
}

/**
 * Retry an async operation with exponential backoff
 * @param {Function} operation - The async operation to retry
 * @param {number} maxRetries - Maximum number of retries
 * @param {number} baseDelay - Base delay in milliseconds
 * @returns {Promise} Promise that resolves/rejects based on operation result
 */
export async function retryWithBackoff(operation, maxRetries =
/* istanbul ignore next */
(cov_2dwuis6rfq().b[5][0]++, 3), baseDelay =
/* istanbul ignore next */
(cov_2dwuis6rfq().b[6][0]++, 1000)) {
  /* istanbul ignore next */
  cov_2dwuis6rfq().f[8]++;
  let lastError;
  /* istanbul ignore next */
  cov_2dwuis6rfq().s[18]++;
  for (let attempt =
  /* istanbul ignore next */
  (cov_2dwuis6rfq().s[19]++, 0); attempt <= maxRetries; attempt++) {
    /* istanbul ignore next */
    cov_2dwuis6rfq().s[20]++;
    try {
      /* istanbul ignore next */
      cov_2dwuis6rfq().s[21]++;
      return await operation();
    } catch (error) {
      /* istanbul ignore next */
      cov_2dwuis6rfq().s[22]++;
      lastError = error;
      /* istanbul ignore next */
      cov_2dwuis6rfq().s[23]++;
      if (attempt === maxRetries) {
        /* istanbul ignore next */
        cov_2dwuis6rfq().b[7][0]++;
        cov_2dwuis6rfq().s[24]++;
        throw lastError;
      } else
      /* istanbul ignore next */
      {
        cov_2dwuis6rfq().b[7][1]++;
      }
      const delayMs =
      /* istanbul ignore next */
      (cov_2dwuis6rfq().s[25]++, baseDelay * Math.pow(2, attempt));
      /* istanbul ignore next */
      cov_2dwuis6rfq().s[26]++;
      await delay(delayMs);
    }
  }
}

/**
 * Execute async operations with a timeout
 * @param {Promise} promise - The promise to execute
 * @param {number} timeoutMs - Timeout in milliseconds
 * @returns {Promise} Promise that resolves/rejects based on operation or timeout
 */
export function withTimeout(promise, timeoutMs) {
  /* istanbul ignore next */
  cov_2dwuis6rfq().f[9]++;
  const timeoutPromise =
  /* istanbul ignore next */
  (cov_2dwuis6rfq().s[27]++, new Promise((_, reject) => {
    /* istanbul ignore next */
    cov_2dwuis6rfq().f[10]++;
    cov_2dwuis6rfq().s[28]++;
    setTimeout(() => {
      /* istanbul ignore next */
      cov_2dwuis6rfq().f[11]++;
      cov_2dwuis6rfq().s[29]++;
      return reject(new Error(`Operation timed out after ${timeoutMs}ms`));
    }, timeoutMs);
  }));
  /* istanbul ignore next */
  cov_2dwuis6rfq().s[30]++;
  return Promise.race([promise, timeoutPromise]);
}

/**
 * Execute async operations in batches
 * @param {Array} items - Items to process
 * @param {Function} processor - Async function to process each item
 * @param {number} batchSize - Number of items to process concurrently
 * @returns {Promise<Array>} Promise that resolves to array of results
 */
export async function processBatches(items, processor, batchSize =
/* istanbul ignore next */
(cov_2dwuis6rfq().b[8][0]++, 5)) {
  /* istanbul ignore next */
  cov_2dwuis6rfq().f[12]++;
  const results =
  /* istanbul ignore next */
  (cov_2dwuis6rfq().s[31]++, []);
  /* istanbul ignore next */
  cov_2dwuis6rfq().s[32]++;
  for (let i =
  /* istanbul ignore next */
  (cov_2dwuis6rfq().s[33]++, 0); i < items.length; i += batchSize) {
    const batch =
    /* istanbul ignore next */
    (cov_2dwuis6rfq().s[34]++, items.slice(i, i + batchSize));
    const batchResults =
    /* istanbul ignore next */
    (cov_2dwuis6rfq().s[35]++, await Promise.all(batch.map(processor)));
    /* istanbul ignore next */
    cov_2dwuis6rfq().s[36]++;
    results.push(...batchResults);
  }
  /* istanbul ignore next */
  cov_2dwuis6rfq().s[37]++;
  return results;
}

/**
 * Simulate progress for long-running operations
 * @param {Function} updateCallback - Callback to update progress (receives percentage)
 * @param {Object} options - Options for progress simulation
 * @returns {Function} Function to stop progress simulation
 */
export function simulateProgress(updateCallback, options =
/* istanbul ignore next */
(cov_2dwuis6rfq().b[9][0]++, {})) {
  /* istanbul ignore next */
  cov_2dwuis6rfq().f[13]++;
  const {
    duration =
    /* istanbul ignore next */
    (cov_2dwuis6rfq().b[10][0]++, 10000),
    // Total duration in ms
    initialSpeed =
    /* istanbul ignore next */
    (cov_2dwuis6rfq().b[11][0]++, 20),
    // Initial progress speed
    slowDownAt =
    /* istanbul ignore next */
    (cov_2dwuis6rfq().b[12][0]++, 80),
    // Start slowing down at this percentage
    finalSpeed =
    /* istanbul ignore next */
    (cov_2dwuis6rfq().b[13][0]++, 2),
    // Final progress speed
    maxProgress =
    /* istanbul ignore next */
    (cov_2dwuis6rfq().b[14][0]++, 95) // Don't go beyond this percentage
  } =
  /* istanbul ignore next */
  (cov_2dwuis6rfq().s[38]++, options);
  let progress =
  /* istanbul ignore next */
  (cov_2dwuis6rfq().s[39]++, 0);
  const startTime =
  /* istanbul ignore next */
  (cov_2dwuis6rfq().s[40]++, Date.now());
  const interval =
  /* istanbul ignore next */
  (cov_2dwuis6rfq().s[41]++, setInterval(() => {
    /* istanbul ignore next */
    cov_2dwuis6rfq().f[14]++;
    const elapsed =
    /* istanbul ignore next */
    (cov_2dwuis6rfq().s[42]++, Date.now() - startTime);
    const timeProgress =
    /* istanbul ignore next */
    (cov_2dwuis6rfq().s[43]++, elapsed / duration * 100);

    // Calculate speed based on progress
    let speed =
    /* istanbul ignore next */
    (cov_2dwuis6rfq().s[44]++, initialSpeed);
    /* istanbul ignore next */
    cov_2dwuis6rfq().s[45]++;
    if (progress > slowDownAt) {
      /* istanbul ignore next */
      cov_2dwuis6rfq().b[15][0]++;
      const slowFactor =
      /* istanbul ignore next */
      (cov_2dwuis6rfq().s[46]++, (progress - slowDownAt) / (100 - slowDownAt));
      /* istanbul ignore next */
      cov_2dwuis6rfq().s[47]++;
      speed = initialSpeed - (initialSpeed - finalSpeed) * slowFactor;
    } else
    /* istanbul ignore next */
    {
      cov_2dwuis6rfq().b[15][1]++;
    }

    // Add some randomness
    const randomFactor =
    /* istanbul ignore next */
    (cov_2dwuis6rfq().s[48]++, 0.5 + Math.random());
    /* istanbul ignore next */
    cov_2dwuis6rfq().s[49]++;
    progress += speed * randomFactor / 100;

    // Don't exceed max progress or 100%
    /* istanbul ignore next */
    cov_2dwuis6rfq().s[50]++;
    progress = Math.min(progress, maxProgress, timeProgress);
    /* istanbul ignore next */
    cov_2dwuis6rfq().s[51]++;
    updateCallback(Math.round(progress));

    // Stop if we've reached max progress or duration
    /* istanbul ignore next */
    cov_2dwuis6rfq().s[52]++;
    if (
    /* istanbul ignore next */
    (cov_2dwuis6rfq().b[17][0]++, progress >= maxProgress) ||
    /* istanbul ignore next */
    (cov_2dwuis6rfq().b[17][1]++, elapsed >= duration)) {
      /* istanbul ignore next */
      cov_2dwuis6rfq().b[16][0]++;
      cov_2dwuis6rfq().s[53]++;
      clearInterval(interval);
    } else
    /* istanbul ignore next */
    {
      cov_2dwuis6rfq().b[16][1]++;
    }
  }, 100));

  // Return function to stop simulation
  /* istanbul ignore next */
  cov_2dwuis6rfq().s[54]++;
  return () => {
    /* istanbul ignore next */
    cov_2dwuis6rfq().f[15]++;
    cov_2dwuis6rfq().s[55]++;
    return clearInterval(interval);
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,