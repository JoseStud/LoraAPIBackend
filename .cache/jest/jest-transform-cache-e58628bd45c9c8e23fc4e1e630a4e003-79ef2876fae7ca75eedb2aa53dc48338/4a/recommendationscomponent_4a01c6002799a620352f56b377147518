3eb41d49a9079665bed73ff3b039be73
/* istanbul ignore next */
function cov_110cwnlisl() {
  var path = "/home/runner/work/LoraAPIBackend/LoraAPIBackend/app/frontend/static/js/components/recommendations-component.js";
  var hash = "9c7e05c05e5babc3198866c15c7ff93ce5952d81";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/runner/work/LoraAPIBackend/LoraAPIBackend/app/frontend/static/js/components/recommendations-component.js",
    statementMap: {
      "0": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 221,
          column: 6
        }
      },
      "1": {
        start: {
          line: 16,
          column: 37
        },
        end: {
          line: 16,
          column: 63
        }
      },
      "2": {
        start: {
          line: 18,
          column: 16
        },
        end: {
          line: 18,
          column: 43
        }
      },
      "3": {
        start: {
          line: 21,
          column: 16
        },
        end: {
          line: 21,
          column: 81
        }
      },
      "4": {
        start: {
          line: 22,
          column: 16
        },
        end: {
          line: 22,
          column: 28
        }
      },
      "5": {
        start: {
          line: 111,
          column: 12
        },
        end: {
          line: 111,
          column: 35
        }
      },
      "6": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 113,
          column: 38
        }
      },
      "7": {
        start: {
          line: 118,
          column: 12
        },
        end: {
          line: 118,
          column: 36
        }
      },
      "8": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 125,
          column: 13
        }
      },
      "9": {
        start: {
          line: 123,
          column: 16
        },
        end: {
          line: 123,
          column: 102
        }
      },
      "10": {
        start: {
          line: 123,
          column: 69
        },
        end: {
          line: 123,
          column: 100
        }
      },
      "11": {
        start: {
          line: 124,
          column: 16
        },
        end: {
          line: 124,
          column: 45
        }
      },
      "12": {
        start: {
          line: 129,
          column: 12
        },
        end: {
          line: 131,
          column: 13
        }
      },
      "13": {
        start: {
          line: 130,
          column: 16
        },
        end: {
          line: 130,
          column: 82
        }
      },
      "14": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 137,
          column: 13
        }
      },
      "15": {
        start: {
          line: 136,
          column: 16
        },
        end: {
          line: 136,
          column: 78
        }
      },
      "16": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 145,
          column: 14
        }
      },
      "17": {
        start: {
          line: 146,
          column: 12
        },
        end: {
          line: 146,
          column: 41
        }
      },
      "18": {
        start: {
          line: 150,
          column: 12
        },
        end: {
          line: 150,
          column: 44
        }
      },
      "19": {
        start: {
          line: 151,
          column: 12
        },
        end: {
          line: 151,
          column: 39
        }
      },
      "20": {
        start: {
          line: 152,
          column: 12
        },
        end: {
          line: 152,
          column: 71
        }
      },
      "21": {
        start: {
          line: 154,
          column: 12
        },
        end: {
          line: 172,
          column: 13
        }
      },
      "22": {
        start: {
          line: 155,
          column: 32
        },
        end: {
          line: 155,
          column: 72
        }
      },
      "23": {
        start: {
          line: 155,
          column: 64
        },
        end: {
          line: 155,
          column: 71
        }
      },
      "24": {
        start: {
          line: 157,
          column: 16
        },
        end: {
          line: 160,
          column: 18
        }
      },
      "25": {
        start: {
          line: 162,
          column: 16
        },
        end: {
          line: 162,
          column: 75
        }
      },
      "26": {
        start: {
          line: 163,
          column: 16
        },
        end: {
          line: 163,
          column: 45
        }
      },
      "27": {
        start: {
          line: 164,
          column: 16
        },
        end: {
          line: 164,
          column: 70
        }
      },
      "28": {
        start: {
          line: 166,
          column: 16
        },
        end: {
          line: 166,
          column: 70
        }
      },
      "29": {
        start: {
          line: 167,
          column: 16
        },
        end: {
          line: 167,
          column: 64
        }
      },
      "30": {
        start: {
          line: 169,
          column: 16
        },
        end: {
          line: 171,
          column: 25
        }
      },
      "31": {
        start: {
          line: 170,
          column: 20
        },
        end: {
          line: 170,
          column: 53
        }
      },
      "32": {
        start: {
          line: 176,
          column: 12
        },
        end: {
          line: 176,
          column: 40
        }
      },
      "33": {
        start: {
          line: 177,
          column: 12
        },
        end: {
          line: 177,
          column: 39
        }
      },
      "34": {
        start: {
          line: 178,
          column: 12
        },
        end: {
          line: 178,
          column: 68
        }
      },
      "35": {
        start: {
          line: 180,
          column: 12
        },
        end: {
          line: 196,
          column: 13
        }
      },
      "36": {
        start: {
          line: 181,
          column: 16
        },
        end: {
          line: 184,
          column: 18
        }
      },
      "37": {
        start: {
          line: 186,
          column: 16
        },
        end: {
          line: 186,
          column: 69
        }
      },
      "38": {
        start: {
          line: 187,
          column: 16
        },
        end: {
          line: 187,
          column: 45
        }
      },
      "39": {
        start: {
          line: 188,
          column: 16
        },
        end: {
          line: 188,
          column: 64
        }
      },
      "40": {
        start: {
          line: 190,
          column: 16
        },
        end: {
          line: 190,
          column: 65
        }
      },
      "41": {
        start: {
          line: 191,
          column: 16
        },
        end: {
          line: 191,
          column: 56
        }
      },
      "42": {
        start: {
          line: 193,
          column: 16
        },
        end: {
          line: 195,
          column: 25
        }
      },
      "43": {
        start: {
          line: 194,
          column: 20
        },
        end: {
          line: 194,
          column: 49
        }
      },
      "44": {
        start: {
          line: 202,
          column: 12
        },
        end: {
          line: 206,
          column: 13
        }
      },
      "45": {
        start: {
          line: 203,
          column: 16
        },
        end: {
          line: 203,
          column: 53
        }
      },
      "46": {
        start: {
          line: 205,
          column: 16
        },
        end: {
          line: 205,
          column: 50
        }
      },
      "47": {
        start: {
          line: 210,
          column: 28
        },
        end: {
          line: 210,
          column: 65
        }
      },
      "48": {
        start: {
          line: 211,
          column: 12
        },
        end: {
          line: 211,
          column: 72
        }
      },
      "49": {
        start: {
          line: 213,
          column: 12
        },
        end: {
          line: 215,
          column: 13
        }
      },
      "50": {
        start: {
          line: 214,
          column: 16
        },
        end: {
          line: 214,
          column: 63
        }
      },
      "51": {
        start: {
          line: 219,
          column: 12
        },
        end: {
          line: 219,
          column: 53
        }
      },
      "52": {
        start: {
          line: 225,
          column: 0
        },
        end: {
          line: 225,
          column: 71
        }
      },
      "53": {
        start: {
          line: 226,
          column: 0
        },
        end: {
          line: 253,
          column: 1
        }
      },
      "54": {
        start: {
          line: 227,
          column: 4
        },
        end: {
          line: 227,
          column: 100
        }
      },
      "55": {
        start: {
          line: 230,
          column: 4
        },
        end: {
          line: 230,
          column: 64
        }
      },
      "56": {
        start: {
          line: 233,
          column: 24
        },
        end: {
          line: 243,
          column: 5
        }
      },
      "57": {
        start: {
          line: 234,
          column: 8
        },
        end: {
          line: 241,
          column: 9
        }
      },
      "58": {
        start: {
          line: 235,
          column: 12
        },
        end: {
          line: 239,
          column: 13
        }
      },
      "59": {
        start: {
          line: 236,
          column: 16
        },
        end: {
          line: 236,
          column: 112
        }
      },
      "60": {
        start: {
          line: 238,
          column: 16
        },
        end: {
          line: 238,
          column: 132
        }
      },
      "61": {
        start: {
          line: 240,
          column: 12
        },
        end: {
          line: 240,
          column: 24
        }
      },
      "62": {
        start: {
          line: 242,
          column: 8
        },
        end: {
          line: 242,
          column: 21
        }
      },
      "63": {
        start: {
          line: 245,
          column: 4
        },
        end: {
          line: 252,
          column: 5
        }
      },
      "64": {
        start: {
          line: 247,
          column: 25
        },
        end: {
          line: 247,
          column: 122
        }
      },
      "65": {
        start: {
          line: 247,
          column: 33
        },
        end: {
          line: 247,
          column: 120
        }
      },
      "66": {
        start: {
          line: 247,
          column: 54
        },
        end: {
          line: 247,
          column: 118
        }
      },
      "67": {
        start: {
          line: 248,
          column: 8
        },
        end: {
          line: 248,
          column: 69
        }
      },
      "68": {
        start: {
          line: 251,
          column: 29
        },
        end: {
          line: 251,
          column: 104
        }
      },
      "69": {
        start: {
          line: 251,
          column: 49
        },
        end: {
          line: 251,
          column: 96
        }
      },
      "70": {
        start: {
          line: 251,
          column: 68
        },
        end: {
          line: 251,
          column: 96
        }
      }
    },
    fnMap: {
      "0": {
        name: "createRecommendationsComponent",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 39
          }
        },
        loc: {
          start: {
            line: 8,
            column: 42
          },
          end: {
            line: 222,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 16,
            column: 23
          },
          end: {
            line: 16,
            column: 24
          }
        },
        loc: {
          start: {
            line: 16,
            column: 37
          },
          end: {
            line: 16,
            column: 63
          }
        },
        line: 16
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 17,
            column: 28
          },
          end: {
            line: 17,
            column: 29
          }
        },
        loc: {
          start: {
            line: 17,
            column: 38
          },
          end: {
            line: 19,
            column: 13
          }
        },
        line: 17
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 20,
            column: 26
          },
          end: {
            line: 20,
            column: 27
          }
        },
        loc: {
          start: {
            line: 20,
            column: 38
          },
          end: {
            line: 23,
            column: 13
          }
        },
        line: 20
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 109,
            column: 8
          },
          end: {
            line: 109,
            column: 9
          }
        },
        loc: {
          start: {
            line: 109,
            column: 27
          },
          end: {
            line: 114,
            column: 9
          }
        },
        line: 109
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 116,
            column: 9
          }
        },
        loc: {
          start: {
            line: 116,
            column: 35
          },
          end: {
            line: 119,
            column: 9
          }
        },
        line: 116
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 121,
            column: 8
          },
          end: {
            line: 121,
            column: 9
          }
        },
        loc: {
          start: {
            line: 121,
            column: 27
          },
          end: {
            line: 126,
            column: 9
          }
        },
        line: 121
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 123,
            column: 61
          },
          end: {
            line: 123,
            column: 62
          }
        },
        loc: {
          start: {
            line: 123,
            column: 69
          },
          end: {
            line: 123,
            column: 100
          }
        },
        line: 123
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 128,
            column: 8
          },
          end: {
            line: 128,
            column: 9
          }
        },
        loc: {
          start: {
            line: 128,
            column: 32
          },
          end: {
            line: 132,
            column: 9
          }
        },
        line: 128
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 134,
            column: 8
          },
          end: {
            line: 134,
            column: 9
          }
        },
        loc: {
          start: {
            line: 134,
            column: 25
          },
          end: {
            line: 138,
            column: 9
          }
        },
        line: 134
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 140,
            column: 8
          },
          end: {
            line: 140,
            column: 9
          }
        },
        loc: {
          start: {
            line: 140,
            column: 23
          },
          end: {
            line: 147,
            column: 9
          }
        },
        line: 140
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 149,
            column: 8
          },
          end: {
            line: 149,
            column: 9
          }
        },
        loc: {
          start: {
            line: 149,
            column: 37
          },
          end: {
            line: 173,
            column: 9
          }
        },
        line: 149
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 155,
            column: 56
          },
          end: {
            line: 155,
            column: 57
          }
        },
        loc: {
          start: {
            line: 155,
            column: 64
          },
          end: {
            line: 155,
            column: 71
          }
        },
        line: 155
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 169,
            column: 27
          },
          end: {
            line: 169,
            column: 28
          }
        },
        loc: {
          start: {
            line: 169,
            column: 33
          },
          end: {
            line: 171,
            column: 17
          }
        },
        line: 169
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 175,
            column: 8
          },
          end: {
            line: 175,
            column: 9
          }
        },
        loc: {
          start: {
            line: 175,
            column: 29
          },
          end: {
            line: 197,
            column: 9
          }
        },
        line: 175
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 193,
            column: 27
          },
          end: {
            line: 193,
            column: 28
          }
        },
        loc: {
          start: {
            line: 193,
            column: 33
          },
          end: {
            line: 195,
            column: 17
          }
        },
        line: 193
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 200,
            column: 8
          },
          end: {
            line: 200,
            column: 9
          }
        },
        loc: {
          start: {
            line: 200,
            column: 29
          },
          end: {
            line: 207,
            column: 9
          }
        },
        line: 200
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 209,
            column: 8
          },
          end: {
            line: 209,
            column: 9
          }
        },
        loc: {
          start: {
            line: 209,
            column: 41
          },
          end: {
            line: 216,
            column: 9
          }
        },
        line: 209
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 218,
            column: 8
          },
          end: {
            line: 218,
            column: 9
          }
        },
        loc: {
          start: {
            line: 218,
            column: 27
          },
          end: {
            line: 220,
            column: 9
          }
        },
        line: 218
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 233,
            column: 24
          },
          end: {
            line: 233,
            column: 25
          }
        },
        loc: {
          start: {
            line: 233,
            column: 30
          },
          end: {
            line: 243,
            column: 5
          }
        },
        line: 233
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 247,
            column: 25
          },
          end: {
            line: 247,
            column: 26
          }
        },
        loc: {
          start: {
            line: 247,
            column: 31
          },
          end: {
            line: 247,
            column: 122
          }
        },
        line: 247
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 251,
            column: 41
          },
          end: {
            line: 251,
            column: 42
          }
        },
        loc: {
          start: {
            line: 251,
            column: 47
          },
          end: {
            line: 251,
            column: 98
          }
        },
        line: 251
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 11,
            column: 23
          },
          end: {
            line: 11,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 11,
            column: 23
          },
          end: {
            line: 11,
            column: 42
          }
        }, {
          start: {
            line: 11,
            column: 46
          },
          end: {
            line: 11,
            column: 48
          }
        }],
        line: 11
      },
      "1": {
        loc: {
          start: {
            line: 16,
            column: 37
          },
          end: {
            line: 16,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 16,
            column: 37
          },
          end: {
            line: 16,
            column: 51
          }
        }, {
          start: {
            line: 16,
            column: 55
          },
          end: {
            line: 16,
            column: 63
          }
        }],
        line: 16
      },
      "2": {
        loc: {
          start: {
            line: 122,
            column: 12
          },
          end: {
            line: 125,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 122,
            column: 12
          },
          end: {
            line: 125,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 122
      },
      "3": {
        loc: {
          start: {
            line: 129,
            column: 12
          },
          end: {
            line: 131,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 129,
            column: 12
          },
          end: {
            line: 131,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 129
      },
      "4": {
        loc: {
          start: {
            line: 135,
            column: 12
          },
          end: {
            line: 137,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 135,
            column: 12
          },
          end: {
            line: 137,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 135
      },
      "5": {
        loc: {
          start: {
            line: 159,
            column: 39
          },
          end: {
            line: 159,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 159,
            column: 39
          },
          end: {
            line: 159,
            column: 58
          }
        }, {
          start: {
            line: 159,
            column: 62
          },
          end: {
            line: 159,
            column: 64
          }
        }],
        line: 159
      },
      "6": {
        loc: {
          start: {
            line: 183,
            column: 39
          },
          end: {
            line: 183,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 183,
            column: 39
          },
          end: {
            line: 183,
            column: 58
          }
        }, {
          start: {
            line: 183,
            column: 62
          },
          end: {
            line: 183,
            column: 64
          }
        }],
        line: 183
      },
      "7": {
        loc: {
          start: {
            line: 202,
            column: 12
          },
          end: {
            line: 206,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 202,
            column: 12
          },
          end: {
            line: 206,
            column: 13
          }
        }, {
          start: {
            line: 204,
            column: 19
          },
          end: {
            line: 206,
            column: 13
          }
        }],
        line: 202
      },
      "8": {
        loc: {
          start: {
            line: 209,
            column: 27
          },
          end: {
            line: 209,
            column: 39
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 209,
            column: 37
          },
          end: {
            line: 209,
            column: 39
          }
        }],
        line: 209
      },
      "9": {
        loc: {
          start: {
            line: 210,
            column: 28
          },
          end: {
            line: 210,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 210,
            column: 28
          },
          end: {
            line: 210,
            column: 42
          }
        }, {
          start: {
            line: 210,
            column: 46
          },
          end: {
            line: 210,
            column: 65
          }
        }],
        line: 210
      },
      "10": {
        loc: {
          start: {
            line: 213,
            column: 12
          },
          end: {
            line: 215,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 213,
            column: 12
          },
          end: {
            line: 215,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 213
      },
      "11": {
        loc: {
          start: {
            line: 226,
            column: 0
          },
          end: {
            line: 253,
            column: 1
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 226,
            column: 0
          },
          end: {
            line: 253,
            column: 1
          }
        }, {
          start: {
            line: 228,
            column: 7
          },
          end: {
            line: 253,
            column: 1
          }
        }],
        line: 226
      },
      "12": {
        loc: {
          start: {
            line: 234,
            column: 8
          },
          end: {
            line: 241,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 234,
            column: 8
          },
          end: {
            line: 241,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 234
      },
      "13": {
        loc: {
          start: {
            line: 238,
            column: 16
          },
          end: {
            line: 238,
            column: 131
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 238,
            column: 16
          },
          end: {
            line: 238,
            column: 32
          }
        }, {
          start: {
            line: 238,
            column: 36
          },
          end: {
            line: 238,
            column: 57
          }
        }, {
          start: {
            line: 238,
            column: 61
          },
          end: {
            line: 238,
            column: 131
          }
        }],
        line: 238
      },
      "14": {
        loc: {
          start: {
            line: 245,
            column: 4
          },
          end: {
            line: 252,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 245,
            column: 4
          },
          end: {
            line: 252,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 245
      },
      "15": {
        loc: {
          start: {
            line: 247,
            column: 33
          },
          end: {
            line: 247,
            column: 120
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 247,
            column: 33
          },
          end: {
            line: 247,
            column: 120
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 247
      },
      "16": {
        loc: {
          start: {
            line: 251,
            column: 49
          },
          end: {
            line: 251,
            column: 96
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 251,
            column: 49
          },
          end: {
            line: 251,
            column: 96
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 251
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "9c7e05c05e5babc3198866c15c7ff93ce5952d81"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_110cwnlisl = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_110cwnlisl();
/**
 * Refactored Recommendations Component
 * Uses the generic API data fetcher for cleaner, more maintainable code
 */

import apiDataFetcher from './shared/api-data-fetcher.js';
function createRecommendationsComponent() {
  /* istanbul ignore next */
  cov_110cwnlisl().f[0]++;
  cov_110cwnlisl().s[0]++;
  return {
    // Use API data fetcher for loading available LoRAs
    ...apiDataFetcher((
    /* istanbul ignore next */
    (cov_110cwnlisl().b[0][0]++, window?.BACKEND_URL) ||
    /* istanbul ignore next */
    (cov_110cwnlisl().b[0][1]++, '')) + '/adapters', {
      paginated: false,
      autoFetch: false,
      cacheKey: 'available_loras_cache',
      cacheDuration: 600000,
      // 10 minutes
      transform: response => {
        /* istanbul ignore next */
        cov_110cwnlisl().f[1]++;
        cov_110cwnlisl().s[1]++;
        return /* istanbul ignore next */(cov_110cwnlisl().b[1][0]++, response.items) ||
        /* istanbul ignore next */
        (cov_110cwnlisl().b[1][1]++, response);
      },
      successHandler: data => {
        /* istanbul ignore next */
        cov_110cwnlisl().f[2]++;
        cov_110cwnlisl().s[2]++;
        this.availableLoras = data;
      },
      errorHandler: _error => {
        /* istanbul ignore next */
        cov_110cwnlisl().f[3]++;
        cov_110cwnlisl().s[3]++;
        this.showToastMessage('Failed to load available LoRAs', 'error');
        /* istanbul ignore next */
        cov_110cwnlisl().s[4]++;
        return true;
      }
    }),
    // Explicitly declare local state to avoid relying on global fallbacks
    isLoading: false,
    loading: false,
    // Toast / notification state (explicit so templates don't reference globals)
    showToast: false,
    toastMessage: '',
    toastType: 'success',
    // Import/Export related (some pages reference these identifiers)
    exportConfig: {
      loras: false,
      lora_files: false,
      lora_metadata: false,
      lora_embeddings: false,
      generations: false,
      generation_range: 'all',
      date_from: '',
      date_to: '',
      user_data: false,
      system_config: false,
      analytics: false,
      format: 'zip',
      compression: 'balanced',
      split_archives: false,
      max_size_mb: 1024,
      encrypt: false,
      password: ''
    },
    importConfig: {
      mode: 'merge',
      conflict_resolution: 'ask',
      validate: true,
      backup_before: true,
      password: ''
    },
    isExporting: false,
    isImporting: false,
    estimatedSize: '0 MB',
    estimatedTime: '0 minutes',
    importFiles: [],
    importPreview: [],
    backupHistory: [],
    hasEncryptedFiles: false,
    showProgress: false,
    progressTitle: '',
    progressStep: '',
    progressPercent: 0,
    progressMessages: [],
    migrationProgress: {
      active: false,
      current_step: '',
      completed: 0,
      total: 100,
      status: 'idle',
      logs: []
    },
    // Tab state
    activeTab: 'similarity',
    // Available LoRAs
    availableLoras: [],
    // Similarity explorer
    selectedLoraId: '',
    selectedLora: null,
    weights: {
      semantic: 0.6,
      artistic: 0.3,
      technical: 0.1
    },
    similarityLimit: 10,
    similarityThreshold: 0.1,
    // Prompt-based recommendations
    promptText: '',
    promptLimit: 10,
    promptIncludeInactive: false,
    promptSuggestions: ['anime girl with pink hair', 'realistic portrait photography', 'fantasy landscape with magic', 'cyberpunk character design', 'traditional art style', 'watercolor painting effect', 'detailed facial features', 'medieval fantasy armor', 'modern city background', 'artistic lighting effects'],
    // Embedding status
    computingEmbeddings: false,
    rebuildingIndex: false,
    embeddingProgress: 0,
    embeddingStatus: '',
    async customInit() {
      /* istanbul ignore next */
      cov_110cwnlisl().f[4]++;
      cov_110cwnlisl().s[5]++;
      // Load available LoRAs using the API data fetcher
      await this.fetchData();
      // Mark component ready for template bindings
      /* istanbul ignore next */
      cov_110cwnlisl().s[6]++;
      this.isInitialized = true;
    },
    async loadAvailableLoras() {
      /* istanbul ignore next */
      cov_110cwnlisl().f[5]++;
      cov_110cwnlisl().s[7]++;
      // This method now uses the integrated API data fetcher
      return this.fetchData();
    },
    loadSelectedLora() {
      /* istanbul ignore next */
      cov_110cwnlisl().f[6]++;
      cov_110cwnlisl().s[8]++;
      if (this.selectedLoraId) {
        /* istanbul ignore next */
        cov_110cwnlisl().b[2][0]++;
        cov_110cwnlisl().s[9]++;
        this.selectedLora = this.availableLoras.find(lora => {
          /* istanbul ignore next */
          cov_110cwnlisl().f[7]++;
          cov_110cwnlisl().s[10]++;
          return lora.id === this.selectedLoraId;
        });
        /* istanbul ignore next */
        cov_110cwnlisl().s[11]++;
        this.updateRecommendations();
      } else
      /* istanbul ignore next */
      {
        cov_110cwnlisl().b[2][1]++;
      }
    },
    updateRecommendations() {
      /* istanbul ignore next */
      cov_110cwnlisl().f[8]++;
      cov_110cwnlisl().s[12]++;
      if (this.selectedLoraId) {
        /* istanbul ignore next */
        cov_110cwnlisl().b[3][0]++;
        cov_110cwnlisl().s[13]++;
        document.body.dispatchEvent(new CustomEvent('similarity-search'));
      } else
      /* istanbul ignore next */
      {
        cov_110cwnlisl().b[3][1]++;
      }
    },
    searchByPrompt() {
      /* istanbul ignore next */
      cov_110cwnlisl().f[9]++;
      cov_110cwnlisl().s[14]++;
      if (this.promptText.trim()) {
        /* istanbul ignore next */
        cov_110cwnlisl().b[4][0]++;
        cov_110cwnlisl().s[15]++;
        document.body.dispatchEvent(new CustomEvent('prompt-search'));
      } else
      /* istanbul ignore next */
      {
        cov_110cwnlisl().b[4][1]++;
      }
    },
    resetWeights() {
      /* istanbul ignore next */
      cov_110cwnlisl().f[10]++;
      cov_110cwnlisl().s[16]++;
      this.weights = {
        semantic: 0.6,
        artistic: 0.3,
        technical: 0.1
      };
      /* istanbul ignore next */
      cov_110cwnlisl().s[17]++;
      this.updateRecommendations();
    },
    async computeAllEmbeddings() {
      /* istanbul ignore next */
      cov_110cwnlisl().f[11]++;
      cov_110cwnlisl().s[18]++;
      this.computingEmbeddings = true;
      /* istanbul ignore next */
      cov_110cwnlisl().s[19]++;
      this.embeddingProgress = 0;
      /* istanbul ignore next */
      cov_110cwnlisl().s[20]++;
      this.embeddingStatus = 'Starting embedding computation...';
      /* istanbul ignore next */
      cov_110cwnlisl().s[21]++;
      try {
        const loraIds =
        /* istanbul ignore next */
        (cov_110cwnlisl().s[22]++, this.availableLoras.map(lora => {
          /* istanbul ignore next */
          cov_110cwnlisl().f[12]++;
          cov_110cwnlisl().s[23]++;
          return lora.id;
        }));
        /* istanbul ignore next */
        cov_110cwnlisl().s[24]++;
        await this.makeHttpRequest('POST', {
          lora_ids: loraIds,
          force: false
        }, {
          customEndpoint: (
          /* istanbul ignore next */
          (cov_110cwnlisl().b[5][0]++, window?.BACKEND_URL) ||
          /* istanbul ignore next */
          (cov_110cwnlisl().b[5][1]++, '')) + '/recommendations/compute-embeddings'
        });
        /* istanbul ignore next */
        cov_110cwnlisl().s[25]++;
        this.embeddingStatus = 'Embeddings computed successfully!';
        /* istanbul ignore next */
        cov_110cwnlisl().s[26]++;
        this.embeddingProgress = 100;
        /* istanbul ignore next */
        cov_110cwnlisl().s[27]++;
        this.showSuccess('Embeddings computed successfully!');
      } catch (error) {
        /* istanbul ignore next */
        cov_110cwnlisl().s[28]++;
        this.embeddingStatus = 'Failed to compute embeddings';
        /* istanbul ignore next */
        cov_110cwnlisl().s[29]++;
        this.handleError(error, 'computeAllEmbeddings');
      } finally {
        /* istanbul ignore next */
        cov_110cwnlisl().s[30]++;
        setTimeout(() => {
          /* istanbul ignore next */
          cov_110cwnlisl().f[13]++;
          cov_110cwnlisl().s[31]++;
          this.computingEmbeddings = false;
        }, 2000);
      }
    },
    async rebuildIndex() {
      /* istanbul ignore next */
      cov_110cwnlisl().f[14]++;
      cov_110cwnlisl().s[32]++;
      this.rebuildingIndex = true;
      /* istanbul ignore next */
      cov_110cwnlisl().s[33]++;
      this.embeddingProgress = 0;
      /* istanbul ignore next */
      cov_110cwnlisl().s[34]++;
      this.embeddingStatus = 'Rebuilding similarity index...';
      /* istanbul ignore next */
      cov_110cwnlisl().s[35]++;
      try {
        /* istanbul ignore next */
        cov_110cwnlisl().s[36]++;
        await this.makeHttpRequest('POST', null, {
          customEndpoint: (
          /* istanbul ignore next */
          (cov_110cwnlisl().b[6][0]++, window?.BACKEND_URL) ||
          /* istanbul ignore next */
          (cov_110cwnlisl().b[6][1]++, '')) + '/recommendations/rebuild-index'
        });
        /* istanbul ignore next */
        cov_110cwnlisl().s[37]++;
        this.embeddingStatus = 'Index rebuilt successfully!';
        /* istanbul ignore next */
        cov_110cwnlisl().s[38]++;
        this.embeddingProgress = 100;
        /* istanbul ignore next */
        cov_110cwnlisl().s[39]++;
        this.showSuccess('Index rebuilt successfully!');
      } catch (error) {
        /* istanbul ignore next */
        cov_110cwnlisl().s[40]++;
        this.embeddingStatus = 'Failed to rebuild index';
        /* istanbul ignore next */
        cov_110cwnlisl().s[41]++;
        this.handleError(error, 'rebuildIndex');
      } finally {
        /* istanbul ignore next */
        cov_110cwnlisl().s[42]++;
        setTimeout(() => {
          /* istanbul ignore next */
          cov_110cwnlisl().f[15]++;
          cov_110cwnlisl().s[43]++;
          this.rebuildingIndex = false;
        }, 2000);
      }
    },
    // Helper methods (previously provided by AlpineMixins)
    showSuccess(message) {
      /* istanbul ignore next */
      cov_110cwnlisl().f[16]++;
      cov_110cwnlisl().s[44]++;
      // Implementation for success notifications
      if (window.showToast) {
        /* istanbul ignore next */
        cov_110cwnlisl().b[7][0]++;
        cov_110cwnlisl().s[45]++;
        window.showToast(message, 'success');
      } else {
        /* istanbul ignore next */
        cov_110cwnlisl().b[7][1]++;
        cov_110cwnlisl().s[46]++;
        window.DevLogger?.info?.(message);
      }
    },
    handleError(error, context =
    /* istanbul ignore next */
    (cov_110cwnlisl().b[8][0]++, '')) {
      /* istanbul ignore next */
      cov_110cwnlisl().f[17]++;
      const message =
      /* istanbul ignore next */
      (cov_110cwnlisl().s[47]++,
      /* istanbul ignore next */
      (cov_110cwnlisl().b[9][0]++, error?.message) ||
      /* istanbul ignore next */
      (cov_110cwnlisl().b[9][1]++, 'An error occurred'));
      /* istanbul ignore next */
      cov_110cwnlisl().s[48]++;
      window.DevLogger?.error?.(`[${context}] ${message}`, error);
      /* istanbul ignore next */
      cov_110cwnlisl().s[49]++;
      if (window.showToast) {
        /* istanbul ignore next */
        cov_110cwnlisl().b[10][0]++;
        cov_110cwnlisl().s[50]++;
        window.showToast(`Error: ${message}`, 'error');
      } else
      /* istanbul ignore next */
      {
        cov_110cwnlisl().b[10][1]++;
      }
    },
    viewHealthReport() {
      /* istanbul ignore next */
      cov_110cwnlisl().f[18]++;
      cov_110cwnlisl().s[51]++;
      window.open('/reports/health', '_blank');
    }
  };
}

// Export the component factory and register once with ComponentLoader
/* istanbul ignore next */
cov_110cwnlisl().s[52]++;
window.createRecommendationsComponent = createRecommendationsComponent;
/* istanbul ignore next */
cov_110cwnlisl().s[53]++;
if (window.ComponentLoader) {
  /* istanbul ignore next */
  cov_110cwnlisl().b[11][0]++;
  cov_110cwnlisl().s[54]++;
  window.ComponentLoader.registerComponent('recommendationsData', createRecommendationsComponent);
} else {
  /* istanbul ignore next */
  cov_110cwnlisl().b[11][1]++;
  cov_110cwnlisl().s[55]++;
  // Ensure the factory is available globally (no accidental space in property name)
  window.recommendationsData = createRecommendationsComponent;

  // If ComponentLoader appears later, register automatically
  /* istanbul ignore next */
  cov_110cwnlisl().s[56]++;
  const tryRegister = () => {
    /* istanbul ignore next */
    cov_110cwnlisl().f[19]++;
    cov_110cwnlisl().s[57]++;
    if (window.ComponentLoader) {
      /* istanbul ignore next */
      cov_110cwnlisl().b[12][0]++;
      cov_110cwnlisl().s[58]++;
      try {
        /* istanbul ignore next */
        cov_110cwnlisl().s[59]++;
        window.ComponentLoader.registerComponent('recommendationsData', createRecommendationsComponent);
      } catch (e) {
        /* istanbul ignore next */
        cov_110cwnlisl().s[60]++;
        /* istanbul ignore next */
        (cov_110cwnlisl().b[13][0]++, window.DevLogger) &&
        /* istanbul ignore next */
        (cov_110cwnlisl().b[13][1]++, window.DevLogger.warn) &&
        /* istanbul ignore next */
        (cov_110cwnlisl().b[13][2]++, window.DevLogger.warn('[recommendations] deferred register failed', e));
      }
      /* istanbul ignore next */
      cov_110cwnlisl().s[61]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_110cwnlisl().b[12][1]++;
    }
    cov_110cwnlisl().s[62]++;
    return false;
  };
  /* istanbul ignore next */
  cov_110cwnlisl().s[63]++;
  if (!tryRegister()) {
    /* istanbul ignore next */
    cov_110cwnlisl().b[14][0]++;
    cov_110cwnlisl().s[64]++;
    // Listen for ComponentLoader initialization
    const onLoader = () => {
      /* istanbul ignore next */
      cov_110cwnlisl().f[20]++;
      cov_110cwnlisl().s[65]++;
      if (tryRegister()) {
        /* istanbul ignore next */
        cov_110cwnlisl().b[15][0]++;
        cov_110cwnlisl().s[66]++;
        document.removeEventListener('componentloader:ready', onLoader);
      } else
      /* istanbul ignore next */
      {
        cov_110cwnlisl().b[15][1]++;
      }
    };
    /* istanbul ignore next */
    cov_110cwnlisl().s[67]++;
    document.addEventListener('componentloader:ready', onLoader);

    // Also poll as a last resort
    const pollInterval =
    /* istanbul ignore next */
    (cov_110cwnlisl().s[68]++, setInterval(() => {
      /* istanbul ignore next */
      cov_110cwnlisl().f[21]++;
      cov_110cwnlisl().s[69]++;
      if (tryRegister()) {
        /* istanbul ignore next */
        cov_110cwnlisl().b[16][0]++;
        cov_110cwnlisl().s[70]++;
        clearInterval(pollInterval);
      } else
      /* istanbul ignore next */
      {
        cov_110cwnlisl().b[16][1]++;
      }
    }, 200));
  } else
  /* istanbul ignore next */
  {
    cov_110cwnlisl().b[14][1]++;
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMTEwY3dubGlzbCIsImFjdHVhbENvdmVyYWdlIiwiYXBpRGF0YUZldGNoZXIiLCJjcmVhdGVSZWNvbW1lbmRhdGlvbnNDb21wb25lbnQiLCJmIiwicyIsImIiLCJ3aW5kb3ciLCJCQUNLRU5EX1VSTCIsInBhZ2luYXRlZCIsImF1dG9GZXRjaCIsImNhY2hlS2V5IiwiY2FjaGVEdXJhdGlvbiIsInRyYW5zZm9ybSIsInJlc3BvbnNlIiwiaXRlbXMiLCJzdWNjZXNzSGFuZGxlciIsImRhdGEiLCJhdmFpbGFibGVMb3JhcyIsImVycm9ySGFuZGxlciIsIl9lcnJvciIsInNob3dUb2FzdE1lc3NhZ2UiLCJpc0xvYWRpbmciLCJsb2FkaW5nIiwic2hvd1RvYXN0IiwidG9hc3RNZXNzYWdlIiwidG9hc3RUeXBlIiwiZXhwb3J0Q29uZmlnIiwibG9yYXMiLCJsb3JhX2ZpbGVzIiwibG9yYV9tZXRhZGF0YSIsImxvcmFfZW1iZWRkaW5ncyIsImdlbmVyYXRpb25zIiwiZ2VuZXJhdGlvbl9yYW5nZSIsImRhdGVfZnJvbSIsImRhdGVfdG8iLCJ1c2VyX2RhdGEiLCJzeXN0ZW1fY29uZmlnIiwiYW5hbHl0aWNzIiwiZm9ybWF0IiwiY29tcHJlc3Npb24iLCJzcGxpdF9hcmNoaXZlcyIsIm1heF9zaXplX21iIiwiZW5jcnlwdCIsInBhc3N3b3JkIiwiaW1wb3J0Q29uZmlnIiwibW9kZSIsImNvbmZsaWN0X3Jlc29sdXRpb24iLCJ2YWxpZGF0ZSIsImJhY2t1cF9iZWZvcmUiLCJpc0V4cG9ydGluZyIsImlzSW1wb3J0aW5nIiwiZXN0aW1hdGVkU2l6ZSIsImVzdGltYXRlZFRpbWUiLCJpbXBvcnRGaWxlcyIsImltcG9ydFByZXZpZXciLCJiYWNrdXBIaXN0b3J5IiwiaGFzRW5jcnlwdGVkRmlsZXMiLCJzaG93UHJvZ3Jlc3MiLCJwcm9ncmVzc1RpdGxlIiwicHJvZ3Jlc3NTdGVwIiwicHJvZ3Jlc3NQZXJjZW50IiwicHJvZ3Jlc3NNZXNzYWdlcyIsIm1pZ3JhdGlvblByb2dyZXNzIiwiYWN0aXZlIiwiY3VycmVudF9zdGVwIiwiY29tcGxldGVkIiwidG90YWwiLCJzdGF0dXMiLCJsb2dzIiwiYWN0aXZlVGFiIiwic2VsZWN0ZWRMb3JhSWQiLCJzZWxlY3RlZExvcmEiLCJ3ZWlnaHRzIiwic2VtYW50aWMiLCJhcnRpc3RpYyIsInRlY2huaWNhbCIsInNpbWlsYXJpdHlMaW1pdCIsInNpbWlsYXJpdHlUaHJlc2hvbGQiLCJwcm9tcHRUZXh0IiwicHJvbXB0TGltaXQiLCJwcm9tcHRJbmNsdWRlSW5hY3RpdmUiLCJwcm9tcHRTdWdnZXN0aW9ucyIsImNvbXB1dGluZ0VtYmVkZGluZ3MiLCJyZWJ1aWxkaW5nSW5kZXgiLCJlbWJlZGRpbmdQcm9ncmVzcyIsImVtYmVkZGluZ1N0YXR1cyIsImN1c3RvbUluaXQiLCJmZXRjaERhdGEiLCJpc0luaXRpYWxpemVkIiwibG9hZEF2YWlsYWJsZUxvcmFzIiwibG9hZFNlbGVjdGVkTG9yYSIsImZpbmQiLCJsb3JhIiwiaWQiLCJ1cGRhdGVSZWNvbW1lbmRhdGlvbnMiLCJkb2N1bWVudCIsImJvZHkiLCJkaXNwYXRjaEV2ZW50IiwiQ3VzdG9tRXZlbnQiLCJzZWFyY2hCeVByb21wdCIsInRyaW0iLCJyZXNldFdlaWdodHMiLCJjb21wdXRlQWxsRW1iZWRkaW5ncyIsImxvcmFJZHMiLCJtYXAiLCJtYWtlSHR0cFJlcXVlc3QiLCJsb3JhX2lkcyIsImZvcmNlIiwiY3VzdG9tRW5kcG9pbnQiLCJzaG93U3VjY2VzcyIsImVycm9yIiwiaGFuZGxlRXJyb3IiLCJzZXRUaW1lb3V0IiwicmVidWlsZEluZGV4IiwibWVzc2FnZSIsIkRldkxvZ2dlciIsImluZm8iLCJjb250ZXh0Iiwidmlld0hlYWx0aFJlcG9ydCIsIm9wZW4iLCJDb21wb25lbnRMb2FkZXIiLCJyZWdpc3RlckNvbXBvbmVudCIsInJlY29tbWVuZGF0aW9uc0RhdGEiLCJ0cnlSZWdpc3RlciIsImUiLCJ3YXJuIiwib25Mb2FkZXIiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiYWRkRXZlbnRMaXN0ZW5lciIsInBvbGxJbnRlcnZhbCIsInNldEludGVydmFsIiwiY2xlYXJJbnRlcnZhbCJdLCJzb3VyY2VzIjpbInJlY29tbWVuZGF0aW9ucy1jb21wb25lbnQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBSZWZhY3RvcmVkIFJlY29tbWVuZGF0aW9ucyBDb21wb25lbnRcbiAqIFVzZXMgdGhlIGdlbmVyaWMgQVBJIGRhdGEgZmV0Y2hlciBmb3IgY2xlYW5lciwgbW9yZSBtYWludGFpbmFibGUgY29kZVxuICovXG5cbmltcG9ydCBhcGlEYXRhRmV0Y2hlciBmcm9tICcuL3NoYXJlZC9hcGktZGF0YS1mZXRjaGVyLmpzJztcblxuZnVuY3Rpb24gY3JlYXRlUmVjb21tZW5kYXRpb25zQ29tcG9uZW50KCkge1xuICAgIHJldHVybiB7XG4gICAgICAgIC8vIFVzZSBBUEkgZGF0YSBmZXRjaGVyIGZvciBsb2FkaW5nIGF2YWlsYWJsZSBMb1JBc1xuICAgIC4uLmFwaURhdGFGZXRjaGVyKCh3aW5kb3c/LkJBQ0tFTkRfVVJMIHx8ICcnKSArICcvYWRhcHRlcnMnLCB7XG4gICAgICAgICAgICBwYWdpbmF0ZWQ6IGZhbHNlLFxuICAgICAgICAgICAgYXV0b0ZldGNoOiBmYWxzZSxcbiAgICAgICAgICAgIGNhY2hlS2V5OiAnYXZhaWxhYmxlX2xvcmFzX2NhY2hlJyxcbiAgICAgICAgICAgIGNhY2hlRHVyYXRpb246IDYwMDAwMCwgLy8gMTAgbWludXRlc1xuICAgICAgICAgICAgdHJhbnNmb3JtOiAocmVzcG9uc2UpID0+IHJlc3BvbnNlLml0ZW1zIHx8IHJlc3BvbnNlLFxuICAgICAgICAgICAgc3VjY2Vzc0hhbmRsZXI6IChkYXRhKSA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5hdmFpbGFibGVMb3JhcyA9IGRhdGE7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZXJyb3JIYW5kbGVyOiAoX2Vycm9yKSA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5zaG93VG9hc3RNZXNzYWdlKCdGYWlsZWQgdG8gbG9hZCBhdmFpbGFibGUgTG9SQXMnLCAnZXJyb3InKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSksXG5cbiAgICAgICAgLy8gRXhwbGljaXRseSBkZWNsYXJlIGxvY2FsIHN0YXRlIHRvIGF2b2lkIHJlbHlpbmcgb24gZ2xvYmFsIGZhbGxiYWNrc1xuICAgICAgICBpc0xvYWRpbmc6IGZhbHNlLFxuICAgICAgICBsb2FkaW5nOiBmYWxzZSxcbiAgICAgICAgLy8gVG9hc3QgLyBub3RpZmljYXRpb24gc3RhdGUgKGV4cGxpY2l0IHNvIHRlbXBsYXRlcyBkb24ndCByZWZlcmVuY2UgZ2xvYmFscylcbiAgICAgICAgc2hvd1RvYXN0OiBmYWxzZSxcbiAgICAgICAgdG9hc3RNZXNzYWdlOiAnJyxcbiAgICAgICAgdG9hc3RUeXBlOiAnc3VjY2VzcycsXG5cbiAgICAgICAgLy8gSW1wb3J0L0V4cG9ydCByZWxhdGVkIChzb21lIHBhZ2VzIHJlZmVyZW5jZSB0aGVzZSBpZGVudGlmaWVycylcbiAgICAgICAgZXhwb3J0Q29uZmlnOiB7XG4gICAgICAgICAgICBsb3JhczogZmFsc2UsXG4gICAgICAgICAgICBsb3JhX2ZpbGVzOiBmYWxzZSxcbiAgICAgICAgICAgIGxvcmFfbWV0YWRhdGE6IGZhbHNlLFxuICAgICAgICAgICAgbG9yYV9lbWJlZGRpbmdzOiBmYWxzZSxcbiAgICAgICAgICAgIGdlbmVyYXRpb25zOiBmYWxzZSxcbiAgICAgICAgICAgIGdlbmVyYXRpb25fcmFuZ2U6ICdhbGwnLFxuICAgICAgICAgICAgZGF0ZV9mcm9tOiAnJyxcbiAgICAgICAgICAgIGRhdGVfdG86ICcnLFxuICAgICAgICAgICAgdXNlcl9kYXRhOiBmYWxzZSxcbiAgICAgICAgICAgIHN5c3RlbV9jb25maWc6IGZhbHNlLFxuICAgICAgICAgICAgYW5hbHl0aWNzOiBmYWxzZSxcbiAgICAgICAgICAgIGZvcm1hdDogJ3ppcCcsXG4gICAgICAgICAgICBjb21wcmVzc2lvbjogJ2JhbGFuY2VkJyxcbiAgICAgICAgICAgIHNwbGl0X2FyY2hpdmVzOiBmYWxzZSxcbiAgICAgICAgICAgIG1heF9zaXplX21iOiAxMDI0LFxuICAgICAgICAgICAgZW5jcnlwdDogZmFsc2UsXG4gICAgICAgICAgICBwYXNzd29yZDogJydcbiAgICAgICAgfSxcbiAgICAgICAgaW1wb3J0Q29uZmlnOiB7IG1vZGU6ICdtZXJnZScsIGNvbmZsaWN0X3Jlc29sdXRpb246ICdhc2snLCB2YWxpZGF0ZTogdHJ1ZSwgYmFja3VwX2JlZm9yZTogdHJ1ZSwgcGFzc3dvcmQ6ICcnIH0sXG4gICAgICAgIGlzRXhwb3J0aW5nOiBmYWxzZSxcbiAgICAgICAgaXNJbXBvcnRpbmc6IGZhbHNlLFxuICAgICAgICBlc3RpbWF0ZWRTaXplOiAnMCBNQicsXG4gICAgICAgIGVzdGltYXRlZFRpbWU6ICcwIG1pbnV0ZXMnLFxuICAgICAgICBpbXBvcnRGaWxlczogW10sXG4gICAgICAgIGltcG9ydFByZXZpZXc6IFtdLFxuICAgICAgICBiYWNrdXBIaXN0b3J5OiBbXSxcbiAgICAgICAgaGFzRW5jcnlwdGVkRmlsZXM6IGZhbHNlLFxuICAgICAgICBzaG93UHJvZ3Jlc3M6IGZhbHNlLFxuICAgICAgICBwcm9ncmVzc1RpdGxlOiAnJyxcbiAgICAgICAgcHJvZ3Jlc3NTdGVwOiAnJyxcbiAgICAgICAgcHJvZ3Jlc3NQZXJjZW50OiAwLFxuICAgICAgICBwcm9ncmVzc01lc3NhZ2VzOiBbXSxcbiAgICAgICAgbWlncmF0aW9uUHJvZ3Jlc3M6IHsgYWN0aXZlOiBmYWxzZSwgY3VycmVudF9zdGVwOiAnJywgY29tcGxldGVkOiAwLCB0b3RhbDogMTAwLCBzdGF0dXM6ICdpZGxlJywgbG9nczogW10gfSxcbiAgICAgICAgLy8gVGFiIHN0YXRlXG4gICAgICAgIGFjdGl2ZVRhYjogJ3NpbWlsYXJpdHknLFxuICAgICAgICBcbiAgICAgICAgLy8gQXZhaWxhYmxlIExvUkFzXG4gICAgICAgIGF2YWlsYWJsZUxvcmFzOiBbXSxcbiAgICAgICAgXG4gICAgICAgIC8vIFNpbWlsYXJpdHkgZXhwbG9yZXJcbiAgICAgICAgc2VsZWN0ZWRMb3JhSWQ6ICcnLFxuICAgICAgICBzZWxlY3RlZExvcmE6IG51bGwsXG4gICAgICAgIHdlaWdodHM6IHtcbiAgICAgICAgICAgIHNlbWFudGljOiAwLjYsXG4gICAgICAgICAgICBhcnRpc3RpYzogMC4zLFxuICAgICAgICAgICAgdGVjaG5pY2FsOiAwLjFcbiAgICAgICAgfSxcbiAgICAgICAgc2ltaWxhcml0eUxpbWl0OiAxMCxcbiAgICAgICAgc2ltaWxhcml0eVRocmVzaG9sZDogMC4xLFxuICAgICAgICBcbiAgICAgICAgLy8gUHJvbXB0LWJhc2VkIHJlY29tbWVuZGF0aW9uc1xuICAgICAgICBwcm9tcHRUZXh0OiAnJyxcbiAgICAgICAgcHJvbXB0TGltaXQ6IDEwLFxuICAgICAgICBwcm9tcHRJbmNsdWRlSW5hY3RpdmU6IGZhbHNlLFxuICAgICAgICBwcm9tcHRTdWdnZXN0aW9uczogW1xuICAgICAgICAgICAgJ2FuaW1lIGdpcmwgd2l0aCBwaW5rIGhhaXInLFxuICAgICAgICAgICAgJ3JlYWxpc3RpYyBwb3J0cmFpdCBwaG90b2dyYXBoeScsXG4gICAgICAgICAgICAnZmFudGFzeSBsYW5kc2NhcGUgd2l0aCBtYWdpYycsXG4gICAgICAgICAgICAnY3liZXJwdW5rIGNoYXJhY3RlciBkZXNpZ24nLFxuICAgICAgICAgICAgJ3RyYWRpdGlvbmFsIGFydCBzdHlsZScsXG4gICAgICAgICAgICAnd2F0ZXJjb2xvciBwYWludGluZyBlZmZlY3QnLFxuICAgICAgICAgICAgJ2RldGFpbGVkIGZhY2lhbCBmZWF0dXJlcycsXG4gICAgICAgICAgICAnbWVkaWV2YWwgZmFudGFzeSBhcm1vcicsXG4gICAgICAgICAgICAnbW9kZXJuIGNpdHkgYmFja2dyb3VuZCcsXG4gICAgICAgICAgICAnYXJ0aXN0aWMgbGlnaHRpbmcgZWZmZWN0cydcbiAgICAgICAgXSxcbiAgICAgICAgXG4gICAgICAgIC8vIEVtYmVkZGluZyBzdGF0dXNcbiAgICAgICAgY29tcHV0aW5nRW1iZWRkaW5nczogZmFsc2UsXG4gICAgICAgIHJlYnVpbGRpbmdJbmRleDogZmFsc2UsXG4gICAgICAgIGVtYmVkZGluZ1Byb2dyZXNzOiAwLFxuICAgICAgICBlbWJlZGRpbmdTdGF0dXM6ICcnLFxuXG4gICAgICAgIGFzeW5jIGN1c3RvbUluaXQoKSB7XG4gICAgICAgICAgICAvLyBMb2FkIGF2YWlsYWJsZSBMb1JBcyB1c2luZyB0aGUgQVBJIGRhdGEgZmV0Y2hlclxuICAgICAgICAgICAgYXdhaXQgdGhpcy5mZXRjaERhdGEoKTtcbiAgICAgICAgICAgIC8vIE1hcmsgY29tcG9uZW50IHJlYWR5IGZvciB0ZW1wbGF0ZSBiaW5kaW5nc1xuICAgICAgICAgICAgdGhpcy5pc0luaXRpYWxpemVkID0gdHJ1ZTtcbiAgICAgICAgfSxcblxuICAgICAgICBhc3luYyBsb2FkQXZhaWxhYmxlTG9yYXMoKSB7XG4gICAgICAgICAgICAvLyBUaGlzIG1ldGhvZCBub3cgdXNlcyB0aGUgaW50ZWdyYXRlZCBBUEkgZGF0YSBmZXRjaGVyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5mZXRjaERhdGEoKTtcbiAgICAgICAgfSxcblxuICAgICAgICBsb2FkU2VsZWN0ZWRMb3JhKCkge1xuICAgICAgICAgICAgaWYgKHRoaXMuc2VsZWN0ZWRMb3JhSWQpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdGVkTG9yYSA9IHRoaXMuYXZhaWxhYmxlTG9yYXMuZmluZChsb3JhID0+IGxvcmEuaWQgPT09IHRoaXMuc2VsZWN0ZWRMb3JhSWQpO1xuICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlUmVjb21tZW5kYXRpb25zKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG5cbiAgICAgICAgdXBkYXRlUmVjb21tZW5kYXRpb25zKCkge1xuICAgICAgICAgICAgaWYgKHRoaXMuc2VsZWN0ZWRMb3JhSWQpIHtcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5ib2R5LmRpc3BhdGNoRXZlbnQobmV3IEN1c3RvbUV2ZW50KCdzaW1pbGFyaXR5LXNlYXJjaCcpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcblxuICAgICAgICBzZWFyY2hCeVByb21wdCgpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLnByb21wdFRleHQudHJpbSgpKSB7XG4gICAgICAgICAgICAgICAgZG9jdW1lbnQuYm9keS5kaXNwYXRjaEV2ZW50KG5ldyBDdXN0b21FdmVudCgncHJvbXB0LXNlYXJjaCcpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcblxuICAgICAgICByZXNldFdlaWdodHMoKSB7XG4gICAgICAgICAgICB0aGlzLndlaWdodHMgPSB7XG4gICAgICAgICAgICAgICAgc2VtYW50aWM6IDAuNixcbiAgICAgICAgICAgICAgICBhcnRpc3RpYzogMC4zLFxuICAgICAgICAgICAgICAgIHRlY2huaWNhbDogMC4xXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgdGhpcy51cGRhdGVSZWNvbW1lbmRhdGlvbnMoKTtcbiAgICAgICAgfSxcblxuICAgICAgICBhc3luYyBjb21wdXRlQWxsRW1iZWRkaW5ncygpIHtcbiAgICAgICAgICAgIHRoaXMuY29tcHV0aW5nRW1iZWRkaW5ncyA9IHRydWU7XG4gICAgICAgICAgICB0aGlzLmVtYmVkZGluZ1Byb2dyZXNzID0gMDtcbiAgICAgICAgICAgIHRoaXMuZW1iZWRkaW5nU3RhdHVzID0gJ1N0YXJ0aW5nIGVtYmVkZGluZyBjb21wdXRhdGlvbi4uLic7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgY29uc3QgbG9yYUlkcyA9IHRoaXMuYXZhaWxhYmxlTG9yYXMubWFwKGxvcmEgPT4gbG9yYS5pZCk7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgYXdhaXQgdGhpcy5tYWtlSHR0cFJlcXVlc3QoJ1BPU1QnLCBcbiAgICAgICAgICAgICAgICAgICAgeyBsb3JhX2lkczogbG9yYUlkcywgZm9yY2U6IGZhbHNlIH0sXG4gICAgICAgICAgICAgICAgICAgIHsgY3VzdG9tRW5kcG9pbnQ6ICh3aW5kb3c/LkJBQ0tFTkRfVVJMIHx8ICcnKSArICcvcmVjb21tZW5kYXRpb25zL2NvbXB1dGUtZW1iZWRkaW5ncycgfVxuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgdGhpcy5lbWJlZGRpbmdTdGF0dXMgPSAnRW1iZWRkaW5ncyBjb21wdXRlZCBzdWNjZXNzZnVsbHkhJztcbiAgICAgICAgICAgICAgICB0aGlzLmVtYmVkZGluZ1Byb2dyZXNzID0gMTAwO1xuICAgICAgICAgICAgICAgIHRoaXMuc2hvd1N1Y2Nlc3MoJ0VtYmVkZGluZ3MgY29tcHV0ZWQgc3VjY2Vzc2Z1bGx5IScpO1xuICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmVtYmVkZGluZ1N0YXR1cyA9ICdGYWlsZWQgdG8gY29tcHV0ZSBlbWJlZGRpbmdzJztcbiAgICAgICAgICAgICAgICB0aGlzLmhhbmRsZUVycm9yKGVycm9yLCAnY29tcHV0ZUFsbEVtYmVkZGluZ3MnKTtcbiAgICAgICAgICAgIH0gZmluYWxseSB7XG4gICAgICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY29tcHV0aW5nRW1iZWRkaW5ncyA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIH0sIDIwMDApO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuXG4gICAgICAgIGFzeW5jIHJlYnVpbGRJbmRleCgpIHtcbiAgICAgICAgICAgIHRoaXMucmVidWlsZGluZ0luZGV4ID0gdHJ1ZTtcbiAgICAgICAgICAgIHRoaXMuZW1iZWRkaW5nUHJvZ3Jlc3MgPSAwO1xuICAgICAgICAgICAgdGhpcy5lbWJlZGRpbmdTdGF0dXMgPSAnUmVidWlsZGluZyBzaW1pbGFyaXR5IGluZGV4Li4uJztcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBhd2FpdCB0aGlzLm1ha2VIdHRwUmVxdWVzdCgnUE9TVCcsIFxuICAgICAgICAgICAgICAgICAgICBudWxsLFxuICAgICAgICAgICAgICAgICAgICB7IGN1c3RvbUVuZHBvaW50OiAod2luZG93Py5CQUNLRU5EX1VSTCB8fCAnJykgKyAnL3JlY29tbWVuZGF0aW9ucy9yZWJ1aWxkLWluZGV4JyB9XG4gICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICB0aGlzLmVtYmVkZGluZ1N0YXR1cyA9ICdJbmRleCByZWJ1aWx0IHN1Y2Nlc3NmdWxseSEnO1xuICAgICAgICAgICAgICAgIHRoaXMuZW1iZWRkaW5nUHJvZ3Jlc3MgPSAxMDA7XG4gICAgICAgICAgICAgICAgdGhpcy5zaG93U3VjY2VzcygnSW5kZXggcmVidWlsdCBzdWNjZXNzZnVsbHkhJyk7XG4gICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgIHRoaXMuZW1iZWRkaW5nU3RhdHVzID0gJ0ZhaWxlZCB0byByZWJ1aWxkIGluZGV4JztcbiAgICAgICAgICAgICAgICB0aGlzLmhhbmRsZUVycm9yKGVycm9yLCAncmVidWlsZEluZGV4Jyk7XG4gICAgICAgICAgICB9IGZpbmFsbHkge1xuICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnJlYnVpbGRpbmdJbmRleCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIH0sIDIwMDApO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuXG4gICAgICAgIC8vIEhlbHBlciBtZXRob2RzIChwcmV2aW91c2x5IHByb3ZpZGVkIGJ5IEFscGluZU1peGlucylcbiAgICAgICAgc2hvd1N1Y2Nlc3MobWVzc2FnZSkge1xuICAgICAgICAgICAgLy8gSW1wbGVtZW50YXRpb24gZm9yIHN1Y2Nlc3Mgbm90aWZpY2F0aW9uc1xuICAgICAgICAgICAgaWYgKHdpbmRvdy5zaG93VG9hc3QpIHtcbiAgICAgICAgICAgICAgICB3aW5kb3cuc2hvd1RvYXN0KG1lc3NhZ2UsICdzdWNjZXNzJyk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHdpbmRvdy5EZXZMb2dnZXI/LmluZm8/LihtZXNzYWdlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcblxuICAgICAgICBoYW5kbGVFcnJvcihlcnJvciwgY29udGV4dCA9ICcnKSB7XG4gICAgICAgICAgICBjb25zdCBtZXNzYWdlID0gZXJyb3I/Lm1lc3NhZ2UgfHwgJ0FuIGVycm9yIG9jY3VycmVkJztcbiAgICAgICAgICAgIHdpbmRvdy5EZXZMb2dnZXI/LmVycm9yPy4oYFske2NvbnRleHR9XSAke21lc3NhZ2V9YCwgZXJyb3IpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBpZiAod2luZG93LnNob3dUb2FzdCkge1xuICAgICAgICAgICAgICAgIHdpbmRvdy5zaG93VG9hc3QoYEVycm9yOiAke21lc3NhZ2V9YCwgJ2Vycm9yJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG5cbiAgICAgICAgdmlld0hlYWx0aFJlcG9ydCgpIHtcbiAgICAgICAgICAgIHdpbmRvdy5vcGVuKCcvcmVwb3J0cy9oZWFsdGgnLCAnX2JsYW5rJyk7XG4gICAgICAgIH1cbiAgICB9O1xufVxuXG4vLyBFeHBvcnQgdGhlIGNvbXBvbmVudCBmYWN0b3J5IGFuZCByZWdpc3RlciBvbmNlIHdpdGggQ29tcG9uZW50TG9hZGVyXG53aW5kb3cuY3JlYXRlUmVjb21tZW5kYXRpb25zQ29tcG9uZW50ID0gY3JlYXRlUmVjb21tZW5kYXRpb25zQ29tcG9uZW50O1xuaWYgKHdpbmRvdy5Db21wb25lbnRMb2FkZXIpIHtcbiAgICB3aW5kb3cuQ29tcG9uZW50TG9hZGVyLnJlZ2lzdGVyQ29tcG9uZW50KCdyZWNvbW1lbmRhdGlvbnNEYXRhJywgY3JlYXRlUmVjb21tZW5kYXRpb25zQ29tcG9uZW50KTtcbn0gZWxzZSB7XG4gICAgLy8gRW5zdXJlIHRoZSBmYWN0b3J5IGlzIGF2YWlsYWJsZSBnbG9iYWxseSAobm8gYWNjaWRlbnRhbCBzcGFjZSBpbiBwcm9wZXJ0eSBuYW1lKVxuICAgIHdpbmRvdy5yZWNvbW1lbmRhdGlvbnNEYXRhID0gY3JlYXRlUmVjb21tZW5kYXRpb25zQ29tcG9uZW50O1xuXG4gICAgLy8gSWYgQ29tcG9uZW50TG9hZGVyIGFwcGVhcnMgbGF0ZXIsIHJlZ2lzdGVyIGF1dG9tYXRpY2FsbHlcbiAgICBjb25zdCB0cnlSZWdpc3RlciA9ICgpID0+IHtcbiAgICAgICAgaWYgKHdpbmRvdy5Db21wb25lbnRMb2FkZXIpIHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgd2luZG93LkNvbXBvbmVudExvYWRlci5yZWdpc3RlckNvbXBvbmVudCgncmVjb21tZW5kYXRpb25zRGF0YScsIGNyZWF0ZVJlY29tbWVuZGF0aW9uc0NvbXBvbmVudCk7XG4gICAgICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgd2luZG93LkRldkxvZ2dlciAmJiB3aW5kb3cuRGV2TG9nZ2VyLndhcm4gJiYgd2luZG93LkRldkxvZ2dlci53YXJuKCdbcmVjb21tZW5kYXRpb25zXSBkZWZlcnJlZCByZWdpc3RlciBmYWlsZWQnLCBlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9O1xuXG4gICAgaWYgKCF0cnlSZWdpc3RlcigpKSB7XG4gICAgICAgIC8vIExpc3RlbiBmb3IgQ29tcG9uZW50TG9hZGVyIGluaXRpYWxpemF0aW9uXG4gICAgICAgIGNvbnN0IG9uTG9hZGVyID0gKCkgPT4geyBpZiAodHJ5UmVnaXN0ZXIoKSkgeyBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdjb21wb25lbnRsb2FkZXI6cmVhZHknLCBvbkxvYWRlcik7IH0gfTtcbiAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY29tcG9uZW50bG9hZGVyOnJlYWR5Jywgb25Mb2FkZXIpO1xuXG4gICAgICAgIC8vIEFsc28gcG9sbCBhcyBhIGxhc3QgcmVzb3J0XG4gICAgICAgIGNvbnN0IHBvbGxJbnRlcnZhbCA9IHNldEludGVydmFsKCgpID0+IHsgaWYgKHRyeVJlZ2lzdGVyKCkpIGNsZWFySW50ZXJ2YWwocG9sbEludGVydmFsKTsgfSwgMjAwKTtcbiAgICB9XG59XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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