{"version":3,"names":["cov_1e7vfywir8","actualCoverage","createPerformanceAnalyticsState","f","s","isInitialized","isLoading","timeRange","autoRefresh","refreshInterval","showToast","toastMessage","toastType","charts","kpis","total_generations","generation_growth","avg_generation_time","time_improvement","success_rate","total_failed","active_loras","total_loras","topLoras","errorAnalysis","performanceInsights","chartData","generationVolume","performance","loraUsage","resourceUsage","performanceAnalyticsState","updateKPIs","state","Object","assign","setLoading","setTimeRange","setAutoRefresh","enabled","interval","b","setTopLoras","setErrorAnalysis","setPerformanceInsights","insights","setChartData","updateChartDataType","type","data","undefined","setChart","name","chartInstance","removeChart","message","hideToast","clearData","keys","forEach","key","updateMultiple","updates","prototype","hasOwnProperty","call","Array","isArray","module","exports","window"],"sources":["state.js"],"sourcesContent":["/**\n * Performance Analytics - State Management Module\n * \n * Handles all state-related functionality for performance analytics\n * including KPIs, chart data, and UI state management.\n */\n\n/**\n * Creates the initial state for performance analytics component\n */\nfunction createPerformanceAnalyticsState() {\n    return {\n        // Initialization state (required for x-show guards)\n        isInitialized: false,\n        \n        // UI State\n        isLoading: false,\n        timeRange: '24h',\n        autoRefresh: false,\n        refreshInterval: null,\n        showToast: false,\n        toastMessage: '',\n        toastType: 'success',\n        \n        // Charts container\n        charts: {},\n        \n        // Key Performance Indicators\n        kpis: {\n            total_generations: 0,\n            generation_growth: 0,\n            avg_generation_time: 0,\n            time_improvement: 0,\n            success_rate: 0,\n            total_failed: 0,\n            active_loras: 0,\n            total_loras: 0\n        },\n        \n        // Analytics Data\n        topLoras: [],\n        errorAnalysis: [],\n        performanceInsights: [],\n        \n        // Chart Data\n        chartData: {\n            generationVolume: [],\n            performance: [],\n            loraUsage: [],\n            resourceUsage: []\n        }\n    };\n}\n\n/**\n * State mutation methods for performance analytics\n */\nconst performanceAnalyticsState = {\n    /**\n     * Updates KPIs data\n     */\n    updateKPIs(state, kpis) {\n        Object.assign(state.kpis, kpis);\n        return state;\n    },\n    \n    /**\n     * Sets loading state\n     */\n    setLoading(state, isLoading) {\n        state.isLoading = isLoading;\n        return state;\n    },\n    \n    /**\n     * Updates time range and related state\n     */\n    setTimeRange(state, timeRange) {\n        state.timeRange = timeRange;\n        return state;\n    },\n    \n    /**\n     * Sets auto refresh state\n     */\n    setAutoRefresh(state, enabled, interval = null) {\n        state.autoRefresh = enabled;\n        if (interval !== null) {\n            state.refreshInterval = interval;\n        }\n        return state;\n    },\n    \n    /**\n     * Updates top LoRAs data\n     */\n    setTopLoras(state, topLoras) {\n        state.topLoras = [...topLoras];\n        return state;\n    },\n    \n    /**\n     * Updates error analysis data\n     */\n    setErrorAnalysis(state, errorAnalysis) {\n        state.errorAnalysis = [...errorAnalysis];\n        return state;\n    },\n    \n    /**\n     * Updates performance insights\n     */\n    setPerformanceInsights(state, insights) {\n        state.performanceInsights = [...insights];\n        return state;\n    },\n    \n    /**\n     * Updates chart data\n     */\n    setChartData(state, chartData) {\n        Object.assign(state.chartData, chartData);\n        return state;\n    },\n    \n    /**\n     * Updates specific chart data by type\n     */\n    updateChartDataType(state, type, data) {\n        if (state.chartData[type] !== undefined) {\n            state.chartData[type] = [...data];\n        }\n        return state;\n    },\n    \n    /**\n     * Stores chart instance reference\n     */\n    setChart(state, name, chartInstance) {\n        state.charts[name] = chartInstance;\n        return state;\n    },\n    \n    /**\n     * Removes chart instance reference\n     */\n    removeChart(state, name) {\n        if (state.charts[name]) {\n            delete state.charts[name];\n        }\n        return state;\n    },\n    \n    /**\n     * Shows toast notification\n     */\n    showToast(state, { message, type = 'success' }) {\n        state.toastMessage = message;\n        state.toastType = type;\n        state.showToast = true;\n        return state;\n    },\n    \n    /**\n     * Hides toast notification\n     */\n    hideToast(state) {\n        state.showToast = false;\n        return state;\n    },\n    \n    /**\n     * Clears all data for refresh\n     */\n    clearData(state) {\n        // Reset KPIs\n        Object.keys(state.kpis).forEach(key => {\n            state.kpis[key] = 0;\n        });\n        \n        // Clear arrays\n        state.topLoras = [];\n        state.errorAnalysis = [];\n        state.performanceInsights = [];\n        \n        // Clear chart data\n        Object.keys(state.chartData).forEach(key => {\n            state.chartData[key] = [];\n        });\n        \n        return state;\n    },\n    \n    /**\n     * Updates multiple state properties at once\n     */\n    updateMultiple(state, updates) {\n        Object.keys(updates).forEach(key => {\n            if (Object.prototype.hasOwnProperty.call(state, key)) {\n                if (typeof state[key] === 'object' && !Array.isArray(state[key])) {\n                    Object.assign(state[key], updates[key]);\n                } else {\n                    state[key] = updates[key];\n                }\n            }\n        });\n        return state;\n    }\n};\n\n// Export for use in other modules\nif (typeof module !== 'undefined' && module.exports) {\n    module.exports = { createPerformanceAnalyticsState, performanceAnalyticsState };\n} else if (typeof window !== 'undefined') {\n    window.createPerformanceAnalyticsState = createPerformanceAnalyticsState;\n    window.performanceAnalyticsState = performanceAnalyticsState;\n}\n"],"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","ignoreList":[]}