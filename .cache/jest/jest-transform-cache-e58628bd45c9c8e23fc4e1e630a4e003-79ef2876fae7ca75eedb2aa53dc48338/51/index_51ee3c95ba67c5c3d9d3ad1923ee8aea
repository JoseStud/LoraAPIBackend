f8730f71d229114d34b37b78d84df07a
/* istanbul ignore next */
function cov_1egac4n9s7() {
  var path = "/home/runner/work/LoraAPIBackend/LoraAPIBackend/app/frontend/static/js/components/generation-form/index.js";
  var hash = "a1e356b0d25d9fe75c702e48a992b7fb8ef2d8ee";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/runner/work/LoraAPIBackend/LoraAPIBackend/app/frontend/static/js/components/generation-form/index.js",
    statementMap: {
      "0": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 160,
          column: 6
        }
      },
      "1": {
        start: {
          line: 36,
          column: 12
        },
        end: {
          line: 36,
          column: 35
        }
      },
      "2": {
        start: {
          line: 37,
          column: 12
        },
        end: {
          line: 37,
          column: 38
        }
      },
      "3": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 50,
          column: 13
        }
      },
      "4": {
        start: {
          line: 43,
          column: 30
        },
        end: {
          line: 43,
          column: 71
        }
      },
      "5": {
        start: {
          line: 44,
          column: 16
        },
        end: {
          line: 47,
          column: 17
        }
      },
      "6": {
        start: {
          line: 45,
          column: 35
        },
        end: {
          line: 45,
          column: 52
        }
      },
      "7": {
        start: {
          line: 46,
          column: 20
        },
        end: {
          line: 46,
          column: 55
        }
      },
      "8": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 55,
          column: 83
        }
      },
      "9": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 60,
          column: 40
        }
      },
      "10": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 64,
          column: 13
        }
      },
      "11": {
        start: {
          line: 63,
          column: 16
        },
        end: {
          line: 63,
          column: 66
        }
      },
      "12": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 68,
          column: 13
        }
      },
      "13": {
        start: {
          line: 67,
          column: 16
        },
        end: {
          line: 67,
          column: 82
        }
      },
      "14": {
        start: {
          line: 70,
          column: 12
        },
        end: {
          line: 72,
          column: 13
        }
      },
      "15": {
        start: {
          line: 71,
          column: 16
        },
        end: {
          line: 71,
          column: 83
        }
      },
      "16": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 74,
          column: 74
        }
      },
      "17": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 75,
          column: 43
        }
      },
      "18": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 82,
          column: 13
        }
      },
      "19": {
        start: {
          line: 81,
          column: 16
        },
        end: {
          line: 81,
          column: 23
        }
      },
      "20": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 84,
          column: 37
        }
      },
      "21": {
        start: {
          line: 85,
          column: 24
        },
        end: {
          line: 85,
          column: 28
        }
      },
      "22": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 140,
          column: 13
        }
      },
      "23": {
        start: {
          line: 89,
          column: 16
        },
        end: {
          line: 89,
          column: 34
        }
      },
      "24": {
        start: {
          line: 92,
          column: 28
        },
        end: {
          line: 97,
          column: 17
        }
      },
      "25": {
        start: {
          line: 99,
          column: 16
        },
        end: {
          line: 99,
          column: 31
        }
      },
      "26": {
        start: {
          line: 102,
          column: 16
        },
        end: {
          line: 102,
          column: 44
        }
      },
      "27": {
        start: {
          line: 105,
          column: 33
        },
        end: {
          line: 111,
          column: 18
        }
      },
      "28": {
        start: {
          line: 113,
          column: 16
        },
        end: {
          line: 127,
          column: 17
        }
      },
      "29": {
        start: {
          line: 114,
          column: 35
        },
        end: {
          line: 114,
          column: 56
        }
      },
      "30": {
        start: {
          line: 117,
          column: 20
        },
        end: {
          line: 120,
          column: 23
        }
      },
      "31": {
        start: {
          line: 123,
          column: 20
        },
        end: {
          line: 123,
          column: 98
        }
      },
      "32": {
        start: {
          line: 126,
          column: 20
        },
        end: {
          line: 126,
          column: 66
        }
      },
      "33": {
        start: {
          line: 131,
          column: 16
        },
        end: {
          line: 133,
          column: 17
        }
      },
      "34": {
        start: {
          line: 132,
          column: 20
        },
        end: {
          line: 132,
          column: 53
        }
      },
      "35": {
        start: {
          line: 136,
          column: 16
        },
        end: {
          line: 136,
          column: 96
        }
      },
      "36": {
        start: {
          line: 139,
          column: 16
        },
        end: {
          line: 139,
          column: 42
        }
      },
      "37": {
        start: {
          line: 145,
          column: 12
        },
        end: {
          line: 145,
          column: 36
        }
      },
      "38": {
        start: {
          line: 149,
          column: 12
        },
        end: {
          line: 149,
          column: 67
        }
      },
      "39": {
        start: {
          line: 154,
          column: 12
        },
        end: {
          line: 154,
          column: 78
        }
      },
      "40": {
        start: {
          line: 158,
          column: 12
        },
        end: {
          line: 158,
          column: 57
        }
      }
    },
    fnMap: {
      "0": {
        name: "createGenerationFormComponent",
        decl: {
          start: {
            line: 8,
            column: 16
          },
          end: {
            line: 8,
            column: 45
          }
        },
        loc: {
          start: {
            line: 8,
            column: 48
          },
          end: {
            line: 161,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 35,
            column: 9
          }
        },
        loc: {
          start: {
            line: 35,
            column: 15
          },
          end: {
            line: 38,
            column: 9
          }
        },
        line: 35
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 41,
            column: 9
          }
        },
        loc: {
          start: {
            line: 41,
            column: 26
          },
          end: {
            line: 51,
            column: 9
          }
        },
        line: 41
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 54,
            column: 9
          }
        },
        loc: {
          start: {
            line: 54,
            column: 21
          },
          end: {
            line: 56,
            column: 9
          }
        },
        line: 54
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 59,
            column: 9
          }
        },
        loc: {
          start: {
            line: 59,
            column: 23
          },
          end: {
            line: 76,
            column: 9
          }
        },
        line: 59
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 79,
            column: 8
          },
          end: {
            line: 79,
            column: 9
          }
        },
        loc: {
          start: {
            line: 79,
            column: 32
          },
          end: {
            line: 141,
            column: 9
          }
        },
        line: 79
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 144,
            column: 8
          },
          end: {
            line: 144,
            column: 9
          }
        },
        loc: {
          start: {
            line: 144,
            column: 22
          },
          end: {
            line: 146,
            column: 9
          }
        },
        line: 144
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 148,
            column: 8
          },
          end: {
            line: 148,
            column: 9
          }
        },
        loc: {
          start: {
            line: 148,
            column: 21
          },
          end: {
            line: 150,
            column: 9
          }
        },
        line: 148
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 153,
            column: 8
          },
          end: {
            line: 153,
            column: 9
          }
        },
        loc: {
          start: {
            line: 153,
            column: 26
          },
          end: {
            line: 155,
            column: 9
          }
        },
        line: 153
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 157,
            column: 8
          },
          end: {
            line: 157,
            column: 9
          }
        },
        loc: {
          start: {
            line: 157,
            column: 28
          },
          end: {
            line: 159,
            column: 9
          }
        },
        line: 157
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 44,
            column: 16
          },
          end: {
            line: 47,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 16
          },
          end: {
            line: 47,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 44
      },
      "1": {
        loc: {
          start: {
            line: 62,
            column: 12
          },
          end: {
            line: 64,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 12
          },
          end: {
            line: 64,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 62
      },
      "2": {
        loc: {
          start: {
            line: 66,
            column: 12
          },
          end: {
            line: 68,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 12
          },
          end: {
            line: 68,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 66
      },
      "3": {
        loc: {
          start: {
            line: 66,
            column: 16
          },
          end: {
            line: 66,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 66,
            column: 16
          },
          end: {
            line: 66,
            column: 39
          }
        }, {
          start: {
            line: 66,
            column: 43
          },
          end: {
            line: 66,
            column: 67
          }
        }],
        line: 66
      },
      "4": {
        loc: {
          start: {
            line: 70,
            column: 12
          },
          end: {
            line: 72,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 70,
            column: 12
          },
          end: {
            line: 72,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 70
      },
      "5": {
        loc: {
          start: {
            line: 70,
            column: 16
          },
          end: {
            line: 70,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 70,
            column: 16
          },
          end: {
            line: 70,
            column: 40
          }
        }, {
          start: {
            line: 70,
            column: 44
          },
          end: {
            line: 70,
            column: 69
          }
        }],
        line: 70
      },
      "6": {
        loc: {
          start: {
            line: 80,
            column: 12
          },
          end: {
            line: 82,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 80,
            column: 12
          },
          end: {
            line: 82,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 80
      },
      "7": {
        loc: {
          start: {
            line: 80,
            column: 16
          },
          end: {
            line: 80,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 80,
            column: 16
          },
          end: {
            line: 80,
            column: 33
          }
        }, {
          start: {
            line: 80,
            column: 37
          },
          end: {
            line: 80,
            column: 57
          }
        }],
        line: 80
      },
      "8": {
        loc: {
          start: {
            line: 105,
            column: 46
          },
          end: {
            line: 105,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 105,
            column: 46
          },
          end: {
            line: 105,
            column: 65
          }
        }, {
          start: {
            line: 105,
            column: 69
          },
          end: {
            line: 105,
            column: 71
          }
        }],
        line: 105
      },
      "9": {
        loc: {
          start: {
            line: 113,
            column: 16
          },
          end: {
            line: 127,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 113,
            column: 16
          },
          end: {
            line: 127,
            column: 17
          }
        }, {
          start: {
            line: 125,
            column: 23
          },
          end: {
            line: 127,
            column: 17
          }
        }],
        line: 113
      },
      "10": {
        loc: {
          start: {
            line: 131,
            column: 16
          },
          end: {
            line: 133,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 131,
            column: 16
          },
          end: {
            line: 133,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 131
      },
      "11": {
        loc: {
          start: {
            line: 154,
            column: 19
          },
          end: {
            line: 154,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 154,
            column: 19
          },
          end: {
            line: 154,
            column: 37
          }
        }, {
          start: {
            line: 154,
            column: 41
          },
          end: {
            line: 154,
            column: 77
          }
        }],
        line: 154
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a1e356b0d25d9fe75c702e48a992b7fb8ef2d8ee"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1egac4n9s7 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1egac4n9s7();
/**
 * Generation Form Component
 * 
 * Handles only the generation parameters and starting generations.
 * Uses the global store for shared state like activeJobs.
 */

export function createGenerationFormComponent() {
  /* istanbul ignore next */
  cov_1egac4n9s7().f[0]++;
  cov_1egac4n9s7().s[0]++;
  return {
    // Component initialization
    isInitialized: false,
    // Form-specific state only
    params: {
      prompt: '',
      negative_prompt: '',
      width: 512,
      height: 512,
      steps: 20,
      cfg_scale: 7.0,
      seed: -1,
      batch_count: 1,
      batch_size: 1
    },
    // Form validation
    validation: {
      isValid: true,
      errors: []
    },
    // Local UI state
    isGenerating: false,
    init() {
      /* istanbul ignore next */
      cov_1egac4n9s7().f[1]++;
      cov_1egac4n9s7().s[1]++;
      this.loadSavedParams();
      /* istanbul ignore next */
      cov_1egac4n9s7().s[2]++;
      this.isInitialized = true;
    },
    // Load saved parameters from localStorage
    loadSavedParams() {
      /* istanbul ignore next */
      cov_1egac4n9s7().f[2]++;
      cov_1egac4n9s7().s[3]++;
      try {
        const saved =
        /* istanbul ignore next */
        (cov_1egac4n9s7().s[4]++, localStorage.getItem('generation_params'));
        /* istanbul ignore next */
        cov_1egac4n9s7().s[5]++;
        if (saved) {
          /* istanbul ignore next */
          cov_1egac4n9s7().b[0][0]++;
          const parsed =
          /* istanbul ignore next */
          (cov_1egac4n9s7().s[6]++, JSON.parse(saved));
          /* istanbul ignore next */
          cov_1egac4n9s7().s[7]++;
          Object.assign(this.params, parsed);
        } else
        /* istanbul ignore next */
        {
          cov_1egac4n9s7().b[0][1]++;
        }
      } catch (error) {
        // Ignore invalid saved data
      }
    },
    // Save parameters to localStorage
    saveParams() {
      /* istanbul ignore next */
      cov_1egac4n9s7().f[3]++;
      cov_1egac4n9s7().s[8]++;
      localStorage.setItem('generation_params', JSON.stringify(this.params));
    },
    // Validate the form
    validateForm() {
      /* istanbul ignore next */
      cov_1egac4n9s7().f[4]++;
      cov_1egac4n9s7().s[9]++;
      this.validation.errors = [];
      /* istanbul ignore next */
      cov_1egac4n9s7().s[10]++;
      if (!this.params.prompt.trim()) {
        /* istanbul ignore next */
        cov_1egac4n9s7().b[1][0]++;
        cov_1egac4n9s7().s[11]++;
        this.validation.errors.push('Prompt is required');
      } else
      /* istanbul ignore next */
      {
        cov_1egac4n9s7().b[1][1]++;
      }
      cov_1egac4n9s7().s[12]++;
      if (
      /* istanbul ignore next */
      (cov_1egac4n9s7().b[3][0]++, this.params.width < 128) ||
      /* istanbul ignore next */
      (cov_1egac4n9s7().b[3][1]++, this.params.width > 2048)) {
        /* istanbul ignore next */
        cov_1egac4n9s7().b[2][0]++;
        cov_1egac4n9s7().s[13]++;
        this.validation.errors.push('Width must be between 128 and 2048');
      } else
      /* istanbul ignore next */
      {
        cov_1egac4n9s7().b[2][1]++;
      }
      cov_1egac4n9s7().s[14]++;
      if (
      /* istanbul ignore next */
      (cov_1egac4n9s7().b[5][0]++, this.params.height < 128) ||
      /* istanbul ignore next */
      (cov_1egac4n9s7().b[5][1]++, this.params.height > 2048)) {
        /* istanbul ignore next */
        cov_1egac4n9s7().b[4][0]++;
        cov_1egac4n9s7().s[15]++;
        this.validation.errors.push('Height must be between 128 and 2048');
      } else
      /* istanbul ignore next */
      {
        cov_1egac4n9s7().b[4][1]++;
      }
      cov_1egac4n9s7().s[16]++;
      this.validation.isValid = this.validation.errors.length === 0;
      /* istanbul ignore next */
      cov_1egac4n9s7().s[17]++;
      return this.validation.isValid;
    },
    // Start generation (uses global store)
    async startGeneration() {
      /* istanbul ignore next */
      cov_1egac4n9s7().f[5]++;
      cov_1egac4n9s7().s[18]++;
      if (
      /* istanbul ignore next */
      (cov_1egac4n9s7().b[7][0]++, this.isGenerating) ||
      /* istanbul ignore next */
      (cov_1egac4n9s7().b[7][1]++, !this.validateForm())) {
        /* istanbul ignore next */
        cov_1egac4n9s7().b[6][0]++;
        cov_1egac4n9s7().s[19]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1egac4n9s7().b[6][1]++;
      }
      cov_1egac4n9s7().s[20]++;
      this.isGenerating = true;
      let jobId =
      /* istanbul ignore next */
      (cov_1egac4n9s7().s[21]++, null);
      /* istanbul ignore next */
      cov_1egac4n9s7().s[22]++;
      try {
        /* istanbul ignore next */
        cov_1egac4n9s7().s[23]++;
        // Save params for next time
        this.saveParams();

        // Create job object
        const job =
        /* istanbul ignore next */
        (cov_1egac4n9s7().s[24]++, {
          id: `gen_${Date.now()}`,
          name: `Generate: ${this.params.prompt.substring(0, 30)}...`,
          params: {
            ...this.params
          },
          status: 'starting'
        });
        /* istanbul ignore next */
        cov_1egac4n9s7().s[25]++;
        jobId = job.id;

        // Add to global store
        /* istanbul ignore next */
        cov_1egac4n9s7().s[26]++;
        this.$store.app.addJob(job);

        // Make API call
        const response =
        /* istanbul ignore next */
        (cov_1egac4n9s7().s[27]++, await fetch((
        /* istanbul ignore next */
        (cov_1egac4n9s7().b[8][0]++, window?.BACKEND_URL) ||
        /* istanbul ignore next */
        (cov_1egac4n9s7().b[8][1]++, '')) + '/generation/generate', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(this.params)
        }));
        /* istanbul ignore next */
        cov_1egac4n9s7().s[28]++;
        if (response.ok) {
          /* istanbul ignore next */
          cov_1egac4n9s7().b[9][0]++;
          const result =
          /* istanbul ignore next */
          (cov_1egac4n9s7().s[29]++, await response.json());

          // Update job in store
          /* istanbul ignore next */
          cov_1egac4n9s7().s[30]++;
          this.$store.app.updateJob(jobId, {
            status: 'running',
            jobId: result.job_id
          });

          // Show success notification
          /* istanbul ignore next */
          cov_1egac4n9s7().s[31]++;
          this.$store.app.addNotification('Generation started successfully', 'success');
        } else {
          /* istanbul ignore next */
          cov_1egac4n9s7().b[9][1]++;
          cov_1egac4n9s7().s[32]++;
          throw new Error('Failed to start generation');
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_1egac4n9s7().s[33]++;
        // Remove failed job from store
        if (jobId) {
          /* istanbul ignore next */
          cov_1egac4n9s7().b[10][0]++;
          cov_1egac4n9s7().s[34]++;
          this.$store.app.removeJob(jobId);
        } else
        /* istanbul ignore next */
        {
          cov_1egac4n9s7().b[10][1]++;
        }

        // Show error notification
        cov_1egac4n9s7().s[35]++;
        this.$store.app.addNotification(`Generation failed: ${error.message}`, 'error');
      } finally {
        /* istanbul ignore next */
        cov_1egac4n9s7().s[36]++;
        this.isGenerating = false;
      }
    },
    // Quick actions
    clearPrompt() {
      /* istanbul ignore next */
      cov_1egac4n9s7().f[6]++;
      cov_1egac4n9s7().s[37]++;
      this.params.prompt = '';
    },
    randomSeed() {
      /* istanbul ignore next */
      cov_1egac4n9s7().f[7]++;
      cov_1egac4n9s7().s[38]++;
      this.params.seed = Math.floor(Math.random() * 1000000);
    },
    // Computed properties
    get canGenerate() {
      /* istanbul ignore next */
      cov_1egac4n9s7().f[8]++;
      cov_1egac4n9s7().s[39]++;
      return /* istanbul ignore next */(cov_1egac4n9s7().b[11][0]++, !this.isGenerating) &&
      /* istanbul ignore next */
      (cov_1egac4n9s7().b[11][1]++, this.params.prompt.trim().length > 0);
    },
    get hasActiveJobs() {
      /* istanbul ignore next */
      cov_1egac4n9s7().f[9]++;
      cov_1egac4n9s7().s[40]++;
      return this.$store.app.activeJobs.length > 0;
    }
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,