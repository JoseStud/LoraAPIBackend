03eabee7a9562b515d29523e18a3a561
/* istanbul ignore next */
function cov_236o7l5xqr() {
  var path = "/home/runner/work/LoraAPIBackend/LoraAPIBackend/app/frontend/static/js/components/system-admin/api.js";
  var hash = "e4236b073f8d06d81d713832b5fb408a118e9301";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/runner/work/LoraAPIBackend/LoraAPIBackend/app/frontend/static/js/components/system-admin/api.js",
    statementMap: {
      "0": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 62
        }
      },
      "1": {
        start: {
          line: 23,
          column: 20
        },
        end: {
          line: 23,
          column: 48
        }
      },
      "2": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 51,
          column: 9
        }
      },
      "3": {
        start: {
          line: 26,
          column: 29
        },
        end: {
          line: 32,
          column: 14
        }
      },
      "4": {
        start: {
          line: 34,
          column: 12
        },
        end: {
          line: 37,
          column: 13
        }
      },
      "5": {
        start: {
          line: 35,
          column: 34
        },
        end: {
          line: 35,
          column: 55
        }
      },
      "6": {
        start: {
          line: 36,
          column: 16
        },
        end: {
          line: 36,
          column: 73
        }
      },
      "7": {
        start: {
          line: 40,
          column: 32
        },
        end: {
          line: 40,
          column: 68
        }
      },
      "8": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 45,
          column: 13
        }
      },
      "9": {
        start: {
          line: 42,
          column: 16
        },
        end: {
          line: 42,
          column: 45
        }
      },
      "10": {
        start: {
          line: 44,
          column: 16
        },
        end: {
          line: 44,
          column: 45
        }
      },
      "11": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 49,
          column: 13
        }
      },
      "12": {
        start: {
          line: 48,
          column: 16
        },
        end: {
          line: 48,
          column: 81
        }
      },
      "13": {
        start: {
          line: 50,
          column: 12
        },
        end: {
          line: 50,
          column: 24
        }
      },
      "14": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 60,
          column: 52
        }
      },
      "15": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 68,
          column: 51
        }
      },
      "16": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 76,
          column: 53
        }
      },
      "17": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 85,
          column: 46
        }
      },
      "18": {
        start: {
          line: 94,
          column: 25
        },
        end: {
          line: 94,
          column: 80
        }
      },
      "19": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 95,
          column: 64
        }
      },
      "20": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 103,
          column: 78
        }
      },
      "21": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 112,
          column: 86
        }
      },
      "22": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 121,
          column: 83
        }
      },
      "23": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 130,
          column: 53
        }
      },
      "24": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 138,
          column: 74
        }
      },
      "25": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 150,
          column: 11
        }
      },
      "26": {
        start: {
          line: 159,
          column: 25
        },
        end: {
          line: 159,
          column: 84
        }
      },
      "27": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 162,
          column: 9
        }
      },
      "28": {
        start: {
          line: 161,
          column: 12
        },
        end: {
          line: 161,
          column: 77
        }
      },
      "29": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 163,
          column: 37
        }
      },
      "30": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 172,
          column: 80
        }
      },
      "31": {
        start: {
          line: 180,
          column: 8
        },
        end: {
          line: 180,
          column: 76
        }
      },
      "32": {
        start: {
          line: 188,
          column: 8
        },
        end: {
          line: 188,
          column: 83
        }
      },
      "33": {
        start: {
          line: 196,
          column: 8
        },
        end: {
          line: 196,
          column: 84
        }
      },
      "34": {
        start: {
          line: 204,
          column: 8
        },
        end: {
          line: 204,
          column: 76
        }
      },
      "35": {
        start: {
          line: 213,
          column: 8
        },
        end: {
          line: 213,
          column: 45
        }
      },
      "36": {
        start: {
          line: 222,
          column: 8
        },
        end: {
          line: 225,
          column: 11
        }
      },
      "37": {
        start: {
          line: 235,
          column: 23
        },
        end: {
          line: 235,
          column: 44
        }
      },
      "38": {
        start: {
          line: 237,
          column: 8
        },
        end: {
          line: 237,
          column: 65
        }
      },
      "39": {
        start: {
          line: 237,
          column: 27
        },
        end: {
          line: 237,
          column: 65
        }
      },
      "40": {
        start: {
          line: 238,
          column: 8
        },
        end: {
          line: 238,
          column: 92
        }
      },
      "41": {
        start: {
          line: 238,
          column: 54
        },
        end: {
          line: 238,
          column: 92
        }
      },
      "42": {
        start: {
          line: 239,
          column: 8
        },
        end: {
          line: 239,
          column: 96
        }
      },
      "43": {
        start: {
          line: 239,
          column: 56
        },
        end: {
          line: 239,
          column: 96
        }
      },
      "44": {
        start: {
          line: 241,
          column: 28
        },
        end: {
          line: 241,
          column: 45
        }
      },
      "45": {
        start: {
          line: 242,
          column: 25
        },
        end: {
          line: 242,
          column: 71
        }
      },
      "46": {
        start: {
          line: 244,
          column: 8
        },
        end: {
          line: 244,
          column: 44
        }
      },
      "47": {
        start: {
          line: 253,
          column: 8
        },
        end: {
          line: 253,
          column: 46
        }
      },
      "48": {
        start: {
          line: 262,
          column: 8
        },
        end: {
          line: 262,
          column: 52
        }
      },
      "49": {
        start: {
          line: 271,
          column: 8
        },
        end: {
          line: 271,
          column: 58
        }
      },
      "50": {
        start: {
          line: 276,
          column: 23
        },
        end: {
          line: 276,
          column: 43
        }
      },
      "51": {
        start: {
          line: 279,
          column: 0
        },
        end: {
          line: 284,
          column: 1
        }
      },
      "52": {
        start: {
          line: 280,
          column: 4
        },
        end: {
          line: 280,
          column: 56
        }
      },
      "53": {
        start: {
          line: 281,
          column: 7
        },
        end: {
          line: 284,
          column: 1
        }
      },
      "54": {
        start: {
          line: 282,
          column: 4
        },
        end: {
          line: 282,
          column: 43
        }
      },
      "55": {
        start: {
          line: 283,
          column: 4
        },
        end: {
          line: 283,
          column: 43
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 18
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 42
          },
          end: {
            line: 52,
            column: 5
          }
        },
        line: 22
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 59,
            column: 4
          },
          end: {
            line: 59,
            column: 5
          }
        },
        loc: {
          start: {
            line: 59,
            column: 28
          },
          end: {
            line: 61,
            column: 5
          }
        },
        line: 59
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 67,
            column: 4
          },
          end: {
            line: 67,
            column: 5
          }
        },
        loc: {
          start: {
            line: 67,
            column: 27
          },
          end: {
            line: 69,
            column: 5
          }
        },
        line: 67
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 75,
            column: 4
          },
          end: {
            line: 75,
            column: 5
          }
        },
        loc: {
          start: {
            line: 75,
            column: 29
          },
          end: {
            line: 77,
            column: 5
          }
        },
        line: 75
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 84,
            column: 4
          },
          end: {
            line: 84,
            column: 5
          }
        },
        loc: {
          start: {
            line: 84,
            column: 23
          },
          end: {
            line: 86,
            column: 5
          }
        },
        line: 84
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 93,
            column: 4
          },
          end: {
            line: 93,
            column: 5
          }
        },
        loc: {
          start: {
            line: 93,
            column: 33
          },
          end: {
            line: 96,
            column: 5
          }
        },
        line: 93
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 102,
            column: 4
          },
          end: {
            line: 102,
            column: 5
          }
        },
        loc: {
          start: {
            line: 102,
            column: 30
          },
          end: {
            line: 104,
            column: 5
          }
        },
        line: 102
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 111,
            column: 4
          },
          end: {
            line: 111,
            column: 5
          }
        },
        loc: {
          start: {
            line: 111,
            column: 34
          },
          end: {
            line: 113,
            column: 5
          }
        },
        line: 111
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 120,
            column: 4
          },
          end: {
            line: 120,
            column: 5
          }
        },
        loc: {
          start: {
            line: 120,
            column: 31
          },
          end: {
            line: 122,
            column: 5
          }
        },
        line: 120
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 129,
            column: 4
          },
          end: {
            line: 129,
            column: 5
          }
        },
        loc: {
          start: {
            line: 129,
            column: 29
          },
          end: {
            line: 131,
            column: 5
          }
        },
        line: 129
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 137,
            column: 4
          },
          end: {
            line: 137,
            column: 5
          }
        },
        loc: {
          start: {
            line: 137,
            column: 25
          },
          end: {
            line: 139,
            column: 5
          }
        },
        line: 137
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 146,
            column: 4
          },
          end: {
            line: 146,
            column: 5
          }
        },
        loc: {
          start: {
            line: 146,
            column: 34
          },
          end: {
            line: 151,
            column: 5
          }
        },
        line: 146
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 158,
            column: 4
          },
          end: {
            line: 158,
            column: 5
          }
        },
        loc: {
          start: {
            line: 158,
            column: 35
          },
          end: {
            line: 164,
            column: 5
          }
        },
        line: 158
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 171,
            column: 4
          },
          end: {
            line: 171,
            column: 5
          }
        },
        loc: {
          start: {
            line: 171,
            column: 33
          },
          end: {
            line: 173,
            column: 5
          }
        },
        line: 171
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 179,
            column: 4
          },
          end: {
            line: 179,
            column: 5
          }
        },
        loc: {
          start: {
            line: 179,
            column: 29
          },
          end: {
            line: 181,
            column: 5
          }
        },
        line: 179
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 187,
            column: 4
          },
          end: {
            line: 187,
            column: 5
          }
        },
        loc: {
          start: {
            line: 187,
            column: 27
          },
          end: {
            line: 189,
            column: 5
          }
        },
        line: 187
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 195,
            column: 4
          },
          end: {
            line: 195,
            column: 5
          }
        },
        loc: {
          start: {
            line: 195,
            column: 28
          },
          end: {
            line: 197,
            column: 5
          }
        },
        line: 195
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 203,
            column: 4
          },
          end: {
            line: 203,
            column: 5
          }
        },
        loc: {
          start: {
            line: 203,
            column: 29
          },
          end: {
            line: 205,
            column: 5
          }
        },
        line: 203
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 212,
            column: 4
          },
          end: {
            line: 212,
            column: 5
          }
        },
        loc: {
          start: {
            line: 212,
            column: 29
          },
          end: {
            line: 214,
            column: 5
          }
        },
        line: 212
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 221,
            column: 4
          },
          end: {
            line: 221,
            column: 5
          }
        },
        loc: {
          start: {
            line: 221,
            column: 38
          },
          end: {
            line: 226,
            column: 5
          }
        },
        line: 221
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 234,
            column: 4
          },
          end: {
            line: 234,
            column: 5
          }
        },
        loc: {
          start: {
            line: 234,
            column: 32
          },
          end: {
            line: 245,
            column: 5
          }
        },
        line: 234
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 252,
            column: 4
          },
          end: {
            line: 252,
            column: 5
          }
        },
        loc: {
          start: {
            line: 252,
            column: 29
          },
          end: {
            line: 254,
            column: 5
          }
        },
        line: 252
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 261,
            column: 4
          },
          end: {
            line: 261,
            column: 5
          }
        },
        loc: {
          start: {
            line: 261,
            column: 28
          },
          end: {
            line: 263,
            column: 5
          }
        },
        line: 261
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 270,
            column: 4
          },
          end: {
            line: 270,
            column: 5
          }
        },
        loc: {
          start: {
            line: 270,
            column: 42
          },
          end: {
            line: 272,
            column: 5
          }
        },
        line: 270
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 13,
            column: 24
          },
          end: {
            line: 13,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 24
          },
          end: {
            line: 13,
            column: 43
          }
        }, {
          start: {
            line: 13,
            column: 47
          },
          end: {
            line: 13,
            column: 49
          }
        }],
        line: 13
      },
      "1": {
        loc: {
          start: {
            line: 22,
            column: 28
          },
          end: {
            line: 22,
            column: 40
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 22,
            column: 38
          },
          end: {
            line: 22,
            column: 40
          }
        }],
        line: 22
      },
      "2": {
        loc: {
          start: {
            line: 34,
            column: 12
          },
          end: {
            line: 37,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 12
          },
          end: {
            line: 37,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 34
      },
      "3": {
        loc: {
          start: {
            line: 41,
            column: 12
          },
          end: {
            line: 45,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 12
          },
          end: {
            line: 45,
            column: 13
          }
        }, {
          start: {
            line: 43,
            column: 19
          },
          end: {
            line: 45,
            column: 13
          }
        }],
        line: 41
      },
      "4": {
        loc: {
          start: {
            line: 41,
            column: 16
          },
          end: {
            line: 41,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 16
          },
          end: {
            line: 41,
            column: 27
          }
        }, {
          start: {
            line: 41,
            column: 31
          },
          end: {
            line: 41,
            column: 71
          }
        }],
        line: 41
      },
      "5": {
        loc: {
          start: {
            line: 47,
            column: 12
          },
          end: {
            line: 49,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 12
          },
          end: {
            line: 49,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 47
      },
      "6": {
        loc: {
          start: {
            line: 47,
            column: 16
          },
          end: {
            line: 47,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 16
          },
          end: {
            line: 47,
            column: 32
          }
        }, {
          start: {
            line: 47,
            column: 36
          },
          end: {
            line: 47,
            column: 58
          }
        }],
        line: 47
      },
      "7": {
        loc: {
          start: {
            line: 94,
            column: 25
          },
          end: {
            line: 94,
            column: 80
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 94,
            column: 46
          },
          end: {
            line: 94,
            column: 62
          }
        }, {
          start: {
            line: 94,
            column: 65
          },
          end: {
            line: 94,
            column: 80
          }
        }],
        line: 94
      },
      "8": {
        loc: {
          start: {
            line: 160,
            column: 8
          },
          end: {
            line: 162,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 160,
            column: 8
          },
          end: {
            line: 162,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 160
      },
      "9": {
        loc: {
          start: {
            line: 234,
            column: 18
          },
          end: {
            line: 234,
            column: 30
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 234,
            column: 28
          },
          end: {
            line: 234,
            column: 30
          }
        }],
        line: 234
      },
      "10": {
        loc: {
          start: {
            line: 237,
            column: 8
          },
          end: {
            line: 237,
            column: 65
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 237,
            column: 8
          },
          end: {
            line: 237,
            column: 65
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 237
      },
      "11": {
        loc: {
          start: {
            line: 238,
            column: 8
          },
          end: {
            line: 238,
            column: 92
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 238,
            column: 8
          },
          end: {
            line: 238,
            column: 92
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 238
      },
      "12": {
        loc: {
          start: {
            line: 238,
            column: 12
          },
          end: {
            line: 238,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 238,
            column: 12
          },
          end: {
            line: 238,
            column: 25
          }
        }, {
          start: {
            line: 238,
            column: 29
          },
          end: {
            line: 238,
            column: 52
          }
        }],
        line: 238
      },
      "13": {
        loc: {
          start: {
            line: 239,
            column: 8
          },
          end: {
            line: 239,
            column: 96
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 239,
            column: 8
          },
          end: {
            line: 239,
            column: 96
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 239
      },
      "14": {
        loc: {
          start: {
            line: 239,
            column: 12
          },
          end: {
            line: 239,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 239,
            column: 12
          },
          end: {
            line: 239,
            column: 26
          }
        }, {
          start: {
            line: 239,
            column: 30
          },
          end: {
            line: 239,
            column: 54
          }
        }],
        line: 239
      },
      "15": {
        loc: {
          start: {
            line: 242,
            column: 25
          },
          end: {
            line: 242,
            column: 71
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 242,
            column: 39
          },
          end: {
            line: 242,
            column: 61
          }
        }, {
          start: {
            line: 242,
            column: 64
          },
          end: {
            line: 242,
            column: 71
          }
        }],
        line: 242
      },
      "16": {
        loc: {
          start: {
            line: 279,
            column: 0
          },
          end: {
            line: 284,
            column: 1
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 279,
            column: 0
          },
          end: {
            line: 284,
            column: 1
          }
        }, {
          start: {
            line: 281,
            column: 7
          },
          end: {
            line: 284,
            column: 1
          }
        }],
        line: 279
      },
      "17": {
        loc: {
          start: {
            line: 279,
            column: 4
          },
          end: {
            line: 279,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 279,
            column: 4
          },
          end: {
            line: 279,
            column: 33
          }
        }, {
          start: {
            line: 279,
            column: 37
          },
          end: {
            line: 279,
            column: 51
          }
        }],
        line: 279
      },
      "18": {
        loc: {
          start: {
            line: 281,
            column: 7
          },
          end: {
            line: 284,
            column: 1
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 281,
            column: 7
          },
          end: {
            line: 284,
            column: 1
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 281
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0
    },
    b: {
      "0": [0, 0],
      "1": [0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e4236b073f8d06d81d713832b5fb408a118e9301"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_236o7l5xqr = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_236o7l5xqr();
/**
 * System Administration API Module
 * 
 * Handles all HTTP requests to the admin API endpoints.
 * Provides a clean interface for system monitoring, configuration, and maintenance operations.
 */

/**
 * API client for system administration endpoints
 */
class SystemAdminAPI {
  constructor() {
    /* istanbul ignore next */
    cov_236o7l5xqr().f[0]++;
    cov_236o7l5xqr().s[0]++;
    this.baseUrl = (
    /* istanbul ignore next */
    (cov_236o7l5xqr().b[0][0]++, window?.BACKEND_URL) ||
    /* istanbul ignore next */
    (cov_236o7l5xqr().b[0][1]++, '')) + '/admin';
  }

  /**
   * Make a generic API request with error handling
   * @param {string} endpoint - API endpoint relative to baseUrl
   * @param {Object} options - Fetch options
   * @returns {Promise<Object>} Response data
   */
  async request(endpoint, options =
  /* istanbul ignore next */
  (cov_236o7l5xqr().b[1][0]++, {})) {
    /* istanbul ignore next */
    cov_236o7l5xqr().f[1]++;
    const url =
    /* istanbul ignore next */
    (cov_236o7l5xqr().s[1]++, `${this.baseUrl}${endpoint}`);
    /* istanbul ignore next */
    cov_236o7l5xqr().s[2]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_236o7l5xqr().s[3]++, await fetch(url, {
        headers: {
          'Content-Type': 'application/json',
          ...options.headers
        },
        ...options
      }));
      /* istanbul ignore next */
      cov_236o7l5xqr().s[4]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_236o7l5xqr().b[2][0]++;
        const errorData =
        /* istanbul ignore next */
        (cov_236o7l5xqr().s[5]++, await response.text());
        /* istanbul ignore next */
        cov_236o7l5xqr().s[6]++;
        throw new Error(`HTTP ${response.status}: ${errorData}`);
      } else
      /* istanbul ignore next */
      {
        cov_236o7l5xqr().b[2][1]++;
      }

      // Handle empty responses
      const contentType =
      /* istanbul ignore next */
      (cov_236o7l5xqr().s[7]++, response.headers.get('content-type'));
      /* istanbul ignore next */
      cov_236o7l5xqr().s[8]++;
      if (
      /* istanbul ignore next */
      (cov_236o7l5xqr().b[4][0]++, contentType) &&
      /* istanbul ignore next */
      (cov_236o7l5xqr().b[4][1]++, contentType.includes('application/json'))) {
        /* istanbul ignore next */
        cov_236o7l5xqr().b[3][0]++;
        cov_236o7l5xqr().s[9]++;
        return await response.json();
      } else {
        /* istanbul ignore next */
        cov_236o7l5xqr().b[3][1]++;
        cov_236o7l5xqr().s[10]++;
        return await response.text();
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_236o7l5xqr().s[11]++;
      if (
      /* istanbul ignore next */
      (cov_236o7l5xqr().b[6][0]++, window.DevLogger) &&
      /* istanbul ignore next */
      (cov_236o7l5xqr().b[6][1]++, window.DevLogger.error)) {
        /* istanbul ignore next */
        cov_236o7l5xqr().b[5][0]++;
        cov_236o7l5xqr().s[12]++;
        window.DevLogger.error(`API request failed: ${endpoint}`, error);
      } else
      /* istanbul ignore next */
      {
        cov_236o7l5xqr().b[5][1]++;
      }
      cov_236o7l5xqr().s[13]++;
      throw error;
    }
  }

  // System Status and Stats
  /**
   * Get system status
   * @returns {Promise<Object>} System status data
   */
  async getSystemStatus() {
    /* istanbul ignore next */
    cov_236o7l5xqr().f[2]++;
    cov_236o7l5xqr().s[14]++;
    return await this.request('/system/status');
  }

  /**
   * Get system statistics
   * @returns {Promise<Object>} System stats data
   */
  async getSystemStats() {
    /* istanbul ignore next */
    cov_236o7l5xqr().f[3]++;
    cov_236o7l5xqr().s[15]++;
    return await this.request('/system/stats');
  }

  /**
   * Get real-time system metrics
   * @returns {Promise<Object>} System metrics data
   */
  async getSystemMetrics() {
    /* istanbul ignore next */
    cov_236o7l5xqr().f[4]++;
    cov_236o7l5xqr().s[16]++;
    return await this.request('/system/metrics');
  }

  // Workers Management
  /**
   * Get all workers
   * @returns {Promise<Array>} Array of worker objects
   */
  async getWorkers() {
    /* istanbul ignore next */
    cov_236o7l5xqr().f[5]++;
    cov_236o7l5xqr().s[17]++;
    return await this.request('/workers');
  }

  /**
   * Start or stop workers
   * @param {string} action - 'start' or 'stop'
   * @returns {Promise<Object>} Operation result
   */
  async controlWorkers(action) {
    /* istanbul ignore next */
    cov_236o7l5xqr().f[6]++;
    const endpoint =
    /* istanbul ignore next */
    (cov_236o7l5xqr().s[18]++, action === 'start' ?
    /* istanbul ignore next */
    (cov_236o7l5xqr().b[7][0]++, '/workers/start') :
    /* istanbul ignore next */
    (cov_236o7l5xqr().b[7][1]++, '/workers/stop'));
    /* istanbul ignore next */
    cov_236o7l5xqr().s[19]++;
    return await this.request(endpoint, {
      method: 'POST'
    });
  }

  /**
   * Restart all workers
   * @returns {Promise<Object>} Operation result
   */
  async restartAllWorkers() {
    /* istanbul ignore next */
    cov_236o7l5xqr().f[7]++;
    cov_236o7l5xqr().s[20]++;
    return await this.request('/workers/restart-all', {
      method: 'POST'
    });
  }

  /**
   * Restart a specific worker
   * @param {string} workerId - Worker ID to restart
   * @returns {Promise<Object>} Operation result
   */
  async restartWorker(workerId) {
    /* istanbul ignore next */
    cov_236o7l5xqr().f[8]++;
    cov_236o7l5xqr().s[21]++;
    return await this.request(`/workers/${workerId}/restart`, {
      method: 'POST'
    });
  }

  /**
   * Stop a specific worker
   * @param {string} workerId - Worker ID to stop
   * @returns {Promise<Object>} Operation result
   */
  async stopWorker(workerId) {
    /* istanbul ignore next */
    cov_236o7l5xqr().f[9]++;
    cov_236o7l5xqr().s[22]++;
    return await this.request(`/workers/${workerId}/stop`, {
      method: 'POST'
    });
  }

  // Database Management
  /**
   * Get database statistics
   * @returns {Promise<Object>} Database stats
   */
  async getDatabaseStats() {
    /* istanbul ignore next */
    cov_236o7l5xqr().f[10]++;
    cov_236o7l5xqr().s[23]++;
    return await this.request('/database/stats');
  }

  /**
   * Create database backup
   * @returns {Promise<Object>} Backup operation result
   */
  async createBackup() {
    /* istanbul ignore next */
    cov_236o7l5xqr().f[11]++;
    cov_236o7l5xqr().s[24]++;
    return await this.request('/database/backup', {
      method: 'POST'
    });
  }

  /**
   * Restore database from backup
   * @param {string} backupId - Backup ID to restore
   * @returns {Promise<Object>} Restore operation result
   */
  async restoreBackup(backupId) {
    /* istanbul ignore next */
    cov_236o7l5xqr().f[12]++;
    cov_236o7l5xqr().s[25]++;
    return await this.request('/database/restore', {
      method: 'POST',
      body: JSON.stringify({
        backup_id: backupId
      })
    });
  }

  /**
   * Download backup file
   * @param {string} backupId - Backup ID to download
   * @returns {Promise<Blob>} Backup file blob
   */
  async downloadBackup(backupId) {
    /* istanbul ignore next */
    cov_236o7l5xqr().f[13]++;
    const response =
    /* istanbul ignore next */
    (cov_236o7l5xqr().s[26]++, await fetch(`${this.baseUrl}/backups/${backupId}/download`));
    /* istanbul ignore next */
    cov_236o7l5xqr().s[27]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_236o7l5xqr().b[8][0]++;
      cov_236o7l5xqr().s[28]++;
      throw new Error(`Failed to download backup: ${response.status}`);
    } else
    /* istanbul ignore next */
    {
      cov_236o7l5xqr().b[8][1]++;
    }
    cov_236o7l5xqr().s[29]++;
    return await response.blob();
  }

  /**
   * Delete a backup
   * @param {string} backupId - Backup ID to delete
   * @returns {Promise<Object>} Delete operation result
   */
  async deleteBackup(backupId) {
    /* istanbul ignore next */
    cov_236o7l5xqr().f[14]++;
    cov_236o7l5xqr().s[30]++;
    return await this.request(`/backups/${backupId}`, {
      method: 'DELETE'
    });
  }

  /**
   * Optimize database
   * @returns {Promise<Object>} Optimization result
   */
  async optimizeDatabase() {
    /* istanbul ignore next */
    cov_236o7l5xqr().f[15]++;
    cov_236o7l5xqr().s[31]++;
    return await this.request('/database/optimize', {
      method: 'POST'
    });
  }

  /**
   * Rebuild database indexes
   * @returns {Promise<Object>} Rebuild operation result
   */
  async rebuildIndexes() {
    /* istanbul ignore next */
    cov_236o7l5xqr().f[16]++;
    cov_236o7l5xqr().s[32]++;
    return await this.request('/database/rebuild-indexes', {
      method: 'POST'
    });
  }

  /**
   * Cleanup orphaned records
   * @returns {Promise<Object>} Cleanup operation result
   */
  async cleanupOrphaned() {
    /* istanbul ignore next */
    cov_236o7l5xqr().f[17]++;
    cov_236o7l5xqr().s[33]++;
    return await this.request('/database/cleanup-orphaned', {
      method: 'POST'
    });
  }

  /**
   * Validate database integrity
   * @returns {Promise<Object>} Validation result
   */
  async validateDatabase() {
    /* istanbul ignore next */
    cov_236o7l5xqr().f[18]++;
    cov_236o7l5xqr().s[34]++;
    return await this.request('/database/validate', {
      method: 'POST'
    });
  }

  // Configuration Management
  /**
   * Get system configuration
   * @returns {Promise<Object>} Configuration data
   */
  async getConfiguration() {
    /* istanbul ignore next */
    cov_236o7l5xqr().f[19]++;
    cov_236o7l5xqr().s[35]++;
    return await this.request('/config');
  }

  /**
   * Update system configuration
   * @param {Object} config - Configuration object to update
   * @returns {Promise<Object>} Update result
   */
  async updateConfiguration(config) {
    /* istanbul ignore next */
    cov_236o7l5xqr().f[20]++;
    cov_236o7l5xqr().s[36]++;
    return await this.request('/config', {
      method: 'PUT',
      body: JSON.stringify(config)
    });
  }

  // Logs Management
  /**
   * Get system logs
   * @param {Object} options - Query options (limit, level, source)
   * @returns {Promise<Array>} Array of log entries
   */
  async getLogs(options =
  /* istanbul ignore next */
  (cov_236o7l5xqr().b[9][0]++, {})) {
    /* istanbul ignore next */
    cov_236o7l5xqr().f[21]++;
    const params =
    /* istanbul ignore next */
    (cov_236o7l5xqr().s[37]++, new URLSearchParams());
    /* istanbul ignore next */
    cov_236o7l5xqr().s[38]++;
    if (options.limit) {
      /* istanbul ignore next */
      cov_236o7l5xqr().b[10][0]++;
      cov_236o7l5xqr().s[39]++;
      params.append('limit', options.limit);
    } else
    /* istanbul ignore next */
    {
      cov_236o7l5xqr().b[10][1]++;
    }
    cov_236o7l5xqr().s[40]++;
    if (
    /* istanbul ignore next */
    (cov_236o7l5xqr().b[12][0]++, options.level) &&
    /* istanbul ignore next */
    (cov_236o7l5xqr().b[12][1]++, options.level !== 'all')) {
      /* istanbul ignore next */
      cov_236o7l5xqr().b[11][0]++;
      cov_236o7l5xqr().s[41]++;
      params.append('level', options.level);
    } else
    /* istanbul ignore next */
    {
      cov_236o7l5xqr().b[11][1]++;
    }
    cov_236o7l5xqr().s[42]++;
    if (
    /* istanbul ignore next */
    (cov_236o7l5xqr().b[14][0]++, options.source) &&
    /* istanbul ignore next */
    (cov_236o7l5xqr().b[14][1]++, options.source !== 'all')) {
      /* istanbul ignore next */
      cov_236o7l5xqr().b[13][0]++;
      cov_236o7l5xqr().s[43]++;
      params.append('source', options.source);
    } else
    /* istanbul ignore next */
    {
      cov_236o7l5xqr().b[13][1]++;
    }
    const queryString =
    /* istanbul ignore next */
    (cov_236o7l5xqr().s[44]++, params.toString());
    const endpoint =
    /* istanbul ignore next */
    (cov_236o7l5xqr().s[45]++, queryString ?
    /* istanbul ignore next */
    (cov_236o7l5xqr().b[15][0]++, `/logs?${queryString}`) :
    /* istanbul ignore next */
    (cov_236o7l5xqr().b[15][1]++, '/logs'));
    /* istanbul ignore next */
    cov_236o7l5xqr().s[46]++;
    return await this.request(endpoint);
  }

  // Backup Management
  /**
   * Get recent backups
   * @returns {Promise<Array>} Array of backup objects
   */
  async getRecentBackups() {
    /* istanbul ignore next */
    cov_236o7l5xqr().f[22]++;
    cov_236o7l5xqr().s[47]++;
    return await this.request('/backups');
  }

  // Health and Monitoring
  /**
   * Get comprehensive health report
   * @returns {Promise<Object>} Health report data
   */
  async getHealthReport() {
    /* istanbul ignore next */
    cov_236o7l5xqr().f[23]++;
    cov_236o7l5xqr().s[48]++;
    return await this.request('/health/report');
  }

  /**
   * Check specific system component health
   * @param {string} component - Component to check (database, workers, storage, etc.)
   * @returns {Promise<Object>} Component health status
   */
  async checkComponentHealth(component) {
    /* istanbul ignore next */
    cov_236o7l5xqr().f[24]++;
    cov_236o7l5xqr().s[49]++;
    return await this.request(`/health/${component}`);
  }
}

// Export singleton instance
const systemAdminAPI =
/* istanbul ignore next */
(cov_236o7l5xqr().s[50]++, new SystemAdminAPI());

// Make available globally and for module export
/* istanbul ignore next */
cov_236o7l5xqr().s[51]++;
if (
/* istanbul ignore next */
(cov_236o7l5xqr().b[17][0]++, typeof module !== 'undefined') &&
/* istanbul ignore next */
(cov_236o7l5xqr().b[17][1]++, module.exports)) {
  /* istanbul ignore next */
  cov_236o7l5xqr().b[16][0]++;
  cov_236o7l5xqr().s[52]++;
  module.exports = {
    SystemAdminAPI,
    systemAdminAPI
  };
} else {
  /* istanbul ignore next */
  cov_236o7l5xqr().b[16][1]++;
  cov_236o7l5xqr().s[53]++;
  if (typeof window !== 'undefined') {
    /* istanbul ignore next */
    cov_236o7l5xqr().b[18][0]++;
    cov_236o7l5xqr().s[54]++;
    window.systemAdminAPI = systemAdminAPI;
    /* istanbul ignore next */
    cov_236o7l5xqr().s[55]++;
    window.SystemAdminAPI = SystemAdminAPI;
  } else
  /* istanbul ignore next */
  {
    cov_236o7l5xqr().b[18][1]++;
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMjM2bzdsNXhxciIsImFjdHVhbENvdmVyYWdlIiwiU3lzdGVtQWRtaW5BUEkiLCJjb25zdHJ1Y3RvciIsImYiLCJzIiwiYmFzZVVybCIsImIiLCJ3aW5kb3ciLCJCQUNLRU5EX1VSTCIsInJlcXVlc3QiLCJlbmRwb2ludCIsIm9wdGlvbnMiLCJ1cmwiLCJyZXNwb25zZSIsImZldGNoIiwiaGVhZGVycyIsIm9rIiwiZXJyb3JEYXRhIiwidGV4dCIsIkVycm9yIiwic3RhdHVzIiwiY29udGVudFR5cGUiLCJnZXQiLCJpbmNsdWRlcyIsImpzb24iLCJlcnJvciIsIkRldkxvZ2dlciIsImdldFN5c3RlbVN0YXR1cyIsImdldFN5c3RlbVN0YXRzIiwiZ2V0U3lzdGVtTWV0cmljcyIsImdldFdvcmtlcnMiLCJjb250cm9sV29ya2VycyIsImFjdGlvbiIsIm1ldGhvZCIsInJlc3RhcnRBbGxXb3JrZXJzIiwicmVzdGFydFdvcmtlciIsIndvcmtlcklkIiwic3RvcFdvcmtlciIsImdldERhdGFiYXNlU3RhdHMiLCJjcmVhdGVCYWNrdXAiLCJyZXN0b3JlQmFja3VwIiwiYmFja3VwSWQiLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsImJhY2t1cF9pZCIsImRvd25sb2FkQmFja3VwIiwiYmxvYiIsImRlbGV0ZUJhY2t1cCIsIm9wdGltaXplRGF0YWJhc2UiLCJyZWJ1aWxkSW5kZXhlcyIsImNsZWFudXBPcnBoYW5lZCIsInZhbGlkYXRlRGF0YWJhc2UiLCJnZXRDb25maWd1cmF0aW9uIiwidXBkYXRlQ29uZmlndXJhdGlvbiIsImNvbmZpZyIsImdldExvZ3MiLCJwYXJhbXMiLCJVUkxTZWFyY2hQYXJhbXMiLCJsaW1pdCIsImFwcGVuZCIsImxldmVsIiwic291cmNlIiwicXVlcnlTdHJpbmciLCJ0b1N0cmluZyIsImdldFJlY2VudEJhY2t1cHMiLCJnZXRIZWFsdGhSZXBvcnQiLCJjaGVja0NvbXBvbmVudEhlYWx0aCIsImNvbXBvbmVudCIsInN5c3RlbUFkbWluQVBJIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbImFwaS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFN5c3RlbSBBZG1pbmlzdHJhdGlvbiBBUEkgTW9kdWxlXG4gKiBcbiAqIEhhbmRsZXMgYWxsIEhUVFAgcmVxdWVzdHMgdG8gdGhlIGFkbWluIEFQSSBlbmRwb2ludHMuXG4gKiBQcm92aWRlcyBhIGNsZWFuIGludGVyZmFjZSBmb3Igc3lzdGVtIG1vbml0b3JpbmcsIGNvbmZpZ3VyYXRpb24sIGFuZCBtYWludGVuYW5jZSBvcGVyYXRpb25zLlxuICovXG5cbi8qKlxuICogQVBJIGNsaWVudCBmb3Igc3lzdGVtIGFkbWluaXN0cmF0aW9uIGVuZHBvaW50c1xuICovXG5jbGFzcyBTeXN0ZW1BZG1pbkFQSSB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuYmFzZVVybCA9ICh3aW5kb3c/LkJBQ0tFTkRfVVJMIHx8ICcnKSArICcvYWRtaW4nO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIE1ha2UgYSBnZW5lcmljIEFQSSByZXF1ZXN0IHdpdGggZXJyb3IgaGFuZGxpbmdcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gZW5kcG9pbnQgLSBBUEkgZW5kcG9pbnQgcmVsYXRpdmUgdG8gYmFzZVVybFxuICAgICAqIEBwYXJhbSB7T2JqZWN0fSBvcHRpb25zIC0gRmV0Y2ggb3B0aW9uc1xuICAgICAqIEByZXR1cm5zIHtQcm9taXNlPE9iamVjdD59IFJlc3BvbnNlIGRhdGFcbiAgICAgKi9cbiAgICBhc3luYyByZXF1ZXN0KGVuZHBvaW50LCBvcHRpb25zID0ge30pIHtcbiAgICAgICAgY29uc3QgdXJsID0gYCR7dGhpcy5iYXNlVXJsfSR7ZW5kcG9pbnR9YDtcbiAgICAgICAgXG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKHVybCwge1xuICAgICAgICAgICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgICAgICAgICAgICAgICAgLi4ub3B0aW9ucy5oZWFkZXJzXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAuLi5vcHRpb25zXG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgaWYgKCFyZXNwb25zZS5vaykge1xuICAgICAgICAgICAgICAgIGNvbnN0IGVycm9yRGF0YSA9IGF3YWl0IHJlc3BvbnNlLnRleHQoKTtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEhUVFAgJHtyZXNwb25zZS5zdGF0dXN9OiAke2Vycm9yRGF0YX1gKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8gSGFuZGxlIGVtcHR5IHJlc3BvbnNlc1xuICAgICAgICAgICAgY29uc3QgY29udGVudFR5cGUgPSByZXNwb25zZS5oZWFkZXJzLmdldCgnY29udGVudC10eXBlJyk7XG4gICAgICAgICAgICBpZiAoY29udGVudFR5cGUgJiYgY29udGVudFR5cGUuaW5jbHVkZXMoJ2FwcGxpY2F0aW9uL2pzb24nKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHJldHVybiBhd2FpdCByZXNwb25zZS50ZXh0KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICBpZiAod2luZG93LkRldkxvZ2dlciAmJiB3aW5kb3cuRGV2TG9nZ2VyLmVycm9yKSB7XG4gICAgICAgICAgICAgICAgd2luZG93LkRldkxvZ2dlci5lcnJvcihgQVBJIHJlcXVlc3QgZmFpbGVkOiAke2VuZHBvaW50fWAsIGVycm9yKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRocm93IGVycm9yO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLy8gU3lzdGVtIFN0YXR1cyBhbmQgU3RhdHNcbiAgICAvKipcbiAgICAgKiBHZXQgc3lzdGVtIHN0YXR1c1xuICAgICAqIEByZXR1cm5zIHtQcm9taXNlPE9iamVjdD59IFN5c3RlbSBzdGF0dXMgZGF0YVxuICAgICAqL1xuICAgIGFzeW5jIGdldFN5c3RlbVN0YXR1cygpIHtcbiAgICAgICAgcmV0dXJuIGF3YWl0IHRoaXMucmVxdWVzdCgnL3N5c3RlbS9zdGF0dXMnKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBHZXQgc3lzdGVtIHN0YXRpc3RpY3NcbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxPYmplY3Q+fSBTeXN0ZW0gc3RhdHMgZGF0YVxuICAgICAqL1xuICAgIGFzeW5jIGdldFN5c3RlbVN0YXRzKCkge1xuICAgICAgICByZXR1cm4gYXdhaXQgdGhpcy5yZXF1ZXN0KCcvc3lzdGVtL3N0YXRzJyk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogR2V0IHJlYWwtdGltZSBzeXN0ZW0gbWV0cmljc1xuICAgICAqIEByZXR1cm5zIHtQcm9taXNlPE9iamVjdD59IFN5c3RlbSBtZXRyaWNzIGRhdGFcbiAgICAgKi9cbiAgICBhc3luYyBnZXRTeXN0ZW1NZXRyaWNzKCkge1xuICAgICAgICByZXR1cm4gYXdhaXQgdGhpcy5yZXF1ZXN0KCcvc3lzdGVtL21ldHJpY3MnKTtcbiAgICB9XG5cbiAgICAvLyBXb3JrZXJzIE1hbmFnZW1lbnRcbiAgICAvKipcbiAgICAgKiBHZXQgYWxsIHdvcmtlcnNcbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxBcnJheT59IEFycmF5IG9mIHdvcmtlciBvYmplY3RzXG4gICAgICovXG4gICAgYXN5bmMgZ2V0V29ya2VycygpIHtcbiAgICAgICAgcmV0dXJuIGF3YWl0IHRoaXMucmVxdWVzdCgnL3dvcmtlcnMnKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBTdGFydCBvciBzdG9wIHdvcmtlcnNcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gYWN0aW9uIC0gJ3N0YXJ0JyBvciAnc3RvcCdcbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxPYmplY3Q+fSBPcGVyYXRpb24gcmVzdWx0XG4gICAgICovXG4gICAgYXN5bmMgY29udHJvbFdvcmtlcnMoYWN0aW9uKSB7XG4gICAgICAgIGNvbnN0IGVuZHBvaW50ID0gYWN0aW9uID09PSAnc3RhcnQnID8gJy93b3JrZXJzL3N0YXJ0JyA6ICcvd29ya2Vycy9zdG9wJztcbiAgICAgICAgcmV0dXJuIGF3YWl0IHRoaXMucmVxdWVzdChlbmRwb2ludCwgeyBtZXRob2Q6ICdQT1NUJyB9KTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBSZXN0YXJ0IGFsbCB3b3JrZXJzXG4gICAgICogQHJldHVybnMge1Byb21pc2U8T2JqZWN0Pn0gT3BlcmF0aW9uIHJlc3VsdFxuICAgICAqL1xuICAgIGFzeW5jIHJlc3RhcnRBbGxXb3JrZXJzKCkge1xuICAgICAgICByZXR1cm4gYXdhaXQgdGhpcy5yZXF1ZXN0KCcvd29ya2Vycy9yZXN0YXJ0LWFsbCcsIHsgbWV0aG9kOiAnUE9TVCcgfSk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogUmVzdGFydCBhIHNwZWNpZmljIHdvcmtlclxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSB3b3JrZXJJZCAtIFdvcmtlciBJRCB0byByZXN0YXJ0XG4gICAgICogQHJldHVybnMge1Byb21pc2U8T2JqZWN0Pn0gT3BlcmF0aW9uIHJlc3VsdFxuICAgICAqL1xuICAgIGFzeW5jIHJlc3RhcnRXb3JrZXIod29ya2VySWQpIHtcbiAgICAgICAgcmV0dXJuIGF3YWl0IHRoaXMucmVxdWVzdChgL3dvcmtlcnMvJHt3b3JrZXJJZH0vcmVzdGFydGAsIHsgbWV0aG9kOiAnUE9TVCcgfSk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogU3RvcCBhIHNwZWNpZmljIHdvcmtlclxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSB3b3JrZXJJZCAtIFdvcmtlciBJRCB0byBzdG9wXG4gICAgICogQHJldHVybnMge1Byb21pc2U8T2JqZWN0Pn0gT3BlcmF0aW9uIHJlc3VsdFxuICAgICAqL1xuICAgIGFzeW5jIHN0b3BXb3JrZXIod29ya2VySWQpIHtcbiAgICAgICAgcmV0dXJuIGF3YWl0IHRoaXMucmVxdWVzdChgL3dvcmtlcnMvJHt3b3JrZXJJZH0vc3RvcGAsIHsgbWV0aG9kOiAnUE9TVCcgfSk7XG4gICAgfVxuXG4gICAgLy8gRGF0YWJhc2UgTWFuYWdlbWVudFxuICAgIC8qKlxuICAgICAqIEdldCBkYXRhYmFzZSBzdGF0aXN0aWNzXG4gICAgICogQHJldHVybnMge1Byb21pc2U8T2JqZWN0Pn0gRGF0YWJhc2Ugc3RhdHNcbiAgICAgKi9cbiAgICBhc3luYyBnZXREYXRhYmFzZVN0YXRzKCkge1xuICAgICAgICByZXR1cm4gYXdhaXQgdGhpcy5yZXF1ZXN0KCcvZGF0YWJhc2Uvc3RhdHMnKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBDcmVhdGUgZGF0YWJhc2UgYmFja3VwXG4gICAgICogQHJldHVybnMge1Byb21pc2U8T2JqZWN0Pn0gQmFja3VwIG9wZXJhdGlvbiByZXN1bHRcbiAgICAgKi9cbiAgICBhc3luYyBjcmVhdGVCYWNrdXAoKSB7XG4gICAgICAgIHJldHVybiBhd2FpdCB0aGlzLnJlcXVlc3QoJy9kYXRhYmFzZS9iYWNrdXAnLCB7IG1ldGhvZDogJ1BPU1QnIH0pO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFJlc3RvcmUgZGF0YWJhc2UgZnJvbSBiYWNrdXBcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gYmFja3VwSWQgLSBCYWNrdXAgSUQgdG8gcmVzdG9yZVxuICAgICAqIEByZXR1cm5zIHtQcm9taXNlPE9iamVjdD59IFJlc3RvcmUgb3BlcmF0aW9uIHJlc3VsdFxuICAgICAqL1xuICAgIGFzeW5jIHJlc3RvcmVCYWNrdXAoYmFja3VwSWQpIHtcbiAgICAgICAgcmV0dXJuIGF3YWl0IHRoaXMucmVxdWVzdCgnL2RhdGFiYXNlL3Jlc3RvcmUnLCB7XG4gICAgICAgICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHsgYmFja3VwX2lkOiBiYWNrdXBJZCB9KVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBEb3dubG9hZCBiYWNrdXAgZmlsZVxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBiYWNrdXBJZCAtIEJhY2t1cCBJRCB0byBkb3dubG9hZFxuICAgICAqIEByZXR1cm5zIHtQcm9taXNlPEJsb2I+fSBCYWNrdXAgZmlsZSBibG9iXG4gICAgICovXG4gICAgYXN5bmMgZG93bmxvYWRCYWNrdXAoYmFja3VwSWQpIHtcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgJHt0aGlzLmJhc2VVcmx9L2JhY2t1cHMvJHtiYWNrdXBJZH0vZG93bmxvYWRgKTtcbiAgICAgICAgaWYgKCFyZXNwb25zZS5vaykge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBGYWlsZWQgdG8gZG93bmxvYWQgYmFja3VwOiAke3Jlc3BvbnNlLnN0YXR1c31gKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gYXdhaXQgcmVzcG9uc2UuYmxvYigpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIERlbGV0ZSBhIGJhY2t1cFxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBiYWNrdXBJZCAtIEJhY2t1cCBJRCB0byBkZWxldGVcbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxPYmplY3Q+fSBEZWxldGUgb3BlcmF0aW9uIHJlc3VsdFxuICAgICAqL1xuICAgIGFzeW5jIGRlbGV0ZUJhY2t1cChiYWNrdXBJZCkge1xuICAgICAgICByZXR1cm4gYXdhaXQgdGhpcy5yZXF1ZXN0KGAvYmFja3Vwcy8ke2JhY2t1cElkfWAsIHsgbWV0aG9kOiAnREVMRVRFJyB9KTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBPcHRpbWl6ZSBkYXRhYmFzZVxuICAgICAqIEByZXR1cm5zIHtQcm9taXNlPE9iamVjdD59IE9wdGltaXphdGlvbiByZXN1bHRcbiAgICAgKi9cbiAgICBhc3luYyBvcHRpbWl6ZURhdGFiYXNlKCkge1xuICAgICAgICByZXR1cm4gYXdhaXQgdGhpcy5yZXF1ZXN0KCcvZGF0YWJhc2Uvb3B0aW1pemUnLCB7IG1ldGhvZDogJ1BPU1QnIH0pO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFJlYnVpbGQgZGF0YWJhc2UgaW5kZXhlc1xuICAgICAqIEByZXR1cm5zIHtQcm9taXNlPE9iamVjdD59IFJlYnVpbGQgb3BlcmF0aW9uIHJlc3VsdFxuICAgICAqL1xuICAgIGFzeW5jIHJlYnVpbGRJbmRleGVzKCkge1xuICAgICAgICByZXR1cm4gYXdhaXQgdGhpcy5yZXF1ZXN0KCcvZGF0YWJhc2UvcmVidWlsZC1pbmRleGVzJywgeyBtZXRob2Q6ICdQT1NUJyB9KTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBDbGVhbnVwIG9ycGhhbmVkIHJlY29yZHNcbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxPYmplY3Q+fSBDbGVhbnVwIG9wZXJhdGlvbiByZXN1bHRcbiAgICAgKi9cbiAgICBhc3luYyBjbGVhbnVwT3JwaGFuZWQoKSB7XG4gICAgICAgIHJldHVybiBhd2FpdCB0aGlzLnJlcXVlc3QoJy9kYXRhYmFzZS9jbGVhbnVwLW9ycGhhbmVkJywgeyBtZXRob2Q6ICdQT1NUJyB9KTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBWYWxpZGF0ZSBkYXRhYmFzZSBpbnRlZ3JpdHlcbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxPYmplY3Q+fSBWYWxpZGF0aW9uIHJlc3VsdFxuICAgICAqL1xuICAgIGFzeW5jIHZhbGlkYXRlRGF0YWJhc2UoKSB7XG4gICAgICAgIHJldHVybiBhd2FpdCB0aGlzLnJlcXVlc3QoJy9kYXRhYmFzZS92YWxpZGF0ZScsIHsgbWV0aG9kOiAnUE9TVCcgfSk7XG4gICAgfVxuXG4gICAgLy8gQ29uZmlndXJhdGlvbiBNYW5hZ2VtZW50XG4gICAgLyoqXG4gICAgICogR2V0IHN5c3RlbSBjb25maWd1cmF0aW9uXG4gICAgICogQHJldHVybnMge1Byb21pc2U8T2JqZWN0Pn0gQ29uZmlndXJhdGlvbiBkYXRhXG4gICAgICovXG4gICAgYXN5bmMgZ2V0Q29uZmlndXJhdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIGF3YWl0IHRoaXMucmVxdWVzdCgnL2NvbmZpZycpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFVwZGF0ZSBzeXN0ZW0gY29uZmlndXJhdGlvblxuICAgICAqIEBwYXJhbSB7T2JqZWN0fSBjb25maWcgLSBDb25maWd1cmF0aW9uIG9iamVjdCB0byB1cGRhdGVcbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxPYmplY3Q+fSBVcGRhdGUgcmVzdWx0XG4gICAgICovXG4gICAgYXN5bmMgdXBkYXRlQ29uZmlndXJhdGlvbihjb25maWcpIHtcbiAgICAgICAgcmV0dXJuIGF3YWl0IHRoaXMucmVxdWVzdCgnL2NvbmZpZycsIHtcbiAgICAgICAgICAgIG1ldGhvZDogJ1BVVCcsXG4gICAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeShjb25maWcpXG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIC8vIExvZ3MgTWFuYWdlbWVudFxuICAgIC8qKlxuICAgICAqIEdldCBzeXN0ZW0gbG9nc1xuICAgICAqIEBwYXJhbSB7T2JqZWN0fSBvcHRpb25zIC0gUXVlcnkgb3B0aW9ucyAobGltaXQsIGxldmVsLCBzb3VyY2UpXG4gICAgICogQHJldHVybnMge1Byb21pc2U8QXJyYXk+fSBBcnJheSBvZiBsb2cgZW50cmllc1xuICAgICAqL1xuICAgIGFzeW5jIGdldExvZ3Mob3B0aW9ucyA9IHt9KSB7XG4gICAgICAgIGNvbnN0IHBhcmFtcyA9IG5ldyBVUkxTZWFyY2hQYXJhbXMoKTtcbiAgICAgICAgXG4gICAgICAgIGlmIChvcHRpb25zLmxpbWl0KSBwYXJhbXMuYXBwZW5kKCdsaW1pdCcsIG9wdGlvbnMubGltaXQpO1xuICAgICAgICBpZiAob3B0aW9ucy5sZXZlbCAmJiBvcHRpb25zLmxldmVsICE9PSAnYWxsJykgcGFyYW1zLmFwcGVuZCgnbGV2ZWwnLCBvcHRpb25zLmxldmVsKTtcbiAgICAgICAgaWYgKG9wdGlvbnMuc291cmNlICYmIG9wdGlvbnMuc291cmNlICE9PSAnYWxsJykgcGFyYW1zLmFwcGVuZCgnc291cmNlJywgb3B0aW9ucy5zb3VyY2UpO1xuICAgICAgICBcbiAgICAgICAgY29uc3QgcXVlcnlTdHJpbmcgPSBwYXJhbXMudG9TdHJpbmcoKTtcbiAgICAgICAgY29uc3QgZW5kcG9pbnQgPSBxdWVyeVN0cmluZyA/IGAvbG9ncz8ke3F1ZXJ5U3RyaW5nfWAgOiAnL2xvZ3MnO1xuICAgICAgICBcbiAgICAgICAgcmV0dXJuIGF3YWl0IHRoaXMucmVxdWVzdChlbmRwb2ludCk7XG4gICAgfVxuXG4gICAgLy8gQmFja3VwIE1hbmFnZW1lbnRcbiAgICAvKipcbiAgICAgKiBHZXQgcmVjZW50IGJhY2t1cHNcbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxBcnJheT59IEFycmF5IG9mIGJhY2t1cCBvYmplY3RzXG4gICAgICovXG4gICAgYXN5bmMgZ2V0UmVjZW50QmFja3VwcygpIHtcbiAgICAgICAgcmV0dXJuIGF3YWl0IHRoaXMucmVxdWVzdCgnL2JhY2t1cHMnKTtcbiAgICB9XG5cbiAgICAvLyBIZWFsdGggYW5kIE1vbml0b3JpbmdcbiAgICAvKipcbiAgICAgKiBHZXQgY29tcHJlaGVuc2l2ZSBoZWFsdGggcmVwb3J0XG4gICAgICogQHJldHVybnMge1Byb21pc2U8T2JqZWN0Pn0gSGVhbHRoIHJlcG9ydCBkYXRhXG4gICAgICovXG4gICAgYXN5bmMgZ2V0SGVhbHRoUmVwb3J0KCkge1xuICAgICAgICByZXR1cm4gYXdhaXQgdGhpcy5yZXF1ZXN0KCcvaGVhbHRoL3JlcG9ydCcpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIENoZWNrIHNwZWNpZmljIHN5c3RlbSBjb21wb25lbnQgaGVhbHRoXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGNvbXBvbmVudCAtIENvbXBvbmVudCB0byBjaGVjayAoZGF0YWJhc2UsIHdvcmtlcnMsIHN0b3JhZ2UsIGV0Yy4pXG4gICAgICogQHJldHVybnMge1Byb21pc2U8T2JqZWN0Pn0gQ29tcG9uZW50IGhlYWx0aCBzdGF0dXNcbiAgICAgKi9cbiAgICBhc3luYyBjaGVja0NvbXBvbmVudEhlYWx0aChjb21wb25lbnQpIHtcbiAgICAgICAgcmV0dXJuIGF3YWl0IHRoaXMucmVxdWVzdChgL2hlYWx0aC8ke2NvbXBvbmVudH1gKTtcbiAgICB9XG59XG5cbi8vIEV4cG9ydCBzaW5nbGV0b24gaW5zdGFuY2VcbmNvbnN0IHN5c3RlbUFkbWluQVBJID0gbmV3IFN5c3RlbUFkbWluQVBJKCk7XG5cbi8vIE1ha2UgYXZhaWxhYmxlIGdsb2JhbGx5IGFuZCBmb3IgbW9kdWxlIGV4cG9ydFxuaWYgKHR5cGVvZiBtb2R1bGUgIT09ICd1bmRlZmluZWQnICYmIG1vZHVsZS5leHBvcnRzKSB7XG4gICAgbW9kdWxlLmV4cG9ydHMgPSB7IFN5c3RlbUFkbWluQVBJLCBzeXN0ZW1BZG1pbkFQSSB9O1xufSBlbHNlIGlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykge1xuICAgIHdpbmRvdy5zeXN0ZW1BZG1pbkFQSSA9IHN5c3RlbUFkbWluQVBJO1xuICAgIHdpbmRvdy5TeXN0ZW1BZG1pbkFQSSA9IFN5c3RlbUFkbWluQVBJO1xufVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQWVZO0lBQUFBLGNBQUEsWUFBQUEsQ0FBQTtNQUFBLE9BQUFDLGNBQUE7SUFBQTtFQUFBO0VBQUEsT0FBQUEsY0FBQTtBQUFBO0FBQUFELGNBQUE7QUFmWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsTUFBTUUsY0FBYyxDQUFDO0VBQ2pCQyxXQUFXQSxDQUFBLEVBQUc7SUFBQTtJ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