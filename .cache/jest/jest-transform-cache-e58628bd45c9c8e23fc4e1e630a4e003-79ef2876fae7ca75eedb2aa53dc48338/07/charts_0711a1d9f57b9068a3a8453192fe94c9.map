{"version":3,"names":["cov_1mtk6bx9pr","actualCoverage","performanceCharts","s","initializeCharts","chartData","b","f","charts","volume","createVolumeChart","performance","createPerformanceChart","loraUsage","createLoraUsageChart","systemMetrics","createSystemMetricsChart","Object","keys","length","updateAllCharts","error","ctx","document","getElementById","Chart","type","data","labels","datasets","label","borderColor","backgroundColor","tension","fill","options","responsive","maintainAspectRatio","scales","y","beginAtZero","plugins","legend","display","yAxisID","interaction","mode","intersect","position","y1","max","grid","drawOnChartArea","generationVolume","updateVolumeChart","updatePerformanceChart","updateLoraUsageChart","resourceUsage","updateSystemMetricsChart","chart","map","item","Date","timestamp","toLocaleTimeString","hour","minute","values","count","update","avgTimes","avg_time","successRates","success_rate","name","usage","cpuData","cpu","memoryData","memory","gpuData","gpu","destroyCharts","forEach","destroy","resizeCharts","resize","isChartJsAvailable","getChartConfig","chartType","configs","title","yAxisLabel","module","exports","window"],"sources":["charts.js"],"sourcesContent":["/**\n * Performance Analytics - Chart Management Module\n * \n * Handles chart creation, updating, and rendering using Chart.js.\n */\n\n/**\n * Chart management operations for performance analytics\n */\nconst performanceCharts = {\n    /**\n     * Initializes all charts for the analytics dashboard\n     */\n    initializeCharts(chartData = {}) {\n        const charts = {};\n        \n        try {\n            charts.volume = this.createVolumeChart();\n            charts.performance = this.createPerformanceChart();\n            charts.loraUsage = this.createLoraUsageChart();\n            charts.systemMetrics = this.createSystemMetricsChart();\n            \n            // Update charts with initial data if provided\n            if (Object.keys(chartData).length > 0) {\n                this.updateAllCharts(charts, chartData);\n            }\n            \n            return charts;\n            \n        } catch (error) {\n            // Fallback if Chart.js is not available\n            return {};\n        }\n    },\n    \n    /**\n     * Creates generation volume chart\n     */\n    createVolumeChart() {\n        const ctx = document.getElementById('volumeChart');\n        if (!ctx || typeof Chart === 'undefined') return null;\n        \n        return new Chart(ctx, {\n            type: 'line',\n            data: {\n                labels: [],\n                datasets: [{\n                    label: 'Generations',\n                    data: [],\n                    borderColor: 'rgb(59, 130, 246)',\n                    backgroundColor: 'rgba(59, 130, 246, 0.1)',\n                    tension: 0.1,\n                    fill: true\n                }]\n            },\n            options: {\n                responsive: true,\n                maintainAspectRatio: false,\n                scales: {\n                    y: {\n                        beginAtZero: true\n                    }\n                },\n                plugins: {\n                    legend: {\n                        display: false\n                    }\n                }\n            }\n        });\n    },\n    \n    /**\n     * Creates performance metrics chart\n     */\n    createPerformanceChart() {\n        const ctx = document.getElementById('performanceChart');\n        if (!ctx || typeof Chart === 'undefined') return null;\n        \n        return new Chart(ctx, {\n            type: 'line',\n            data: {\n                labels: [],\n                datasets: [\n                    {\n                        label: 'Avg Time (s)',\n                        data: [],\n                        borderColor: 'rgb(239, 68, 68)',\n                        backgroundColor: 'rgba(239, 68, 68, 0.1)',\n                        tension: 0.1,\n                        yAxisID: 'y'\n                    },\n                    {\n                        label: 'Success Rate (%)',\n                        data: [],\n                        borderColor: 'rgb(16, 185, 129)',\n                        backgroundColor: 'rgba(16, 185, 129, 0.1)',\n                        tension: 0.1,\n                        yAxisID: 'y1'\n                    }\n                ]\n            },\n            options: {\n                responsive: true,\n                maintainAspectRatio: false,\n                interaction: {\n                    mode: 'index',\n                    intersect: false,\n                },\n                scales: {\n                    y: {\n                        type: 'linear',\n                        display: true,\n                        position: 'left',\n                        beginAtZero: true\n                    },\n                    y1: {\n                        type: 'linear',\n                        display: true,\n                        position: 'right',\n                        beginAtZero: true,\n                        max: 100,\n                        grid: {\n                            drawOnChartArea: false,\n                        },\n                    }\n                }\n            }\n        });\n    },\n    \n    /**\n     * Creates LoRA usage chart\n     */\n    createLoraUsageChart() {\n        const ctx = document.getElementById('loraUsageChart');\n        if (!ctx || typeof Chart === 'undefined') return null;\n        \n        return new Chart(ctx, {\n            type: 'doughnut',\n            data: {\n                labels: [],\n                datasets: [{\n                    data: [],\n                    backgroundColor: [\n                        'rgb(59, 130, 246)',\n                        'rgb(16, 185, 129)',\n                        'rgb(239, 68, 68)',\n                        'rgb(245, 158, 11)',\n                        'rgb(139, 92, 246)',\n                        'rgb(236, 72, 153)',\n                        'rgb(14, 165, 233)',\n                        'rgb(34, 197, 94)',\n                        'rgb(251, 113, 133)',\n                        'rgb(168, 85, 247)'\n                    ]\n                }]\n            },\n            options: {\n                responsive: true,\n                maintainAspectRatio: false,\n                plugins: {\n                    legend: {\n                        position: 'bottom'\n                    }\n                }\n            }\n        });\n    },\n    \n    /**\n     * Creates system metrics chart\n     */\n    createSystemMetricsChart() {\n        const ctx = document.getElementById('systemMetricsChart');\n        if (!ctx || typeof Chart === 'undefined') return null;\n        \n        return new Chart(ctx, {\n            type: 'line',\n            data: {\n                labels: [],\n                datasets: [\n                    {\n                        label: 'CPU %',\n                        data: [],\n                        borderColor: 'rgb(59, 130, 246)',\n                        backgroundColor: 'rgba(59, 130, 246, 0.1)',\n                        tension: 0.1\n                    },\n                    {\n                        label: 'Memory %',\n                        data: [],\n                        borderColor: 'rgb(16, 185, 129)',\n                        backgroundColor: 'rgba(16, 185, 129, 0.1)',\n                        tension: 0.1\n                    },\n                    {\n                        label: 'GPU %',\n                        data: [],\n                        borderColor: 'rgb(239, 68, 68)',\n                        backgroundColor: 'rgba(239, 68, 68, 0.1)',\n                        tension: 0.1\n                    }\n                ]\n            },\n            options: {\n                responsive: true,\n                maintainAspectRatio: false,\n                scales: {\n                    y: {\n                        beginAtZero: true,\n                        max: 100\n                    }\n                }\n            }\n        });\n    },\n    \n    /**\n     * Updates all charts with new data\n     */\n    updateAllCharts(charts, chartData) {\n        if (charts.volume && chartData.generationVolume) {\n            this.updateVolumeChart(charts.volume, chartData.generationVolume);\n        }\n        \n        if (charts.performance && chartData.performance) {\n            this.updatePerformanceChart(charts.performance, chartData.performance);\n        }\n        \n        if (charts.loraUsage && chartData.loraUsage) {\n            this.updateLoraUsageChart(charts.loraUsage, chartData.loraUsage);\n        }\n        \n        if (charts.systemMetrics && chartData.resourceUsage) {\n            this.updateSystemMetricsChart(charts.systemMetrics, chartData.resourceUsage);\n        }\n    },\n    \n    /**\n     * Updates volume chart with new data\n     */\n    updateVolumeChart(chart, data) {\n        if (!chart || !data) return;\n        \n        const labels = data.map(item => \n            new Date(item.timestamp).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })\n        );\n        const values = data.map(item => item.count);\n        \n        chart.data.labels = labels;\n        chart.data.datasets[0].data = values;\n        chart.update('none'); // Animation disabled for performance\n    },\n    \n    /**\n     * Updates performance chart with new data\n     */\n    updatePerformanceChart(chart, data) {\n        if (!chart || !data) return;\n        \n        const labels = data.map(item => \n            new Date(item.timestamp).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })\n        );\n        const avgTimes = data.map(item => item.avg_time);\n        const successRates = data.map(item => item.success_rate);\n        \n        chart.data.labels = labels;\n        chart.data.datasets[0].data = avgTimes;\n        chart.data.datasets[1].data = successRates;\n        chart.update('none');\n    },\n    \n    /**\n     * Updates LoRA usage chart with new data\n     */\n    updateLoraUsageChart(chart, data) {\n        if (!chart || !data) return;\n        \n        const labels = data.map(item => item.name);\n        const values = data.map(item => item.usage);\n        \n        chart.data.labels = labels;\n        chart.data.datasets[0].data = values;\n        chart.update('none');\n    },\n    \n    /**\n     * Updates system metrics chart with new data\n     */\n    updateSystemMetricsChart(chart, data) {\n        if (!chart || !data) return;\n        \n        const labels = data.map(item => \n            new Date(item.timestamp).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })\n        );\n        const cpuData = data.map(item => item.cpu);\n        const memoryData = data.map(item => item.memory);\n        const gpuData = data.map(item => item.gpu);\n        \n        chart.data.labels = labels;\n        chart.data.datasets[0].data = cpuData;\n        chart.data.datasets[1].data = memoryData;\n        chart.data.datasets[2].data = gpuData;\n        chart.update('none');\n    },\n    \n    /**\n     * Destroys all charts to free memory\n     */\n    destroyCharts(charts) {\n        Object.values(charts).forEach(chart => {\n            if (chart && typeof chart.destroy === 'function') {\n                chart.destroy();\n            }\n        });\n    },\n    \n    /**\n     * Resizes charts when container changes\n     */\n    resizeCharts(charts) {\n        Object.values(charts).forEach(chart => {\n            if (chart && typeof chart.resize === 'function') {\n                chart.resize();\n            }\n        });\n    },\n    \n    /**\n     * Checks if Chart.js is available\n     */\n    isChartJsAvailable() {\n        return typeof Chart !== 'undefined';\n    },\n    \n    /**\n     * Gets chart configuration for export\n     */\n    getChartConfig(chartType) {\n        const configs = {\n            volume: {\n                type: 'line',\n                title: 'Generation Volume Over Time',\n                yAxisLabel: 'Number of Generations'\n            },\n            performance: {\n                type: 'line',\n                title: 'Performance Metrics',\n                yAxisLabel: 'Time (seconds) / Success Rate (%)'\n            },\n            loraUsage: {\n                type: 'doughnut',\n                title: 'LoRA Usage Distribution',\n                yAxisLabel: 'Usage Count'\n            },\n            systemMetrics: {\n                type: 'line',\n                title: 'System Resource Usage',\n                yAxisLabel: 'Usage Percentage (%)'\n            }\n        };\n        \n        return configs[chartType] || null;\n    }\n};\n\n// Export for use in other modules\nif (typeof module !== 'undefined' && module.exports) {\n    module.exports = { performanceCharts };\n} else if (typeof window !== 'undefined') {\n    window.performanceCharts = performanceCharts;\n}\n"],"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","ignoreList":[]}