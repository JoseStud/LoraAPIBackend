1842a83735170209c3ee3ab65fb8bdc4
/* istanbul ignore next */
function cov_25dzc1jo5x() {
  var path = "/home/runner/work/LoraAPIBackend/LoraAPIBackend/app/frontend/static/js/utils/api.js";
  var hash = "670964c5f6abc80581469d978572a9c2808d9e9e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/runner/work/LoraAPIBackend/LoraAPIBackend/app/frontend/static/js/utils/api.js",
    statementMap: {
      "0": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 38,
          column: 5
        }
      },
      "1": {
        start: {
          line: 16,
          column: 31
        },
        end: {
          line: 21,
          column: 9
        }
      },
      "2": {
        start: {
          line: 23,
          column: 25
        },
        end: {
          line: 23,
          column: 76
        }
      },
      "3": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 27,
          column: 9
        }
      },
      "4": {
        start: {
          line: 26,
          column: 12
        },
        end: {
          line: 26,
          column: 70
        }
      },
      "5": {
        start: {
          line: 29,
          column: 28
        },
        end: {
          line: 29,
          column: 64
        }
      },
      "6": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 34,
          column: 9
        }
      },
      "7": {
        start: {
          line: 31,
          column: 12
        },
        end: {
          line: 31,
          column: 41
        }
      },
      "8": {
        start: {
          line: 33,
          column: 12
        },
        end: {
          line: 33,
          column: 41
        }
      },
      "9": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 52
        }
      },
      "10": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 20
        }
      },
      "11": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 53,
          column: 7
        }
      },
      "12": {
        start: {
          line: 64,
          column: 4
        },
        end: {
          line: 68,
          column: 7
        }
      },
      "13": {
        start: {
          line: 78,
          column: 4
        },
        end: {
          line: 81,
          column: 7
        }
      },
      "14": {
        start: {
          line: 92,
          column: 4
        },
        end: {
          line: 123,
          column: 7
        }
      },
      "15": {
        start: {
          line: 93,
          column: 20
        },
        end: {
          line: 93,
          column: 40
        }
      },
      "16": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 102,
          column: 9
        }
      },
      "17": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 101,
          column: 15
        }
      },
      "18": {
        start: {
          line: 97,
          column: 16
        },
        end: {
          line: 100,
          column: 17
        }
      },
      "19": {
        start: {
          line: 98,
          column: 44
        },
        end: {
          line: 98,
          column: 78
        }
      },
      "20": {
        start: {
          line: 99,
          column: 20
        },
        end: {
          line: 99,
          column: 48
        }
      },
      "21": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 115,
          column: 11
        }
      },
      "22": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 114,
          column: 13
        }
      },
      "23": {
        start: {
          line: 106,
          column: 16
        },
        end: {
          line: 111,
          column: 17
        }
      },
      "24": {
        start: {
          line: 107,
          column: 37
        },
        end: {
          line: 107,
          column: 65
        }
      },
      "25": {
        start: {
          line: 108,
          column: 20
        },
        end: {
          line: 108,
          column: 38
        }
      },
      "26": {
        start: {
          line: 110,
          column: 20
        },
        end: {
          line: 110,
          column: 46
        }
      },
      "27": {
        start: {
          line: 113,
          column: 16
        },
        end: {
          line: 113,
          column: 78
        }
      },
      "28": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 119,
          column: 11
        }
      },
      "29": {
        start: {
          line: 118,
          column: 12
        },
        end: {
          line: 118,
          column: 47
        }
      },
      "30": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 121,
          column: 30
        }
      },
      "31": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 122,
          column: 27
        }
      }
    },
    fnMap: {
      "0": {
        name: "fetchData",
        decl: {
          start: {
            line: 14,
            column: 22
          },
          end: {
            line: 14,
            column: 31
          }
        },
        loc: {
          start: {
            line: 14,
            column: 51
          },
          end: {
            line: 39,
            column: 1
          }
        },
        line: 14
      },
      "1": {
        name: "postData",
        decl: {
          start: {
            line: 48,
            column: 22
          },
          end: {
            line: 48,
            column: 30
          }
        },
        loc: {
          start: {
            line: 48,
            column: 56
          },
          end: {
            line: 54,
            column: 1
          }
        },
        line: 48
      },
      "2": {
        name: "putData",
        decl: {
          start: {
            line: 63,
            column: 22
          },
          end: {
            line: 63,
            column: 29
          }
        },
        loc: {
          start: {
            line: 63,
            column: 55
          },
          end: {
            line: 69,
            column: 1
          }
        },
        line: 63
      },
      "3": {
        name: "deleteData",
        decl: {
          start: {
            line: 77,
            column: 22
          },
          end: {
            line: 77,
            column: 32
          }
        },
        loc: {
          start: {
            line: 77,
            column: 52
          },
          end: {
            line: 82,
            column: 1
          }
        },
        line: 77
      },
      "4": {
        name: "uploadFile",
        decl: {
          start: {
            line: 91,
            column: 22
          },
          end: {
            line: 91,
            column: 32
          }
        },
        loc: {
          start: {
            line: 91,
            column: 67
          },
          end: {
            line: 124,
            column: 1
          }
        },
        line: 91
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 92,
            column: 23
          },
          end: {
            line: 92,
            column: 24
          }
        },
        loc: {
          start: {
            line: 92,
            column: 44
          },
          end: {
            line: 123,
            column: 5
          }
        },
        line: 92
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 96,
            column: 52
          },
          end: {
            line: 96,
            column: 53
          }
        },
        loc: {
          start: {
            line: 96,
            column: 63
          },
          end: {
            line: 101,
            column: 13
          }
        },
        line: 96
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 104,
            column: 37
          },
          end: {
            line: 104,
            column: 38
          }
        },
        loc: {
          start: {
            line: 104,
            column: 43
          },
          end: {
            line: 115,
            column: 9
          }
        },
        line: 104
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 117,
            column: 38
          },
          end: {
            line: 117,
            column: 39
          }
        },
        loc: {
          start: {
            line: 117,
            column: 44
          },
          end: {
            line: 119,
            column: 9
          }
        },
        line: 117
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 14,
            column: 37
          },
          end: {
            line: 14,
            column: 49
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 14,
            column: 47
          },
          end: {
            line: 14,
            column: 49
          }
        }],
        line: 14
      },
      "1": {
        loc: {
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 27,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 27,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      },
      "2": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 34,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 34,
            column: 9
          }
        }, {
          start: {
            line: 32,
            column: 15
          },
          end: {
            line: 34,
            column: 9
          }
        }],
        line: 30
      },
      "3": {
        loc: {
          start: {
            line: 30,
            column: 12
          },
          end: {
            line: 30,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 12
          },
          end: {
            line: 30,
            column: 23
          }
        }, {
          start: {
            line: 30,
            column: 27
          },
          end: {
            line: 30,
            column: 67
          }
        }],
        line: 30
      },
      "4": {
        loc: {
          start: {
            line: 48,
            column: 42
          },
          end: {
            line: 48,
            column: 54
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 48,
            column: 52
          },
          end: {
            line: 48,
            column: 54
          }
        }],
        line: 48
      },
      "5": {
        loc: {
          start: {
            line: 63,
            column: 41
          },
          end: {
            line: 63,
            column: 53
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 63,
            column: 51
          },
          end: {
            line: 63,
            column: 53
          }
        }],
        line: 63
      },
      "6": {
        loc: {
          start: {
            line: 77,
            column: 38
          },
          end: {
            line: 77,
            column: 50
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 77,
            column: 48
          },
          end: {
            line: 77,
            column: 50
          }
        }],
        line: 77
      },
      "7": {
        loc: {
          start: {
            line: 91,
            column: 48
          },
          end: {
            line: 91,
            column: 65
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 91,
            column: 61
          },
          end: {
            line: 91,
            column: 65
          }
        }],
        line: 91
      },
      "8": {
        loc: {
          start: {
            line: 95,
            column: 8
          },
          end: {
            line: 102,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 95,
            column: 8
          },
          end: {
            line: 102,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 95
      },
      "9": {
        loc: {
          start: {
            line: 97,
            column: 16
          },
          end: {
            line: 100,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 97,
            column: 16
          },
          end: {
            line: 100,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 97
      },
      "10": {
        loc: {
          start: {
            line: 105,
            column: 12
          },
          end: {
            line: 114,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 105,
            column: 12
          },
          end: {
            line: 114,
            column: 13
          }
        }, {
          start: {
            line: 112,
            column: 19
          },
          end: {
            line: 114,
            column: 13
          }
        }],
        line: 105
      },
      "11": {
        loc: {
          start: {
            line: 105,
            column: 16
          },
          end: {
            line: 105,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 105,
            column: 16
          },
          end: {
            line: 105,
            column: 33
          }
        }, {
          start: {
            line: 105,
            column: 37
          },
          end: {
            line: 105,
            column: 53
          }
        }],
        line: 105
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0],
      "5": [0],
      "6": [0],
      "7": [0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "670964c5f6abc80581469d978572a9c2808d9e9e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_25dzc1jo5x = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_25dzc1jo5x();
/**
 * API Utilities
 * 
 * Functions for handling HTTP requests, API communication,
 * and data fetching operations.
 */

/**
 * Fetch data from an API endpoint with error handling
 * @param {string} url - The API endpoint URL
 * @param {object} options - Fetch options (method, headers, body, etc.)
 * @returns {Promise<any>} The response data
 */
export async function fetchData(url, options =
/* istanbul ignore next */
(cov_25dzc1jo5x().b[0][0]++, {})) {
  /* istanbul ignore next */
  cov_25dzc1jo5x().f[0]++;
  cov_25dzc1jo5x().s[0]++;
  try {
    const defaultOptions =
    /* istanbul ignore next */
    (cov_25dzc1jo5x().s[1]++, {
      headers: {
        'Content-Type': 'application/json',
        ...options.headers
      }
    });
    const response =
    /* istanbul ignore next */
    (cov_25dzc1jo5x().s[2]++, await fetch(url, {
      ...defaultOptions,
      ...options
    }));
    /* istanbul ignore next */
    cov_25dzc1jo5x().s[3]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_25dzc1jo5x().b[1][0]++;
      cov_25dzc1jo5x().s[4]++;
      throw new Error(`HTTP error! status: ${response.status}`);
    } else
    /* istanbul ignore next */
    {
      cov_25dzc1jo5x().b[1][1]++;
    }
    const contentType =
    /* istanbul ignore next */
    (cov_25dzc1jo5x().s[5]++, response.headers.get('content-type'));
    /* istanbul ignore next */
    cov_25dzc1jo5x().s[6]++;
    if (
    /* istanbul ignore next */
    (cov_25dzc1jo5x().b[3][0]++, contentType) &&
    /* istanbul ignore next */
    (cov_25dzc1jo5x().b[3][1]++, contentType.includes('application/json'))) {
      /* istanbul ignore next */
      cov_25dzc1jo5x().b[2][0]++;
      cov_25dzc1jo5x().s[7]++;
      return await response.json();
    } else {
      /* istanbul ignore next */
      cov_25dzc1jo5x().b[2][1]++;
      cov_25dzc1jo5x().s[8]++;
      return await response.text();
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_25dzc1jo5x().s[9]++;
    console.error('API request failed:', error);
    /* istanbul ignore next */
    cov_25dzc1jo5x().s[10]++;
    throw error;
  }
}

/**
 * POST data to an API endpoint
 * @param {string} url - The API endpoint URL
 * @param {any} data - The data to send
 * @param {object} options - Additional fetch options
 * @returns {Promise<any>} The response data
 */
export async function postData(url, data, options =
/* istanbul ignore next */
(cov_25dzc1jo5x().b[4][0]++, {})) {
  /* istanbul ignore next */
  cov_25dzc1jo5x().f[1]++;
  cov_25dzc1jo5x().s[11]++;
  return fetchData(url, {
    method: 'POST',
    body: JSON.stringify(data),
    ...options
  });
}

/**
 * PUT data to an API endpoint
 * @param {string} url - The API endpoint URL
 * @param {any} data - The data to send
 * @param {object} options - Additional fetch options
 * @returns {Promise<any>} The response data
 */
export async function putData(url, data, options =
/* istanbul ignore next */
(cov_25dzc1jo5x().b[5][0]++, {})) {
  /* istanbul ignore next */
  cov_25dzc1jo5x().f[2]++;
  cov_25dzc1jo5x().s[12]++;
  return fetchData(url, {
    method: 'PUT',
    body: JSON.stringify(data),
    ...options
  });
}

/**
 * DELETE from an API endpoint
 * @param {string} url - The API endpoint URL
 * @param {object} options - Additional fetch options
 * @returns {Promise<any>} The response data
 */
export async function deleteData(url, options =
/* istanbul ignore next */
(cov_25dzc1jo5x().b[6][0]++, {})) {
  /* istanbul ignore next */
  cov_25dzc1jo5x().f[3]++;
  cov_25dzc1jo5x().s[13]++;
  return fetchData(url, {
    method: 'DELETE',
    ...options
  });
}

/**
 * Upload a file to an API endpoint
 * @param {string} url - The API endpoint URL
 * @param {FormData} formData - The form data containing the file
 * @param {function} onProgress - Progress callback function
 * @returns {Promise<any>} The response data
 */
export async function uploadFile(url, formData, onProgress =
/* istanbul ignore next */
(cov_25dzc1jo5x().b[7][0]++, null)) {
  /* istanbul ignore next */
  cov_25dzc1jo5x().f[4]++;
  cov_25dzc1jo5x().s[14]++;
  return new Promise((resolve, reject) => {
    /* istanbul ignore next */
    cov_25dzc1jo5x().f[5]++;
    const xhr =
    /* istanbul ignore next */
    (cov_25dzc1jo5x().s[15]++, new XMLHttpRequest());
    /* istanbul ignore next */
    cov_25dzc1jo5x().s[16]++;
    if (onProgress) {
      /* istanbul ignore next */
      cov_25dzc1jo5x().b[8][0]++;
      cov_25dzc1jo5x().s[17]++;
      xhr.upload.addEventListener('progress', event => {
        /* istanbul ignore next */
        cov_25dzc1jo5x().f[6]++;
        cov_25dzc1jo5x().s[18]++;
        if (event.lengthComputable) {
          /* istanbul ignore next */
          cov_25dzc1jo5x().b[9][0]++;
          const percentComplete =
          /* istanbul ignore next */
          (cov_25dzc1jo5x().s[19]++, event.loaded / event.total * 100);
          /* istanbul ignore next */
          cov_25dzc1jo5x().s[20]++;
          onProgress(percentComplete);
        } else
        /* istanbul ignore next */
        {
          cov_25dzc1jo5x().b[9][1]++;
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_25dzc1jo5x().b[8][1]++;
    }
    cov_25dzc1jo5x().s[21]++;
    xhr.addEventListener('load', () => {
      /* istanbul ignore next */
      cov_25dzc1jo5x().f[7]++;
      cov_25dzc1jo5x().s[22]++;
      if (
      /* istanbul ignore next */
      (cov_25dzc1jo5x().b[11][0]++, xhr.status >= 200) &&
      /* istanbul ignore next */
      (cov_25dzc1jo5x().b[11][1]++, xhr.status < 300)) {
        /* istanbul ignore next */
        cov_25dzc1jo5x().b[10][0]++;
        cov_25dzc1jo5x().s[23]++;
        try {
          const response =
          /* istanbul ignore next */
          (cov_25dzc1jo5x().s[24]++, JSON.parse(xhr.responseText));
          /* istanbul ignore next */
          cov_25dzc1jo5x().s[25]++;
          resolve(response);
        } catch {
          /* istanbul ignore next */
          cov_25dzc1jo5x().s[26]++;
          resolve(xhr.responseText);
        }
      } else {
        /* istanbul ignore next */
        cov_25dzc1jo5x().b[10][1]++;
        cov_25dzc1jo5x().s[27]++;
        reject(new Error(`Upload failed with status: ${xhr.status}`));
      }
    });
    /* istanbul ignore next */
    cov_25dzc1jo5x().s[28]++;
    xhr.addEventListener('error', () => {
      /* istanbul ignore next */
      cov_25dzc1jo5x().f[8]++;
      cov_25dzc1jo5x().s[29]++;
      reject(new Error('Upload failed'));
    });
    /* istanbul ignore next */
    cov_25dzc1jo5x().s[30]++;
    xhr.open('POST', url);
    /* istanbul ignore next */
    cov_25dzc1jo5x().s[31]++;
    xhr.send(formData);
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,