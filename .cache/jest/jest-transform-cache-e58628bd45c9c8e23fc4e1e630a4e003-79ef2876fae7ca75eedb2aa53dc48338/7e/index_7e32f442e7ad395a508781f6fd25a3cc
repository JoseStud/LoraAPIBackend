0686e7f3750cdd4b4316ec5385f01e9d
/* istanbul ignore next */
function cov_l9ojyjhpz() {
  var path = "/home/runner/work/LoraAPIBackend/LoraAPIBackend/app/frontend/static/js/components/lora-card/index.js";
  var hash = "99cae0e25b2068b5bfceb6d746dd38144a077efb";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/runner/work/LoraAPIBackend/LoraAPIBackend/app/frontend/static/js/components/lora-card/index.js",
    statementMap: {
      "0": {
        start: {
          line: 13,
          column: 4
        },
        end: {
          line: 221,
          column: 6
        }
      },
      "1": {
        start: {
          line: 36,
          column: 34
        },
        end: {
          line: 36,
          column: 45
        }
      },
      "2": {
        start: {
          line: 37,
          column: 12
        },
        end: {
          line: 37,
          column: 39
        }
      },
      "3": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 72,
          column: 13
        }
      },
      "4": {
        start: {
          line: 40,
          column: 33
        },
        end: {
          line: 40,
          column: 72
        }
      },
      "5": {
        start: {
          line: 41,
          column: 33
        },
        end: {
          line: 46,
          column: 18
        }
      },
      "6": {
        start: {
          line: 48,
          column: 16
        },
        end: {
          line: 50,
          column: 17
        }
      },
      "7": {
        start: {
          line: 49,
          column: 20
        },
        end: {
          line: 49,
          column: 78
        }
      },
      "8": {
        start: {
          line: 53,
          column: 16
        },
        end: {
          line: 57,
          column: 19
        }
      },
      "9": {
        start: {
          line: 61,
          column: 16
        },
        end: {
          line: 61,
          column: 44
        }
      },
      "10": {
        start: {
          line: 62,
          column: 16
        },
        end: {
          line: 64,
          column: 17
        }
      },
      "11": {
        start: {
          line: 63,
          column: 20
        },
        end: {
          line: 63,
          column: 83
        }
      },
      "12": {
        start: {
          line: 67,
          column: 16
        },
        end: {
          line: 71,
          column: 19
        }
      },
      "13": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 111,
          column: 13
        }
      },
      "14": {
        start: {
          line: 81,
          column: 33
        },
        end: {
          line: 87,
          column: 18
        }
      },
      "15": {
        start: {
          line: 89,
          column: 16
        },
        end: {
          line: 91,
          column: 17
        }
      },
      "16": {
        start: {
          line: 90,
          column: 20
        },
        end: {
          line: 90,
          column: 78
        }
      },
      "17": {
        start: {
          line: 94,
          column: 16
        },
        end: {
          line: 98,
          column: 19
        }
      },
      "18": {
        start: {
          line: 101,
          column: 16
        },
        end: {
          line: 103,
          column: 17
        }
      },
      "19": {
        start: {
          line: 102,
          column: 20
        },
        end: {
          line: 102,
          column: 83
        }
      },
      "20": {
        start: {
          line: 106,
          column: 16
        },
        end: {
          line: 110,
          column: 19
        }
      },
      "21": {
        start: {
          line: 119,
          column: 12
        },
        end: {
          line: 119,
          column: 47
        }
      },
      "22": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 125,
          column: 15
        }
      },
      "23": {
        start: {
          line: 133,
          column: 12
        },
        end: {
          line: 133,
          column: 73
        }
      },
      "24": {
        start: {
          line: 140,
          column: 12
        },
        end: {
          line: 173,
          column: 13
        }
      },
      "25": {
        start: {
          line: 141,
          column: 33
        },
        end: {
          line: 146,
          column: 18
        }
      },
      "26": {
        start: {
          line: 148,
          column: 16
        },
        end: {
          line: 159,
          column: 17
        }
      },
      "27": {
        start: {
          line: 150,
          column: 20
        },
        end: {
          line: 153,
          column: 23
        }
      },
      "28": {
        start: {
          line: 156,
          column: 20
        },
        end: {
          line: 156,
          column: 56
        }
      },
      "29": {
        start: {
          line: 158,
          column: 20
        },
        end: {
          line: 158,
          column: 74
        }
      },
      "30": {
        start: {
          line: 161,
          column: 16
        },
        end: {
          line: 163,
          column: 17
        }
      },
      "31": {
        start: {
          line: 162,
          column: 20
        },
        end: {
          line: 162,
          column: 79
        }
      },
      "32": {
        start: {
          line: 166,
          column: 16
        },
        end: {
          line: 170,
          column: 19
        }
      },
      "33": {
        start: {
          line: 172,
          column: 16
        },
        end: {
          line: 172,
          column: 50
        }
      },
      "34": {
        start: {
          line: 180,
          column: 35
        },
        end: {
          line: 180,
          column: 80
        }
      },
      "35": {
        start: {
          line: 182,
          column: 12
        },
        end: {
          line: 184,
          column: 13
        }
      },
      "36": {
        start: {
          line: 183,
          column: 16
        },
        end: {
          line: 183,
          column: 23
        }
      },
      "37": {
        start: {
          line: 186,
          column: 12
        },
        end: {
          line: 219,
          column: 13
        }
      },
      "38": {
        start: {
          line: 187,
          column: 33
        },
        end: {
          line: 192,
          column: 18
        }
      },
      "39": {
        start: {
          line: 194,
          column: 16
        },
        end: {
          line: 205,
          column: 17
        }
      },
      "40": {
        start: {
          line: 196,
          column: 20
        },
        end: {
          line: 199,
          column: 23
        }
      },
      "41": {
        start: {
          line: 202,
          column: 20
        },
        end: {
          line: 202,
          column: 38
        }
      },
      "42": {
        start: {
          line: 204,
          column: 20
        },
        end: {
          line: 204,
          column: 61
        }
      },
      "43": {
        start: {
          line: 207,
          column: 16
        },
        end: {
          line: 209,
          column: 17
        }
      },
      "44": {
        start: {
          line: 208,
          column: 20
        },
        end: {
          line: 208,
          column: 74
        }
      },
      "45": {
        start: {
          line: 212,
          column: 16
        },
        end: {
          line: 216,
          column: 19
        }
      },
      "46": {
        start: {
          line: 218,
          column: 16
        },
        end: {
          line: 218,
          column: 47
        }
      },
      "47": {
        start: {
          line: 227,
          column: 0
        },
        end: {
          line: 229,
          column: 3
        }
      },
      "48": {
        start: {
          line: 228,
          column: 4
        },
        end: {
          line: 228,
          column: 38
        }
      }
    },
    fnMap: {
      "0": {
        name: "loraCard",
        decl: {
          start: {
            line: 12,
            column: 9
          },
          end: {
            line: 12,
            column: 17
          }
        },
        loc: {
          start: {
            line: 12,
            column: 33
          },
          end: {
            line: 222,
            column: 1
          }
        },
        line: 12
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 35,
            column: 9
          }
        },
        loc: {
          start: {
            line: 35,
            column: 29
          },
          end: {
            line: 73,
            column: 9
          }
        },
        line: 35
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 79,
            column: 8
          },
          end: {
            line: 79,
            column: 9
          }
        },
        loc: {
          start: {
            line: 79,
            column: 29
          },
          end: {
            line: 112,
            column: 9
          }
        },
        line: 79
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 118,
            column: 8
          },
          end: {
            line: 118,
            column: 9
          }
        },
        loc: {
          start: {
            line: 118,
            column: 26
          },
          end: {
            line: 126,
            column: 9
          }
        },
        line: 118
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 131,
            column: 8
          },
          end: {
            line: 131,
            column: 9
          }
        },
        loc: {
          start: {
            line: 131,
            column: 35
          },
          end: {
            line: 134,
            column: 9
          }
        },
        line: 131
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 139,
            column: 8
          },
          end: {
            line: 139,
            column: 9
          }
        },
        loc: {
          start: {
            line: 139,
            column: 32
          },
          end: {
            line: 174,
            column: 9
          }
        },
        line: 139
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 179,
            column: 8
          },
          end: {
            line: 179,
            column: 9
          }
        },
        loc: {
          start: {
            line: 179,
            column: 27
          },
          end: {
            line: 220,
            column: 9
          }
        },
        line: 179
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 227,
            column: 41
          },
          end: {
            line: 227,
            column: 42
          }
        },
        loc: {
          start: {
            line: 227,
            column: 47
          },
          end: {
            line: 229,
            column: 1
          }
        },
        line: 227
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 16,
            column: 16
          },
          end: {
            line: 16,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 16,
            column: 16
          },
          end: {
            line: 16,
            column: 36
          }
        }, {
          start: {
            line: 16,
            column: 40
          },
          end: {
            line: 16,
            column: 45
          }
        }],
        line: 16
      },
      "1": {
        loc: {
          start: {
            line: 20,
            column: 14
          },
          end: {
            line: 20,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 14
          },
          end: {
            line: 20,
            column: 32
          }
        }, {
          start: {
            line: 20,
            column: 36
          },
          end: {
            line: 20,
            column: 38
          }
        }],
        line: 20
      },
      "2": {
        loc: {
          start: {
            line: 26,
            column: 18
          },
          end: {
            line: 26,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 26,
            column: 18
          },
          end: {
            line: 26,
            column: 40
          }
        }, {
          start: {
            line: 26,
            column: 44
          },
          end: {
            line: 26,
            column: 50
          }
        }],
        line: 26
      },
      "3": {
        loc: {
          start: {
            line: 27,
            column: 18
          },
          end: {
            line: 27,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 18
          },
          end: {
            line: 27,
            column: 40
          }
        }, {
          start: {
            line: 27,
            column: 44
          },
          end: {
            line: 27,
            column: 49
          }
        }],
        line: 27
      },
      "4": {
        loc: {
          start: {
            line: 28,
            column: 16
          },
          end: {
            line: 28,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 16
          },
          end: {
            line: 28,
            column: 36
          }
        }, {
          start: {
            line: 28,
            column: 40
          },
          end: {
            line: 28,
            column: 43
          }
        }],
        line: 28
      },
      "5": {
        loc: {
          start: {
            line: 40,
            column: 33
          },
          end: {
            line: 40,
            column: 72
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 40,
            column: 47
          },
          end: {
            line: 40,
            column: 57
          }
        }, {
          start: {
            line: 40,
            column: 60
          },
          end: {
            line: 40,
            column: 72
          }
        }],
        line: 40
      },
      "6": {
        loc: {
          start: {
            line: 41,
            column: 46
          },
          end: {
            line: 41,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 46
          },
          end: {
            line: 41,
            column: 65
          }
        }, {
          start: {
            line: 41,
            column: 69
          },
          end: {
            line: 41,
            column: 71
          }
        }],
        line: 41
      },
      "7": {
        loc: {
          start: {
            line: 48,
            column: 16
          },
          end: {
            line: 50,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 16
          },
          end: {
            line: 50,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "8": {
        loc: {
          start: {
            line: 62,
            column: 16
          },
          end: {
            line: 64,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 16
          },
          end: {
            line: 64,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 62
      },
      "9": {
        loc: {
          start: {
            line: 62,
            column: 20
          },
          end: {
            line: 62,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 62,
            column: 20
          },
          end: {
            line: 62,
            column: 36
          }
        }, {
          start: {
            line: 62,
            column: 40
          },
          end: {
            line: 62,
            column: 62
          }
        }],
        line: 62
      },
      "10": {
        loc: {
          start: {
            line: 81,
            column: 46
          },
          end: {
            line: 81,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 81,
            column: 46
          },
          end: {
            line: 81,
            column: 65
          }
        }, {
          start: {
            line: 81,
            column: 69
          },
          end: {
            line: 81,
            column: 71
          }
        }],
        line: 81
      },
      "11": {
        loc: {
          start: {
            line: 89,
            column: 16
          },
          end: {
            line: 91,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 89,
            column: 16
          },
          end: {
            line: 91,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 89
      },
      "12": {
        loc: {
          start: {
            line: 101,
            column: 16
          },
          end: {
            line: 103,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 101,
            column: 16
          },
          end: {
            line: 103,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 101
      },
      "13": {
        loc: {
          start: {
            line: 101,
            column: 20
          },
          end: {
            line: 101,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 101,
            column: 20
          },
          end: {
            line: 101,
            column: 36
          }
        }, {
          start: {
            line: 101,
            column: 40
          },
          end: {
            line: 101,
            column: 62
          }
        }],
        line: 101
      },
      "14": {
        loc: {
          start: {
            line: 141,
            column: 46
          },
          end: {
            line: 141,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 141,
            column: 46
          },
          end: {
            line: 141,
            column: 65
          }
        }, {
          start: {
            line: 141,
            column: 69
          },
          end: {
            line: 141,
            column: 71
          }
        }],
        line: 141
      },
      "15": {
        loc: {
          start: {
            line: 148,
            column: 16
          },
          end: {
            line: 159,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 148,
            column: 16
          },
          end: {
            line: 159,
            column: 17
          }
        }, {
          start: {
            line: 157,
            column: 23
          },
          end: {
            line: 159,
            column: 17
          }
        }],
        line: 148
      },
      "16": {
        loc: {
          start: {
            line: 161,
            column: 16
          },
          end: {
            line: 163,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 161,
            column: 16
          },
          end: {
            line: 163,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 161
      },
      "17": {
        loc: {
          start: {
            line: 161,
            column: 20
          },
          end: {
            line: 161,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 161,
            column: 20
          },
          end: {
            line: 161,
            column: 36
          }
        }, {
          start: {
            line: 161,
            column: 40
          },
          end: {
            line: 161,
            column: 62
          }
        }],
        line: 161
      },
      "18": {
        loc: {
          start: {
            line: 182,
            column: 12
          },
          end: {
            line: 184,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 182,
            column: 12
          },
          end: {
            line: 184,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 182
      },
      "19": {
        loc: {
          start: {
            line: 187,
            column: 46
          },
          end: {
            line: 187,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 187,
            column: 46
          },
          end: {
            line: 187,
            column: 65
          }
        }, {
          start: {
            line: 187,
            column: 69
          },
          end: {
            line: 187,
            column: 71
          }
        }],
        line: 187
      },
      "20": {
        loc: {
          start: {
            line: 194,
            column: 16
          },
          end: {
            line: 205,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 194,
            column: 16
          },
          end: {
            line: 205,
            column: 17
          }
        }, {
          start: {
            line: 203,
            column: 23
          },
          end: {
            line: 205,
            column: 17
          }
        }],
        line: 194
      },
      "21": {
        loc: {
          start: {
            line: 207,
            column: 16
          },
          end: {
            line: 209,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 207,
            column: 16
          },
          end: {
            line: 209,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 207
      },
      "22": {
        loc: {
          start: {
            line: 207,
            column: 20
          },
          end: {
            line: 207,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 207,
            column: 20
          },
          end: {
            line: 207,
            column: 36
          }
        }, {
          start: {
            line: 207,
            column: 40
          },
          end: {
            line: 207,
            column: 62
          }
        }],
        line: 207
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "99cae0e25b2068b5bfceb6d746dd38144a077efb"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_l9ojyjhpz = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_l9ojyjhpz();
/**
 * LoRA Card Component Module
 * Separated JavaScript logic for the lora-card component
 * Implements proper parent-child communication using Alpine's $dispatch
 */

/**
 * Creates a LoRA Card Alpine.js component
 * @param {Object} initialConfig - Initial configuration passed from the template
 * @returns {Object} Alpine.js component object
 */
function loraCard(initialConfig) {
  /* istanbul ignore next */
  cov_l9ojyjhpz().f[0]++;
  cov_l9ojyjhpz().s[0]++;
  return {
    // Core properties from initial config
    id: initialConfig.id,
    active:
    /* istanbul ignore next */
    (cov_l9ojyjhpz().b[0][0]++, initialConfig.active) ||
    /* istanbul ignore next */
    (cov_l9ojyjhpz().b[0][1]++, false),
    name: initialConfig.name,
    version: initialConfig.version,
    description: initialConfig.description,
    tags:
    /* istanbul ignore next */
    (cov_l9ojyjhpz().b[1][0]++, initialConfig.tags) ||
    /* istanbul ignore next */
    (cov_l9ojyjhpz().b[1][1]++, []),
    preview_image: initialConfig.preview_image,
    quality_score: initialConfig.quality_score,
    type: initialConfig.type,
    // Component state
    viewMode:
    /* istanbul ignore next */
    (cov_l9ojyjhpz().b[2][0]++, initialConfig.viewMode) ||
    /* istanbul ignore next */
    (cov_l9ojyjhpz().b[2][1]++, 'grid'),
    bulkMode:
    /* istanbul ignore next */
    (cov_l9ojyjhpz().b[3][0]++, initialConfig.bulkMode) ||
    /* istanbul ignore next */
    (cov_l9ojyjhpz().b[3][1]++, false),
    weight:
    /* istanbul ignore next */
    (cov_l9ojyjhpz().b[4][0]++, initialConfig.weight) ||
    /* istanbul ignore next */
    (cov_l9ojyjhpz().b[4][1]++, 1.0),
    isSelected: false,
    /**
     * Toggle the active state of the LoRA
     * Makes API call and updates the component state
     */
    async toggleActive() {
      /* istanbul ignore next */
      cov_l9ojyjhpz().f[1]++;
      const previousState =
      /* istanbul ignore next */
      (cov_l9ojyjhpz().s[1]++, this.active);
      /* istanbul ignore next */
      cov_l9ojyjhpz().s[2]++;
      this.active = !this.active;
      /* istanbul ignore next */
      cov_l9ojyjhpz().s[3]++;
      try {
        const endpoint =
        /* istanbul ignore next */
        (cov_l9ojyjhpz().s[4]++, this.active ?
        /* istanbul ignore next */
        (cov_l9ojyjhpz().b[5][0]++, 'activate') :
        /* istanbul ignore next */
        (cov_l9ojyjhpz().b[5][1]++, 'deactivate'));
        const response =
        /* istanbul ignore next */
        (cov_l9ojyjhpz().s[5]++, await fetch((
        /* istanbul ignore next */
        (cov_l9ojyjhpz().b[6][0]++, window?.BACKEND_URL) ||
        /* istanbul ignore next */
        (cov_l9ojyjhpz().b[6][1]++, '')) + `/adapters/${this.id}/${endpoint}`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          }
        }));
        /* istanbul ignore next */
        cov_l9ojyjhpz().s[6]++;
        if (!response.ok) {
          /* istanbul ignore next */
          cov_l9ojyjhpz().b[7][0]++;
          cov_l9ojyjhpz().s[7]++;
          throw new Error(`HTTP error! status: ${response.status}`);
        } else
        /* istanbul ignore next */
        {
          cov_l9ojyjhpz().b[7][1]++;
        }

        // Dispatch event to notify parent components of state change
        cov_l9ojyjhpz().s[8]++;
        this.$dispatch('lora-updated', {
          id: this.id,
          active: this.active,
          type: 'activation'
        });
      } catch (error) {
        /* istanbul ignore next */
        cov_l9ojyjhpz().s[9]++;
        // Revert state on error
        this.active = previousState;
        /* istanbul ignore next */
        cov_l9ojyjhpz().s[10]++;
        if (
        /* istanbul ignore next */
        (cov_l9ojyjhpz().b[9][0]++, window.DevLogger) &&
        /* istanbul ignore next */
        (cov_l9ojyjhpz().b[9][1]++, window.DevLogger.error)) {
          /* istanbul ignore next */
          cov_l9ojyjhpz().b[8][0]++;
          cov_l9ojyjhpz().s[11]++;
          window.DevLogger.error('Failed to toggle LoRA status:', error);
        } else
        /* istanbul ignore next */
        {
          cov_l9ojyjhpz().b[8][1]++;
        }

        // Dispatch error event
        cov_l9ojyjhpz().s[12]++;
        this.$dispatch('lora-error', {
          id: this.id,
          error: 'Failed to toggle LoRA status',
          type: 'activation'
        });
      }
    },
    /**
     * Update the weight of the LoRA
     * Makes API call to persist the weight change
     */
    async updateWeight() {
      /* istanbul ignore next */
      cov_l9ojyjhpz().f[2]++;
      cov_l9ojyjhpz().s[13]++;
      try {
        const response =
        /* istanbul ignore next */
        (cov_l9ojyjhpz().s[14]++, await fetch((
        /* istanbul ignore next */
        (cov_l9ojyjhpz().b[10][0]++, window?.BACKEND_URL) ||
        /* istanbul ignore next */
        (cov_l9ojyjhpz().b[10][1]++, '')) + `/adapters/${this.id}/weight`, {
          method: 'PATCH',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            weight: parseFloat(this.weight)
          })
        }));
        /* istanbul ignore next */
        cov_l9ojyjhpz().s[15]++;
        if (!response.ok) {
          /* istanbul ignore next */
          cov_l9ojyjhpz().b[11][0]++;
          cov_l9ojyjhpz().s[16]++;
          throw new Error(`HTTP error! status: ${response.status}`);
        } else
        /* istanbul ignore next */
        {
          cov_l9ojyjhpz().b[11][1]++;
        }

        // Dispatch event to notify parent components of weight change
        cov_l9ojyjhpz().s[17]++;
        this.$dispatch('lora-updated', {
          id: this.id,
          weight: this.weight,
          type: 'weight'
        });
      } catch (error) {
        /* istanbul ignore next */
        cov_l9ojyjhpz().s[18]++;
        if (
        /* istanbul ignore next */
        (cov_l9ojyjhpz().b[13][0]++, window.DevLogger) &&
        /* istanbul ignore next */
        (cov_l9ojyjhpz().b[13][1]++, window.DevLogger.error)) {
          /* istanbul ignore next */
          cov_l9ojyjhpz().b[12][0]++;
          cov_l9ojyjhpz().s[19]++;
          window.DevLogger.error('Failed to update LoRA weight:', error);
        } else
        /* istanbul ignore next */
        {
          cov_l9ojyjhpz().b[12][1]++;
        }

        // Dispatch error event
        cov_l9ojyjhpz().s[20]++;
        this.$dispatch('lora-error', {
          id: this.id,
          error: 'Failed to update weight',
          type: 'weight'
        });
      }
    },
    /**
     * Toggle selection state for bulk operations
     * Uses $dispatch for explicit parent-child communication
     */
    toggleSelection() {
      /* istanbul ignore next */
      cov_l9ojyjhpz().f[3]++;
      cov_l9ojyjhpz().s[21]++;
      this.isSelected = !this.isSelected;

      // Dispatch selection-changed event with clear detail structure
      /* istanbul ignore next */
      cov_l9ojyjhpz().s[22]++;
      this.$dispatch('selection-changed', {
        id: this.id,
        selected: this.isSelected
      });
    },
    /**
     * Navigate to recommendations page for similar LoRAs
     */
    async getRecommendations() {
      /* istanbul ignore next */
      cov_l9ojyjhpz().f[4]++;
      cov_l9ojyjhpz().s[23]++;
      // Navigate to recommendations page with this LoRA
      window.location.href = `/recommendations?similar=${this.id}`;
    },
    /**
     * Generate preview image for the LoRA
     */
    async generatePreview() {
      /* istanbul ignore next */
      cov_l9ojyjhpz().f[5]++;
      cov_l9ojyjhpz().s[24]++;
      try {
        const response =
        /* istanbul ignore next */
        (cov_l9ojyjhpz().s[25]++, await fetch((
        /* istanbul ignore next */
        (cov_l9ojyjhpz().b[14][0]++, window?.BACKEND_URL) ||
        /* istanbul ignore next */
        (cov_l9ojyjhpz().b[14][1]++, '')) + `/generation/preview/${this.id}`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          }
        }));
        /* istanbul ignore next */
        cov_l9ojyjhpz().s[26]++;
        if (response.ok) {
          /* istanbul ignore next */
          cov_l9ojyjhpz().b[15][0]++;
          cov_l9ojyjhpz().s[27]++;
          // Dispatch success event
          this.$dispatch('lora-updated', {
            id: this.id,
            type: 'preview-generated'
          });

          // Show user feedback
          /* istanbul ignore next */
          cov_l9ojyjhpz().s[28]++;
          alert('Preview generation started');
        } else {
          /* istanbul ignore next */
          cov_l9ojyjhpz().b[15][1]++;
          cov_l9ojyjhpz().s[29]++;
          throw new Error('Failed to start preview generation');
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_l9ojyjhpz().s[30]++;
        if (
        /* istanbul ignore next */
        (cov_l9ojyjhpz().b[17][0]++, window.DevLogger) &&
        /* istanbul ignore next */
        (cov_l9ojyjhpz().b[17][1]++, window.DevLogger.error)) {
          /* istanbul ignore next */
          cov_l9ojyjhpz().b[16][0]++;
          cov_l9ojyjhpz().s[31]++;
          window.DevLogger.error('Error generating preview:', error);
        } else
        /* istanbul ignore next */
        {
          cov_l9ojyjhpz().b[16][1]++;
        }

        // Dispatch error event
        cov_l9ojyjhpz().s[32]++;
        this.$dispatch('lora-error', {
          id: this.id,
          error: 'Error generating preview',
          type: 'preview'
        });
        /* istanbul ignore next */
        cov_l9ojyjhpz().s[33]++;
        alert('Error generating preview');
      }
    },
    /**
     * Delete the LoRA with confirmation
     */
    async deleteLora() {
      /* istanbul ignore next */
      cov_l9ojyjhpz().f[6]++;
      const confirmMessage =
      /* istanbul ignore next */
      (cov_l9ojyjhpz().s[34]++, `Delete ${this.name}? This cannot be undone.`);
      /* istanbul ignore next */
      cov_l9ojyjhpz().s[35]++;
      if (!confirm(confirmMessage)) {
        /* istanbul ignore next */
        cov_l9ojyjhpz().b[18][0]++;
        cov_l9ojyjhpz().s[36]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_l9ojyjhpz().b[18][1]++;
      }
      cov_l9ojyjhpz().s[37]++;
      try {
        const response =
        /* istanbul ignore next */
        (cov_l9ojyjhpz().s[38]++, await fetch((
        /* istanbul ignore next */
        (cov_l9ojyjhpz().b[19][0]++, window?.BACKEND_URL) ||
        /* istanbul ignore next */
        (cov_l9ojyjhpz().b[19][1]++, '')) + `/adapters/${this.id}`, {
          method: 'DELETE',
          headers: {
            'Content-Type': 'application/json'
          }
        }));
        /* istanbul ignore next */
        cov_l9ojyjhpz().s[39]++;
        if (response.ok) {
          /* istanbul ignore next */
          cov_l9ojyjhpz().b[20][0]++;
          cov_l9ojyjhpz().s[40]++;
          // Dispatch deletion event to parent
          this.$dispatch('lora-deleted', {
            id: this.id,
            name: this.name
          });

          // Remove the element from DOM
          /* istanbul ignore next */
          cov_l9ojyjhpz().s[41]++;
          this.$el.remove();
        } else {
          /* istanbul ignore next */
          cov_l9ojyjhpz().b[20][1]++;
          cov_l9ojyjhpz().s[42]++;
          throw new Error('Failed to delete LoRA');
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_l9ojyjhpz().s[43]++;
        if (
        /* istanbul ignore next */
        (cov_l9ojyjhpz().b[22][0]++, window.DevLogger) &&
        /* istanbul ignore next */
        (cov_l9ojyjhpz().b[22][1]++, window.DevLogger.error)) {
          /* istanbul ignore next */
          cov_l9ojyjhpz().b[21][0]++;
          cov_l9ojyjhpz().s[44]++;
          window.DevLogger.error('Error deleting LoRA:', error);
        } else
        /* istanbul ignore next */
        {
          cov_l9ojyjhpz().b[21][1]++;
        }

        // Dispatch error event
        cov_l9ojyjhpz().s[45]++;
        this.$dispatch('lora-error', {
          id: this.id,
          error: 'Failed to delete LoRA',
          type: 'deletion'
        });
        /* istanbul ignore next */
        cov_l9ojyjhpz().s[46]++;
        alert('Failed to delete LoRA');
      }
    }
  };
}

/**
 * Register the component with Alpine.js when the DOM is ready
 */
/* istanbul ignore next */
cov_l9ojyjhpz().s[47]++;
document.addEventListener('alpine:init', () => {
  /* istanbul ignore next */
  cov_l9ojyjhpz().f[7]++;
  cov_l9ojyjhpz().s[48]++;
  Alpine.data('loraCard', loraCard);
});

// Export for potential direct use in other modules
export { loraCard };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,