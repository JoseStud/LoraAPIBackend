7a811189545810f588a8768e1b65dae5
/* istanbul ignore next */
function cov_1htzef8s16() {
  var path = "/home/runner/work/LoraAPIBackend/LoraAPIBackend/app/frontend/static/js/components/system-admin/metrics.js";
  var hash = "07d5364391475705fe0c7baec20df708809d4c44";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/runner/work/LoraAPIBackend/LoraAPIBackend/app/frontend/static/js/components/system-admin/metrics.js",
    statementMap: {
      "0": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 23
        }
      },
      "1": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 41
        }
      },
      "2": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 35
        }
      },
      "3": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 31
        }
      },
      "4": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 23,
          column: 10
        }
      },
      "5": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 33,
          column: 9
        }
      },
      "6": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 32,
          column: 31
        }
      },
      "7": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 30
        }
      },
      "8": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 40,
          column: 40
        }
      },
      "9": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 39,
          column: 44
        }
      },
      "10": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 45,
          column: 38
        }
      },
      "11": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 44,
          column: 42
        }
      },
      "12": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 50,
          column: 40
        }
      },
      "13": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 49,
          column: 44
        }
      },
      "14": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 55,
          column: 39
        }
      },
      "15": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 54,
          column: 43
        }
      },
      "16": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 60,
          column: 9
        }
      },
      "17": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 59,
          column: 41
        }
      },
      "18": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 64,
          column: 9
        }
      },
      "19": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 63,
          column: 69
        }
      },
      "20": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 76,
          column: 11
        }
      },
      "21": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 72,
          column: 36
        }
      },
      "22": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 75,
          column: 13
        }
      },
      "23": {
        start: {
          line: 74,
          column: 16
        },
        end: {
          line: 74,
          column: 67
        }
      },
      "24": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 77,
          column: 31
        }
      },
      "25": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 78,
          column: 31
        }
      },
      "26": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 88,
          column: 9
        }
      },
      "27": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 87,
          column: 54
        }
      },
      "28": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 92,
          column: 37
        }
      },
      "29": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 91,
          column: 41
        }
      },
      "30": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 102,
          column: 9
        }
      },
      "31": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 100,
          column: 54
        }
      },
      "32": {
        start: {
          line: 101,
          column: 12
        },
        end: {
          line: 101,
          column: 42
        }
      },
      "33": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 118,
          column: 9
        }
      },
      "34": {
        start: {
          line: 111,
          column: 12
        },
        end: {
          line: 111,
          column: 69
        }
      },
      "35": {
        start: {
          line: 112,
          column: 28
        },
        end: {
          line: 112,
          column: 61
        }
      },
      "36": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 113,
          column: 66
        }
      },
      "37": {
        start: {
          line: 115,
          column: 12
        },
        end: {
          line: 115,
          column: 71
        }
      },
      "38": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 117,
          column: 70
        }
      },
      "39": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 135,
          column: 9
        }
      },
      "40": {
        start: {
          line: 127,
          column: 26
        },
        end: {
          line: 127,
          column: 57
        }
      },
      "41": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 128,
          column: 52
        }
      },
      "42": {
        start: {
          line: 131,
          column: 28
        },
        end: {
          line: 131,
          column: 61
        }
      },
      "43": {
        start: {
          line: 132,
          column: 12
        },
        end: {
          line: 132,
          column: 50
        }
      },
      "44": {
        start: {
          line: 134,
          column: 12
        },
        end: {
          line: 134,
          column: 69
        }
      },
      "45": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 151,
          column: 9
        }
      },
      "46": {
        start: {
          line: 144,
          column: 27
        },
        end: {
          line: 144,
          column: 59
        }
      },
      "47": {
        start: {
          line: 145,
          column: 12
        },
        end: {
          line: 145,
          column: 64
        }
      },
      "48": {
        start: {
          line: 147,
          column: 12
        },
        end: {
          line: 147,
          column: 70
        }
      },
      "49": {
        start: {
          line: 149,
          column: 12
        },
        end: {
          line: 149,
          column: 49
        }
      },
      "50": {
        start: {
          line: 150,
          column: 12
        },
        end: {
          line: 150,
          column: 69
        }
      },
      "51": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 167,
          column: 9
        }
      },
      "52": {
        start: {
          line: 160,
          column: 12
        },
        end: {
          line: 160,
          column: 70
        }
      },
      "53": {
        start: {
          line: 161,
          column: 28
        },
        end: {
          line: 161,
          column: 55
        }
      },
      "54": {
        start: {
          line: 162,
          column: 12
        },
        end: {
          line: 162,
          column: 60
        }
      },
      "55": {
        start: {
          line: 164,
          column: 12
        },
        end: {
          line: 164,
          column: 64
        }
      },
      "56": {
        start: {
          line: 166,
          column: 12
        },
        end: {
          line: 166,
          column: 71
        }
      },
      "57": {
        start: {
          line: 175,
          column: 8
        },
        end: {
          line: 193,
          column: 9
        }
      },
      "58": {
        start: {
          line: 176,
          column: 28
        },
        end: {
          line: 180,
          column: 13
        }
      },
      "59": {
        start: {
          line: 182,
          column: 28
        },
        end: {
          line: 182,
          column: 59
        }
      },
      "60": {
        start: {
          line: 185,
          column: 32
        },
        end: {
          line: 185,
          column: 75
        }
      },
      "61": {
        start: {
          line: 185,
          column: 67
        },
        end: {
          line: 185,
          column: 73
        }
      },
      "62": {
        start: {
          line: 186,
          column: 36
        },
        end: {
          line: 186,
          column: 83
        }
      },
      "63": {
        start: {
          line: 186,
          column: 58
        },
        end: {
          line: 186,
          column: 82
        }
      },
      "64": {
        start: {
          line: 188,
          column: 12
        },
        end: {
          line: 190,
          column: 13
        }
      },
      "65": {
        start: {
          line: 189,
          column: 16
        },
        end: {
          line: 189,
          column: 72
        }
      },
      "66": {
        start: {
          line: 192,
          column: 12
        },
        end: {
          line: 192,
          column: 61
        }
      },
      "67": {
        start: {
          line: 202,
          column: 24
        },
        end: {
          line: 202,
          column: 43
        }
      },
      "68": {
        start: {
          line: 203,
          column: 24
        },
        end: {
          line: 203,
          column: 37
        }
      },
      "69": {
        start: {
          line: 204,
          column: 27
        },
        end: {
          line: 209,
          column: 9
        }
      },
      "70": {
        start: {
          line: 212,
          column: 8
        },
        end: {
          line: 218,
          column: 9
        }
      },
      "71": {
        start: {
          line: 213,
          column: 12
        },
        end: {
          line: 213,
          column: 62
        }
      },
      "72": {
        start: {
          line: 214,
          column: 12
        },
        end: {
          line: 214,
          column: 35
        }
      },
      "73": {
        start: {
          line: 215,
          column: 15
        },
        end: {
          line: 218,
          column: 9
        }
      },
      "74": {
        start: {
          line: 216,
          column: 12
        },
        end: {
          line: 216,
          column: 59
        }
      },
      "75": {
        start: {
          line: 217,
          column: 12
        },
        end: {
          line: 217,
          column: 35
        }
      },
      "76": {
        start: {
          line: 221,
          column: 8
        },
        end: {
          line: 227,
          column: 9
        }
      },
      "77": {
        start: {
          line: 222,
          column: 12
        },
        end: {
          line: 222,
          column: 60
        }
      },
      "78": {
        start: {
          line: 223,
          column: 12
        },
        end: {
          line: 223,
          column: 35
        }
      },
      "79": {
        start: {
          line: 224,
          column: 15
        },
        end: {
          line: 227,
          column: 9
        }
      },
      "80": {
        start: {
          line: 225,
          column: 12
        },
        end: {
          line: 225,
          column: 58
        }
      },
      "81": {
        start: {
          line: 226,
          column: 12
        },
        end: {
          line: 226,
          column: 35
        }
      },
      "82": {
        start: {
          line: 230,
          column: 8
        },
        end: {
          line: 236,
          column: 9
        }
      },
      "83": {
        start: {
          line: 231,
          column: 12
        },
        end: {
          line: 231,
          column: 64
        }
      },
      "84": {
        start: {
          line: 232,
          column: 12
        },
        end: {
          line: 232,
          column: 35
        }
      },
      "85": {
        start: {
          line: 233,
          column: 15
        },
        end: {
          line: 236,
          column: 9
        }
      },
      "86": {
        start: {
          line: 234,
          column: 12
        },
        end: {
          line: 234,
          column: 63
        }
      },
      "87": {
        start: {
          line: 235,
          column: 12
        },
        end: {
          line: 235,
          column: 35
        }
      },
      "88": {
        start: {
          line: 239,
          column: 29
        },
        end: {
          line: 239,
          column: 85
        }
      },
      "89": {
        start: {
          line: 239,
          column: 57
        },
        end: {
          line: 239,
          column: 77
        }
      },
      "90": {
        start: {
          line: 240,
          column: 8
        },
        end: {
          line: 243,
          column: 9
        }
      },
      "91": {
        start: {
          line: 241,
          column: 12
        },
        end: {
          line: 241,
          column: 79
        }
      },
      "92": {
        start: {
          line: 242,
          column: 12
        },
        end: {
          line: 242,
          column: 52
        }
      },
      "93": {
        start: {
          line: 245,
          column: 28
        },
        end: {
          line: 245,
          column: 83
        }
      },
      "94": {
        start: {
          line: 245,
          column: 56
        },
        end: {
          line: 245,
          column: 75
        }
      },
      "95": {
        start: {
          line: 246,
          column: 8
        },
        end: {
          line: 249,
          column: 9
        }
      },
      "96": {
        start: {
          line: 247,
          column: 12
        },
        end: {
          line: 247,
          column: 61
        }
      },
      "97": {
        start: {
          line: 248,
          column: 12
        },
        end: {
          line: 248,
          column: 34
        }
      },
      "98": {
        start: {
          line: 252,
          column: 8
        },
        end: {
          line: 256,
          column: 9
        }
      },
      "99": {
        start: {
          line: 253,
          column: 12
        },
        end: {
          line: 253,
          column: 44
        }
      },
      "100": {
        start: {
          line: 254,
          column: 15
        },
        end: {
          line: 256,
          column: 9
        }
      },
      "101": {
        start: {
          line: 255,
          column: 12
        },
        end: {
          line: 255,
          column: 43
        }
      },
      "102": {
        start: {
          line: 258,
          column: 8
        },
        end: {
          line: 258,
          column: 26
        }
      },
      "103": {
        start: {
          line: 269,
          column: 24
        },
        end: {
          line: 269,
          column: 43
        }
      },
      "104": {
        start: {
          line: 271,
          column: 8
        },
        end: {
          line: 287,
          column: 10
        }
      },
      "105": {
        start: {
          line: 295,
          column: 8
        },
        end: {
          line: 295,
          column: 50
        }
      },
      "106": {
        start: {
          line: 297,
          column: 8
        },
        end: {
          line: 299,
          column: 9
        }
      },
      "107": {
        start: {
          line: 298,
          column: 12
        },
        end: {
          line: 298,
          column: 89
        }
      },
      "108": {
        start: {
          line: 308,
          column: 8
        },
        end: {
          line: 310,
          column: 9
        }
      },
      "109": {
        start: {
          line: 309,
          column: 12
        },
        end: {
          line: 309,
          column: 51
        }
      },
      "110": {
        start: {
          line: 313,
          column: 8
        },
        end: {
          line: 317,
          column: 9
        }
      },
      "111": {
        start: {
          line: 314,
          column: 12
        },
        end: {
          line: 316,
          column: 16
        }
      },
      "112": {
        start: {
          line: 328,
          column: 4
        },
        end: {
          line: 328,
          column: 55
        }
      },
      "113": {
        start: {
          line: 332,
          column: 0
        },
        end: {
          line: 337,
          column: 1
        }
      },
      "114": {
        start: {
          line: 333,
          column: 4
        },
        end: {
          line: 333,
          column: 68
        }
      },
      "115": {
        start: {
          line: 334,
          column: 7
        },
        end: {
          line: 337,
          column: 1
        }
      },
      "116": {
        start: {
          line: 335,
          column: 4
        },
        end: {
          line: 335,
          column: 55
        }
      },
      "117": {
        start: {
          line: 336,
          column: 4
        },
        end: {
          line: 336,
          column: 55
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 35
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 12
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        loc: {
          start: {
            line: 30,
            column: 24
          },
          end: {
            line: 65,
            column: 5
          }
        },
        line: 30
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 38,
            column: 50
          },
          end: {
            line: 38,
            column: 51
          }
        },
        loc: {
          start: {
            line: 38,
            column: 62
          },
          end: {
            line: 40,
            column: 9
          }
        },
        line: 38
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 43,
            column: 48
          },
          end: {
            line: 43,
            column: 49
          }
        },
        loc: {
          start: {
            line: 43,
            column: 60
          },
          end: {
            line: 45,
            column: 9
          }
        },
        line: 43
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 48,
            column: 50
          },
          end: {
            line: 48,
            column: 51
          }
        },
        loc: {
          start: {
            line: 48,
            column: 62
          },
          end: {
            line: 50,
            column: 9
          }
        },
        line: 48
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 53,
            column: 49
          },
          end: {
            line: 53,
            column: 50
          }
        },
        loc: {
          start: {
            line: 53,
            column: 61
          },
          end: {
            line: 55,
            column: 9
          }
        },
        line: 53
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 70,
            column: 4
          },
          end: {
            line: 70,
            column: 5
          }
        },
        loc: {
          start: {
            line: 70,
            column: 18
          },
          end: {
            line: 79,
            column: 5
          }
        },
        line: 70
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 71,
            column: 31
          },
          end: {
            line: 71,
            column: 32
          }
        },
        loc: {
          start: {
            line: 71,
            column: 51
          },
          end: {
            line: 76,
            column: 9
          }
        },
        line: 71
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 85,
            column: 4
          },
          end: {
            line: 85,
            column: 5
          }
        },
        loc: {
          start: {
            line: 85,
            column: 28
          },
          end: {
            line: 93,
            column: 5
          }
        },
        line: 85
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 90,
            column: 47
          },
          end: {
            line: 90,
            column: 48
          }
        },
        loc: {
          start: {
            line: 90,
            column: 59
          },
          end: {
            line: 92,
            column: 9
          }
        },
        line: 90
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 98,
            column: 4
          },
          end: {
            line: 98,
            column: 5
          }
        },
        loc: {
          start: {
            line: 98,
            column: 22
          },
          end: {
            line: 103,
            column: 5
          }
        },
        line: 98
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 109,
            column: 4
          },
          end: {
            line: 109,
            column: 5
          }
        },
        loc: {
          start: {
            line: 109,
            column: 31
          },
          end: {
            line: 119,
            column: 5
          }
        },
        line: 109
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 125,
            column: 4
          },
          end: {
            line: 125,
            column: 5
          }
        },
        loc: {
          start: {
            line: 125,
            column: 29
          },
          end: {
            line: 136,
            column: 5
          }
        },
        line: 125
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 142,
            column: 4
          },
          end: {
            line: 142,
            column: 5
          }
        },
        loc: {
          start: {
            line: 142,
            column: 30
          },
          end: {
            line: 152,
            column: 5
          }
        },
        line: 142
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 158,
            column: 4
          },
          end: {
            line: 158,
            column: 5
          }
        },
        loc: {
          start: {
            line: 158,
            column: 31
          },
          end: {
            line: 168,
            column: 5
          }
        },
        line: 158
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 174,
            column: 4
          },
          end: {
            line: 174,
            column: 5
          }
        },
        loc: {
          start: {
            line: 174,
            column: 28
          },
          end: {
            line: 194,
            column: 5
          }
        },
        line: 174
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 185,
            column: 60
          },
          end: {
            line: 185,
            column: 61
          }
        },
        loc: {
          start: {
            line: 185,
            column: 67
          },
          end: {
            line: 185,
            column: 73
          }
        },
        line: 185
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 186,
            column: 51
          },
          end: {
            line: 186,
            column: 52
          }
        },
        loc: {
          start: {
            line: 186,
            column: 58
          },
          end: {
            line: 186,
            column: 82
          }
        },
        line: 186
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 201,
            column: 4
          },
          end: {
            line: 201,
            column: 5
          }
        },
        loc: {
          start: {
            line: 201,
            column: 31
          },
          end: {
            line: 259,
            column: 5
          }
        },
        line: 201
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 239,
            column: 52
          },
          end: {
            line: 239,
            column: 53
          }
        },
        loc: {
          start: {
            line: 239,
            column: 57
          },
          end: {
            line: 239,
            column: 77
          }
        },
        line: 239
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 245,
            column: 51
          },
          end: {
            line: 245,
            column: 52
          }
        },
        loc: {
          start: {
            line: 245,
            column: 56
          },
          end: {
            line: 245,
            column: 75
          }
        },
        line: 245
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 266,
            column: 4
          },
          end: {
            line: 266,
            column: 5
          }
        },
        loc: {
          start: {
            line: 266,
            column: 32
          },
          end: {
            line: 288,
            column: 5
          }
        },
        line: 266
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 294,
            column: 4
          },
          end: {
            line: 294,
            column: 5
          }
        },
        loc: {
          start: {
            line: 294,
            column: 29
          },
          end: {
            line: 300,
            column: 5
          }
        },
        line: 294
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 307,
            column: 4
          },
          end: {
            line: 307,
            column: 5
          }
        },
        loc: {
          start: {
            line: 307,
            column: 32
          },
          end: {
            line: 318,
            column: 5
          }
        },
        line: 307
      },
      "24": {
        name: "createMetricsManager",
        decl: {
          start: {
            line: 327,
            column: 9
          },
          end: {
            line: 327,
            column: 29
          }
        },
        loc: {
          start: {
            line: 327,
            column: 49
          },
          end: {
            line: 329,
            column: 1
          }
        },
        line: 327
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 33,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 33,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 31
      },
      "1": {
        loc: {
          start: {
            line: 58,
            column: 8
          },
          end: {
            line: 60,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 8
          },
          end: {
            line: 60,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 58
      },
      "2": {
        loc: {
          start: {
            line: 58,
            column: 12
          },
          end: {
            line: 58,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 58,
            column: 12
          },
          end: {
            line: 58,
            column: 22
          }
        }, {
          start: {
            line: 58,
            column: 26
          },
          end: {
            line: 58,
            column: 52
          }
        }],
        line: 58
      },
      "3": {
        loc: {
          start: {
            line: 62,
            column: 8
          },
          end: {
            line: 64,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 8
          },
          end: {
            line: 64,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 62
      },
      "4": {
        loc: {
          start: {
            line: 62,
            column: 12
          },
          end: {
            line: 62,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 62,
            column: 12
          },
          end: {
            line: 62,
            column: 28
          }
        }, {
          start: {
            line: 62,
            column: 32
          },
          end: {
            line: 62,
            column: 54
          }
        }],
        line: 62
      },
      "5": {
        loc: {
          start: {
            line: 73,
            column: 12
          },
          end: {
            line: 75,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 73,
            column: 12
          },
          end: {
            line: 75,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 73
      },
      "6": {
        loc: {
          start: {
            line: 73,
            column: 16
          },
          end: {
            line: 73,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 73,
            column: 16
          },
          end: {
            line: 73,
            column: 32
          }
        }, {
          start: {
            line: 73,
            column: 36
          },
          end: {
            line: 73,
            column: 58
          }
        }],
        line: 73
      },
      "7": {
        loc: {
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 88,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 88,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 86
      },
      "8": {
        loc: {
          start: {
            line: 99,
            column: 8
          },
          end: {
            line: 102,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 99,
            column: 8
          },
          end: {
            line: 102,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 99
      },
      "9": {
        loc: {
          start: {
            line: 188,
            column: 12
          },
          end: {
            line: 190,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 188,
            column: 12
          },
          end: {
            line: 190,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 188
      },
      "10": {
        loc: {
          start: {
            line: 212,
            column: 8
          },
          end: {
            line: 218,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 212,
            column: 8
          },
          end: {
            line: 218,
            column: 9
          }
        }, {
          start: {
            line: 215,
            column: 15
          },
          end: {
            line: 218,
            column: 9
          }
        }],
        line: 212
      },
      "11": {
        loc: {
          start: {
            line: 215,
            column: 15
          },
          end: {
            line: 218,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 215,
            column: 15
          },
          end: {
            line: 218,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 215
      },
      "12": {
        loc: {
          start: {
            line: 221,
            column: 8
          },
          end: {
            line: 227,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 221,
            column: 8
          },
          end: {
            line: 227,
            column: 9
          }
        }, {
          start: {
            line: 224,
            column: 15
          },
          end: {
            line: 227,
            column: 9
          }
        }],
        line: 221
      },
      "13": {
        loc: {
          start: {
            line: 224,
            column: 15
          },
          end: {
            line: 227,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 224,
            column: 15
          },
          end: {
            line: 227,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 224
      },
      "14": {
        loc: {
          start: {
            line: 230,
            column: 8
          },
          end: {
            line: 236,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 230,
            column: 8
          },
          end: {
            line: 236,
            column: 9
          }
        }, {
          start: {
            line: 233,
            column: 15
          },
          end: {
            line: 236,
            column: 9
          }
        }],
        line: 230
      },
      "15": {
        loc: {
          start: {
            line: 233,
            column: 15
          },
          end: {
            line: 236,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 233,
            column: 15
          },
          end: {
            line: 236,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 233
      },
      "16": {
        loc: {
          start: {
            line: 240,
            column: 8
          },
          end: {
            line: 243,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 240,
            column: 8
          },
          end: {
            line: 243,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 240
      },
      "17": {
        loc: {
          start: {
            line: 246,
            column: 8
          },
          end: {
            line: 249,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 246,
            column: 8
          },
          end: {
            line: 249,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 246
      },
      "18": {
        loc: {
          start: {
            line: 246,
            column: 12
          },
          end: {
            line: 246,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 246,
            column: 12
          },
          end: {
            line: 246,
            column: 50
          }
        }, {
          start: {
            line: 246,
            column: 54
          },
          end: {
            line: 246,
            column: 80
          }
        }],
        line: 246
      },
      "19": {
        loc: {
          start: {
            line: 252,
            column: 8
          },
          end: {
            line: 256,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 252,
            column: 8
          },
          end: {
            line: 256,
            column: 9
          }
        }, {
          start: {
            line: 254,
            column: 15
          },
          end: {
            line: 256,
            column: 9
          }
        }],
        line: 252
      },
      "20": {
        loc: {
          start: {
            line: 254,
            column: 15
          },
          end: {
            line: 256,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 254,
            column: 15
          },
          end: {
            line: 256,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 254
      },
      "21": {
        loc: {
          start: {
            line: 254,
            column: 19
          },
          end: {
            line: 254,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 254,
            column: 19
          },
          end: {
            line: 254,
            column: 40
          }
        }, {
          start: {
            line: 254,
            column: 44
          },
          end: {
            line: 254,
            column: 72
          }
        }],
        line: 254
      },
      "22": {
        loc: {
          start: {
            line: 297,
            column: 8
          },
          end: {
            line: 299,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 297,
            column: 8
          },
          end: {
            line: 299,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 297
      },
      "23": {
        loc: {
          start: {
            line: 297,
            column: 12
          },
          end: {
            line: 297,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 297,
            column: 12
          },
          end: {
            line: 297,
            column: 28
          }
        }, {
          start: {
            line: 297,
            column: 32
          },
          end: {
            line: 297,
            column: 54
          }
        }],
        line: 297
      },
      "24": {
        loc: {
          start: {
            line: 308,
            column: 8
          },
          end: {
            line: 310,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 308,
            column: 8
          },
          end: {
            line: 310,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 308
      },
      "25": {
        loc: {
          start: {
            line: 308,
            column: 12
          },
          end: {
            line: 308,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 308,
            column: 12
          },
          end: {
            line: 308,
            column: 28
          }
        }, {
          start: {
            line: 308,
            column: 32
          },
          end: {
            line: 308,
            column: 54
          }
        }],
        line: 308
      },
      "26": {
        loc: {
          start: {
            line: 313,
            column: 8
          },
          end: {
            line: 317,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 313,
            column: 8
          },
          end: {
            line: 317,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 313
      },
      "27": {
        loc: {
          start: {
            line: 332,
            column: 0
          },
          end: {
            line: 337,
            column: 1
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 332,
            column: 0
          },
          end: {
            line: 337,
            column: 1
          }
        }, {
          start: {
            line: 334,
            column: 7
          },
          end: {
            line: 337,
            column: 1
          }
        }],
        line: 332
      },
      "28": {
        loc: {
          start: {
            line: 332,
            column: 4
          },
          end: {
            line: 332,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 332,
            column: 4
          },
          end: {
            line: 332,
            column: 33
          }
        }, {
          start: {
            line: 332,
            column: 37
          },
          end: {
            line: 332,
            column: 51
          }
        }],
        line: 332
      },
      "29": {
        loc: {
          start: {
            line: 334,
            column: 7
          },
          end: {
            line: 337,
            column: 1
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 334,
            column: 7
          },
          end: {
            line: 337,
            column: 1
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 334
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "07d5364391475705fe0c7baec20df708809d4c44"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1htzef8s16 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1htzef8s16();
/**
 * System Administration Metrics Module
 * 
 * Handles metrics polling, status monitoring, and real-time updates
 * for the system administration component.
 */

/**
 * Metrics manager for system administration
 */
class SystemMetricsManager {
  constructor(api, stateUpdater) {
    /* istanbul ignore next */
    cov_1htzef8s16().f[0]++;
    cov_1htzef8s16().s[0]++;
    this.api = api;
    /* istanbul ignore next */
    cov_1htzef8s16().s[1]++;
    this.stateUpdater = stateUpdater;
    /* istanbul ignore next */
    cov_1htzef8s16().s[2]++;
    this.intervals = new Map();
    /* istanbul ignore next */
    cov_1htzef8s16().s[3]++;
    this.isRunning = false;
    /* istanbul ignore next */
    cov_1htzef8s16().s[4]++;
    this.pollingConfig = {
      metrics: 5000,
      // 5 seconds
      stats: 30000,
      // 30 seconds
      workers: 5000,
      // 5 seconds
      logs: 10000,
      // 10 seconds (if auto-refresh enabled)
      status: 60000 // 1 minute
    };
  }

  /**
   * Start all metric polling
   * @param {Object} state - Component state object
   */
  startPolling(state) {
    /* istanbul ignore next */
    cov_1htzef8s16().f[1]++;
    cov_1htzef8s16().s[5]++;
    if (this.isRunning) {
      /* istanbul ignore next */
      cov_1htzef8s16().b[0][0]++;
      cov_1htzef8s16().s[6]++;
      this.stopPolling();
    } else
    /* istanbul ignore next */
    {
      cov_1htzef8s16().b[0][1]++;
    }
    cov_1htzef8s16().s[7]++;
    this.isRunning = true;

    // Start system metrics polling
    /* istanbul ignore next */
    cov_1htzef8s16().s[8]++;
    this.intervals.set('metrics', setInterval(async () => {
      /* istanbul ignore next */
      cov_1htzef8s16().f[2]++;
      cov_1htzef8s16().s[9]++;
      await this.updateMetrics(state);
    }, this.pollingConfig.metrics));

    // Start system stats polling
    /* istanbul ignore next */
    cov_1htzef8s16().s[10]++;
    this.intervals.set('stats', setInterval(async () => {
      /* istanbul ignore next */
      cov_1htzef8s16().f[3]++;
      cov_1htzef8s16().s[11]++;
      await this.updateStats(state);
    }, this.pollingConfig.stats));

    // Start workers polling
    /* istanbul ignore next */
    cov_1htzef8s16().s[12]++;
    this.intervals.set('workers', setInterval(async () => {
      /* istanbul ignore next */
      cov_1htzef8s16().f[4]++;
      cov_1htzef8s16().s[13]++;
      await this.updateWorkers(state);
    }, this.pollingConfig.workers));

    // Start status polling
    /* istanbul ignore next */
    cov_1htzef8s16().s[14]++;
    this.intervals.set('status', setInterval(async () => {
      /* istanbul ignore next */
      cov_1htzef8s16().f[5]++;
      cov_1htzef8s16().s[15]++;
      await this.updateStatus(state);
    }, this.pollingConfig.status));

    // Start logs polling if auto-refresh is enabled
    /* istanbul ignore next */
    cov_1htzef8s16().s[16]++;
    if (
    /* istanbul ignore next */
    (cov_1htzef8s16().b[2][0]++, state.logs) &&
    /* istanbul ignore next */
    (cov_1htzef8s16().b[2][1]++, state.logs.autoRefreshLogs)) {
      /* istanbul ignore next */
      cov_1htzef8s16().b[1][0]++;
      cov_1htzef8s16().s[17]++;
      this.startLogsPolling(state);
    } else
    /* istanbul ignore next */
    {
      cov_1htzef8s16().b[1][1]++;
    }
    cov_1htzef8s16().s[18]++;
    if (
    /* istanbul ignore next */
    (cov_1htzef8s16().b[4][0]++, window.DevLogger) &&
    /* istanbul ignore next */
    (cov_1htzef8s16().b[4][1]++, window.DevLogger.debug)) {
      /* istanbul ignore next */
      cov_1htzef8s16().b[3][0]++;
      cov_1htzef8s16().s[19]++;
      window.DevLogger.debug('System metrics polling started');
    } else
    /* istanbul ignore next */
    {
      cov_1htzef8s16().b[3][1]++;
    }
  }

  /**
   * Stop all metric polling
   */
  stopPolling() {
    /* istanbul ignore next */
    cov_1htzef8s16().f[6]++;
    cov_1htzef8s16().s[20]++;
    this.intervals.forEach((interval, name) => {
      /* istanbul ignore next */
      cov_1htzef8s16().f[7]++;
      cov_1htzef8s16().s[21]++;
      clearInterval(interval);
      /* istanbul ignore next */
      cov_1htzef8s16().s[22]++;
      if (
      /* istanbul ignore next */
      (cov_1htzef8s16().b[6][0]++, window.DevLogger) &&
      /* istanbul ignore next */
      (cov_1htzef8s16().b[6][1]++, window.DevLogger.debug)) {
        /* istanbul ignore next */
        cov_1htzef8s16().b[5][0]++;
        cov_1htzef8s16().s[23]++;
        window.DevLogger.debug(`Stopped polling: ${name}`);
      } else
      /* istanbul ignore next */
      {
        cov_1htzef8s16().b[5][1]++;
      }
    });
    /* istanbul ignore next */
    cov_1htzef8s16().s[24]++;
    this.intervals.clear();
    /* istanbul ignore next */
    cov_1htzef8s16().s[25]++;
    this.isRunning = false;
  }

  /**
   * Start logs polling specifically
   * @param {Object} state - Component state object
   */
  startLogsPolling(state) {
    /* istanbul ignore next */
    cov_1htzef8s16().f[8]++;
    cov_1htzef8s16().s[26]++;
    if (this.intervals.has('logs')) {
      /* istanbul ignore next */
      cov_1htzef8s16().b[7][0]++;
      cov_1htzef8s16().s[27]++;
      clearInterval(this.intervals.get('logs'));
    } else
    /* istanbul ignore next */
    {
      cov_1htzef8s16().b[7][1]++;
    }
    cov_1htzef8s16().s[28]++;
    this.intervals.set('logs', setInterval(async () => {
      /* istanbul ignore next */
      cov_1htzef8s16().f[9]++;
      cov_1htzef8s16().s[29]++;
      await this.updateLogs(state);
    }, this.pollingConfig.logs));
  }

  /**
   * Stop logs polling specifically
   */
  stopLogsPolling() {
    /* istanbul ignore next */
    cov_1htzef8s16().f[10]++;
    cov_1htzef8s16().s[30]++;
    if (this.intervals.has('logs')) {
      /* istanbul ignore next */
      cov_1htzef8s16().b[8][0]++;
      cov_1htzef8s16().s[31]++;
      clearInterval(this.intervals.get('logs'));
      /* istanbul ignore next */
      cov_1htzef8s16().s[32]++;
      this.intervals.delete('logs');
    } else
    /* istanbul ignore next */
    {
      cov_1htzef8s16().b[8][1]++;
    }
  }

  /**
   * Update system metrics
   * @param {Object} state - Component state object
   */
  async updateMetrics(state) {
    /* istanbul ignore next */
    cov_1htzef8s16().f[11]++;
    cov_1htzef8s16().s[33]++;
    try {
      /* istanbul ignore next */
      cov_1htzef8s16().s[34]++;
      this.stateUpdater.setLoadingState(state, 'system', true);
      const metrics =
      /* istanbul ignore next */
      (cov_1htzef8s16().s[35]++, await this.api.getSystemMetrics());
      /* istanbul ignore next */
      cov_1htzef8s16().s[36]++;
      this.stateUpdater.updateSystemMetrics(state, metrics);
    } catch (error) {
      /* istanbul ignore next */
      cov_1htzef8s16().s[37]++;
      this.handleError('Failed to update system metrics', error);
    } finally {
      /* istanbul ignore next */
      cov_1htzef8s16().s[38]++;
      this.stateUpdater.setLoadingState(state, 'system', false);
    }
  }

  /**
   * Update system statistics
   * @param {Object} state - Component state object
   */
  async updateStats(state) {
    /* istanbul ignore next */
    cov_1htzef8s16().f[12]++;
    cov_1htzef8s16().s[39]++;
    try {
      const stats =
      /* istanbul ignore next */
      (cov_1htzef8s16().s[40]++, await this.api.getSystemStats());
      /* istanbul ignore next */
      cov_1htzef8s16().s[41]++;
      Object.assign(state.systemStats, stats);

      // Also update database stats
      const dbStats =
      /* istanbul ignore next */
      (cov_1htzef8s16().s[42]++, await this.api.getDatabaseStats());
      /* istanbul ignore next */
      cov_1htzef8s16().s[43]++;
      Object.assign(state.dbStats, dbStats);
    } catch (error) {
      /* istanbul ignore next */
      cov_1htzef8s16().s[44]++;
      this.handleError('Failed to update system stats', error);
    }
  }

  /**
   * Update system status
   * @param {Object} state - Component state object
   */
  async updateStatus(state) {
    /* istanbul ignore next */
    cov_1htzef8s16().f[13]++;
    cov_1htzef8s16().s[45]++;
    try {
      const status =
      /* istanbul ignore next */
      (cov_1htzef8s16().s[46]++, await this.api.getSystemStatus());
      /* istanbul ignore next */
      cov_1htzef8s16().s[47]++;
      this.stateUpdater.updateSystemStatus(state, status);
    } catch (error) {
      /* istanbul ignore next */
      cov_1htzef8s16().s[48]++;
      this.handleError('Failed to update system status', error);
      // Set status to error if we can't reach the API
      /* istanbul ignore next */
      cov_1htzef8s16().s[49]++;
      state.systemStatus.overall = 'error';
      /* istanbul ignore next */
      cov_1htzef8s16().s[50]++;
      state.systemStatus.last_check = new Date().toISOString();
    }
  }

  /**
   * Update workers information
   * @param {Object} state - Component state object
   */
  async updateWorkers(state) {
    /* istanbul ignore next */
    cov_1htzef8s16().f[14]++;
    cov_1htzef8s16().s[51]++;
    try {
      /* istanbul ignore next */
      cov_1htzef8s16().s[52]++;
      this.stateUpdater.setLoadingState(state, 'workers', true);
      const workers =
      /* istanbul ignore next */
      (cov_1htzef8s16().s[53]++, await this.api.getWorkers());
      /* istanbul ignore next */
      cov_1htzef8s16().s[54]++;
      this.stateUpdater.updateWorkers(state, workers);
    } catch (error) {
      /* istanbul ignore next */
      cov_1htzef8s16().s[55]++;
      this.handleError('Failed to update workers', error);
    } finally {
      /* istanbul ignore next */
      cov_1htzef8s16().s[56]++;
      this.stateUpdater.setLoadingState(state, 'workers', false);
    }
  }

  /**
   * Update logs
   * @param {Object} state - Component state object
   */
  async updateLogs(state) {
    /* istanbul ignore next */
    cov_1htzef8s16().f[15]++;
    cov_1htzef8s16().s[57]++;
    try {
      const options =
      /* istanbul ignore next */
      (cov_1htzef8s16().s[58]++, {
        limit: 100,
        // Get recent logs
        level: state.logs.logLevel,
        source: state.logs.logSource
      });
      const newLogs =
      /* istanbul ignore next */
      (cov_1htzef8s16().s[59]++, await this.api.getLogs(options));

      // Only add truly new logs to avoid duplicates
      const existingIds =
      /* istanbul ignore next */
      (cov_1htzef8s16().s[60]++, new Set(state.logs.logs.map(log => {
        /* istanbul ignore next */
        cov_1htzef8s16().f[16]++;
        cov_1htzef8s16().s[61]++;
        return log.id;
      })));
      const filteredNewLogs =
      /* istanbul ignore next */
      (cov_1htzef8s16().s[62]++, newLogs.filter(log => {
        /* istanbul ignore next */
        cov_1htzef8s16().f[17]++;
        cov_1htzef8s16().s[63]++;
        return !existingIds.has(log.id);
      }));
      /* istanbul ignore next */
      cov_1htzef8s16().s[64]++;
      if (filteredNewLogs.length > 0) {
        /* istanbul ignore next */
        cov_1htzef8s16().b[9][0]++;
        cov_1htzef8s16().s[65]++;
        this.stateUpdater.addLogEntries(state, filteredNewLogs);
      } else
      /* istanbul ignore next */
      {
        cov_1htzef8s16().b[9][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_1htzef8s16().s[66]++;
      this.handleError('Failed to update logs', error);
    }
  }

  /**
   * Get health assessment based on current metrics
   * @param {Object} state - Component state object
   * @returns {Object} Health assessment
   */
  getHealthAssessment(state) {
    /* istanbul ignore next */
    cov_1htzef8s16().f[18]++;
    const metrics =
    /* istanbul ignore next */
    (cov_1htzef8s16().s[67]++, state.systemMetrics);
    const workers =
    /* istanbul ignore next */
    (cov_1htzef8s16().s[68]++, state.workers);
    const assessment =
    /* istanbul ignore next */
    (cov_1htzef8s16().s[69]++, {
      overall: 'healthy',
      issues: [],
      warnings: [],
      score: 100
    });

    // Check CPU usage
    /* istanbul ignore next */
    cov_1htzef8s16().s[70]++;
    if (metrics.cpu_percent > 90) {
      /* istanbul ignore next */
      cov_1htzef8s16().b[10][0]++;
      cov_1htzef8s16().s[71]++;
      assessment.issues.push('High CPU usage detected');
      /* istanbul ignore next */
      cov_1htzef8s16().s[72]++;
      assessment.score -= 20;
    } else {
      /* istanbul ignore next */
      cov_1htzef8s16().b[10][1]++;
      cov_1htzef8s16().s[73]++;
      if (metrics.cpu_percent > 70) {
        /* istanbul ignore next */
        cov_1htzef8s16().b[11][0]++;
        cov_1htzef8s16().s[74]++;
        assessment.warnings.push('Elevated CPU usage');
        /* istanbul ignore next */
        cov_1htzef8s16().s[75]++;
        assessment.score -= 10;
      } else
      /* istanbul ignore next */
      {
        cov_1htzef8s16().b[11][1]++;
      }
    }

    // Check memory usage
    /* istanbul ignore next */
    cov_1htzef8s16().s[76]++;
    if (metrics.memory_percent > 95) {
      /* istanbul ignore next */
      cov_1htzef8s16().b[12][0]++;
      cov_1htzef8s16().s[77]++;
      assessment.issues.push('Critical memory usage');
      /* istanbul ignore next */
      cov_1htzef8s16().s[78]++;
      assessment.score -= 25;
    } else {
      /* istanbul ignore next */
      cov_1htzef8s16().b[12][1]++;
      cov_1htzef8s16().s[79]++;
      if (metrics.memory_percent > 80) {
        /* istanbul ignore next */
        cov_1htzef8s16().b[13][0]++;
        cov_1htzef8s16().s[80]++;
        assessment.warnings.push('High memory usage');
        /* istanbul ignore next */
        cov_1htzef8s16().s[81]++;
        assessment.score -= 10;
      } else
      /* istanbul ignore next */
      {
        cov_1htzef8s16().b[13][1]++;
      }
    }

    // Check disk usage
    /* istanbul ignore next */
    cov_1htzef8s16().s[82]++;
    if (metrics.disk_percent > 95) {
      /* istanbul ignore next */
      cov_1htzef8s16().b[14][0]++;
      cov_1htzef8s16().s[83]++;
      assessment.issues.push('Disk space critically low');
      /* istanbul ignore next */
      cov_1htzef8s16().s[84]++;
      assessment.score -= 25;
    } else {
      /* istanbul ignore next */
      cov_1htzef8s16().b[14][1]++;
      cov_1htzef8s16().s[85]++;
      if (metrics.disk_percent > 85) {
        /* istanbul ignore next */
        cov_1htzef8s16().b[15][0]++;
        cov_1htzef8s16().s[86]++;
        assessment.warnings.push('Disk space running low');
        /* istanbul ignore next */
        cov_1htzef8s16().s[87]++;
        assessment.score -= 10;
      } else
      /* istanbul ignore next */
      {
        cov_1htzef8s16().b[15][1]++;
      }
    }

    // Check workers
    const errorWorkers =
    /* istanbul ignore next */
    (cov_1htzef8s16().s[88]++, workers.workers.filter(w => {
      /* istanbul ignore next */
      cov_1htzef8s16().f[19]++;
      cov_1htzef8s16().s[89]++;
      return w.status === 'error';
    }).length);
    /* istanbul ignore next */
    cov_1htzef8s16().s[90]++;
    if (errorWorkers > 0) {
      /* istanbul ignore next */
      cov_1htzef8s16().b[16][0]++;
      cov_1htzef8s16().s[91]++;
      assessment.issues.push(`${errorWorkers} worker(s) in error state`);
      /* istanbul ignore next */
      cov_1htzef8s16().s[92]++;
      assessment.score -= errorWorkers * 10;
    } else
    /* istanbul ignore next */
    {
      cov_1htzef8s16().b[16][1]++;
    }
    const idleWorkers =
    /* istanbul ignore next */
    (cov_1htzef8s16().s[93]++, workers.workers.filter(w => {
      /* istanbul ignore next */
      cov_1htzef8s16().f[20]++;
      cov_1htzef8s16().s[94]++;
      return w.status === 'idle';
    }).length);
    /* istanbul ignore next */
    cov_1htzef8s16().s[95]++;
    if (
    /* istanbul ignore next */
    (cov_1htzef8s16().b[18][0]++, idleWorkers === workers.workers.length) &&
    /* istanbul ignore next */
    (cov_1htzef8s16().b[18][1]++, workers.workers.length > 0)) {
      /* istanbul ignore next */
      cov_1htzef8s16().b[17][0]++;
      cov_1htzef8s16().s[96]++;
      assessment.warnings.push('All workers are idle');
      /* istanbul ignore next */
      cov_1htzef8s16().s[97]++;
      assessment.score -= 5;
    } else
    /* istanbul ignore next */
    {
      cov_1htzef8s16().b[17][1]++;
    }

    // Determine overall status
    cov_1htzef8s16().s[98]++;
    if (assessment.score < 60) {
      /* istanbul ignore next */
      cov_1htzef8s16().b[19][0]++;
      cov_1htzef8s16().s[99]++;
      assessment.overall = 'critical';
    } else {
      /* istanbul ignore next */
      cov_1htzef8s16().b[19][1]++;
      cov_1htzef8s16().s[100]++;
      if (
      /* istanbul ignore next */
      (cov_1htzef8s16().b[21][0]++, assessment.score < 80) ||
      /* istanbul ignore next */
      (cov_1htzef8s16().b[21][1]++, assessment.issues.length > 0)) {
        /* istanbul ignore next */
        cov_1htzef8s16().b[20][0]++;
        cov_1htzef8s16().s[101]++;
        assessment.overall = 'warning';
      } else
      /* istanbul ignore next */
      {
        cov_1htzef8s16().b[20][1]++;
      }
    }
    /* istanbul ignore next */
    cov_1htzef8s16().s[102]++;
    return assessment;
  }

  /**
   * Get performance trends
   * @param {Object} state - Component state object
   * @returns {Object} Performance trends data
   */
  getPerformanceTrends(state) {
    /* istanbul ignore next */
    cov_1htzef8s16().f[21]++;
    // This would typically store historical data
    // For now, return current snapshot
    const metrics =
    /* istanbul ignore next */
    (cov_1htzef8s16().s[103]++, state.systemMetrics);
    /* istanbul ignore next */
    cov_1htzef8s16().s[104]++;
    return {
      cpu: {
        current: metrics.cpu_percent,
        trend: 'stable',
        // would be calculated from history
        peak: metrics.cpu_percent
      },
      memory: {
        current: metrics.memory_percent,
        trend: 'stable',
        peak: metrics.memory_percent
      },
      workers: {
        active: state.workers.workerStats.active,
        total: state.workers.workerStats.total,
        efficiency: state.workers.workerStats.active / Math.max(state.workers.workerStats.total, 1)
      }
    };
  }

  /**
   * Configure polling intervals
   * @param {Object} config - Configuration object
   */
  configurePolling(config) {
    /* istanbul ignore next */
    cov_1htzef8s16().f[22]++;
    cov_1htzef8s16().s[105]++;
    Object.assign(this.pollingConfig, config);
    /* istanbul ignore next */
    cov_1htzef8s16().s[106]++;
    if (
    /* istanbul ignore next */
    (cov_1htzef8s16().b[23][0]++, window.DevLogger) &&
    /* istanbul ignore next */
    (cov_1htzef8s16().b[23][1]++, window.DevLogger.debug)) {
      /* istanbul ignore next */
      cov_1htzef8s16().b[22][0]++;
      cov_1htzef8s16().s[107]++;
      window.DevLogger.debug('Polling configuration updated:', this.pollingConfig);
    } else
    /* istanbul ignore next */
    {
      cov_1htzef8s16().b[22][1]++;
    }
  }

  /**
   * Handle errors consistently
   * @param {string} message - Error message
   * @param {Error} error - Error object
   */
  handleError(message, error) {
    /* istanbul ignore next */
    cov_1htzef8s16().f[23]++;
    cov_1htzef8s16().s[108]++;
    if (
    /* istanbul ignore next */
    (cov_1htzef8s16().b[25][0]++, window.DevLogger) &&
    /* istanbul ignore next */
    (cov_1htzef8s16().b[25][1]++, window.DevLogger.error)) {
      /* istanbul ignore next */
      cov_1htzef8s16().b[24][0]++;
      cov_1htzef8s16().s[109]++;
      window.DevLogger.error(message, error);
    } else
    /* istanbul ignore next */
    {
      cov_1htzef8s16().b[24][1]++;
    }

    // Could emit events here for toast notifications
    cov_1htzef8s16().s[110]++;
    if (typeof window.dispatchEvent === 'function') {
      /* istanbul ignore next */
      cov_1htzef8s16().b[26][0]++;
      cov_1htzef8s16().s[111]++;
      window.dispatchEvent(new CustomEvent('systemMetricsError', {
        detail: {
          message,
          error
        }
      }));
    } else
    /* istanbul ignore next */
    {
      cov_1htzef8s16().b[26][1]++;
    }
  }
}

/**
 * Create a metrics manager instance
 * @param {Object} api - API client instance
 * @param {Object} stateUpdater - State updater utilities
 * @returns {SystemMetricsManager} Metrics manager instance
 */
function createMetricsManager(api, stateUpdater) {
  /* istanbul ignore next */
  cov_1htzef8s16().f[24]++;
  cov_1htzef8s16().s[112]++;
  return new SystemMetricsManager(api, stateUpdater);
}

// Export for use in other modules
/* istanbul ignore next */
cov_1htzef8s16().s[113]++;
if (
/* istanbul ignore next */
(cov_1htzef8s16().b[28][0]++, typeof module !== 'undefined') &&
/* istanbul ignore next */
(cov_1htzef8s16().b[28][1]++, module.exports)) {
  /* istanbul ignore next */
  cov_1htzef8s16().b[27][0]++;
  cov_1htzef8s16().s[114]++;
  module.exports = {
    SystemMetricsManager,
    createMetricsManager
  };
} else {
  /* istanbul ignore next */
  cov_1htzef8s16().b[27][1]++;
  cov_1htzef8s16().s[115]++;
  if (typeof window !== 'undefined') {
    /* istanbul ignore next */
    cov_1htzef8s16().b[29][0]++;
    cov_1htzef8s16().s[116]++;
    window.SystemMetricsManager = SystemMetricsManager;
    /* istanbul ignore next */
    cov_1htzef8s16().s[117]++;
    window.createMetricsManager = createMetricsManager;
  } else
  /* istanbul ignore next */
  {
    cov_1htzef8s16().b[29][1]++;
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,