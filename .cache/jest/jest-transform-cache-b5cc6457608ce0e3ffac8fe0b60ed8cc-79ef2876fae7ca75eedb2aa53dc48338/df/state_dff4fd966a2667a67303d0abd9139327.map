{"version":3,"names":["generationState","createInitialState","params","prompt","negative_prompt","width","height","steps","cfg_scale","seed","batch_count","batch_size","activeJobs","recentResults","systemStatus","isGenerating","showHistory","showModal","selectedResult","showToast","toastMessage","websocket","pollInterval","isConnected","config","pollIntervalMs","maxRecentResults","toastDuration","maxRetries","updateParams","state","newParams","validParams","validateParams","validated","undefined","String","trim","Number","cfg","isInteger","count","size","addActiveJob","jobData","newJob","id","Date","now","toString","status","progress","current_step","total_steps","created_at","toISOString","start_time","eta","unshift","updateActiveJob","jobId","updates","jobIndex","findIndex","job","removeActiveJob","initialLength","length","filter","addRecentResult","resultData","newResult","job_id","image_url","thumbnail_url","file_size","generation_time","model_used","maxResults","slice","removeRecentResult","resultId","result","updateSystemStatus","statusData","last_updated","setGenerationStatus","Boolean","setConnectionStatus","message","type","setTimeout","hideToast","showResultModal","hideResultModal","toggleHistory","getJobById","find","getResultById","getStatistics","totalJobs","processingJobs","queuedJobs","completedToday","today","toDateString","resultDate","totalActiveJobs","totalResults","isSystemHealthy","averageGenerationTime","calculateAverageGenerationTime","lastUpdate","timeSinceUpdate","isRecent","hasStuckJobs","some","processingTime","resultsWithTime","totalTime","reduce","sum","clearState","Object","assign","exportState","timestamp","importState","importedData","Array","isArray","module","exports","window"],"sources":["state.js"],"sourcesContent":["/**\n * Generation Studio - State Management Module\n * \n * Handles state initialization and management for the generation studio component.\n */\n\n/**\n * Creates and manages state for the generation studio\n */\nconst generationState = {\n    /**\n     * Creates initial state\n     */\n    createInitialState() {\n        return {\n            // Generation Parameters\n            params: {\n                prompt: '',\n                negative_prompt: '',\n                width: 512,\n                height: 512,\n                steps: 20,\n                cfg_scale: 7.0,\n                seed: -1,\n                batch_count: 1,\n                batch_size: 1\n            },\n            \n            // Core State\n            activeJobs: [],\n            recentResults: [],\n            systemStatus: {},\n            \n            // UI State\n            isGenerating: false,\n            showHistory: false,\n            showModal: false,\n            selectedResult: null,\n            showToast: false,\n            toastMessage: '',\n            \n            // Network State\n            websocket: null,\n            pollInterval: null,\n            isConnected: false,\n            \n            // Configuration\n            config: {\n                pollIntervalMs: 2000,\n                maxRecentResults: 50,\n                toastDuration: 3000,\n                maxRetries: 3\n            }\n        };\n    },\n    \n    /**\n     * Updates generation parameters\n     */\n    updateParams(state, newParams) {\n        const validParams = this.validateParams(newParams);\n        state.params = { ...state.params, ...validParams };\n        return state;\n    },\n    \n    /**\n     * Validates generation parameters\n     */\n    validateParams(params) {\n        const validated = {};\n        \n        if (params.prompt !== undefined) {\n            validated.prompt = String(params.prompt).trim();\n        }\n        \n        if (params.negative_prompt !== undefined) {\n            validated.negative_prompt = String(params.negative_prompt).trim();\n        }\n        \n        if (params.width !== undefined) {\n            const width = Number(params.width);\n            validated.width = width >= 64 && width <= 2048 ? width : 512;\n        }\n        \n        if (params.height !== undefined) {\n            const height = Number(params.height);\n            validated.height = height >= 64 && height <= 2048 ? height : 512;\n        }\n        \n        if (params.steps !== undefined) {\n            const steps = Number(params.steps);\n            validated.steps = steps >= 1 && steps <= 150 ? steps : 20;\n        }\n        \n        if (params.cfg_scale !== undefined) {\n            const cfg = Number(params.cfg_scale);\n            validated.cfg_scale = cfg >= 1 && cfg <= 30 ? cfg : 7.0;\n        }\n        \n        if (params.seed !== undefined) {\n            const seed = Number(params.seed);\n            validated.seed = Number.isInteger(seed) ? seed : -1;\n        }\n        \n        if (params.batch_count !== undefined) {\n            const count = Number(params.batch_count);\n            validated.batch_count = count >= 1 && count <= 10 ? count : 1;\n        }\n        \n        if (params.batch_size !== undefined) {\n            const size = Number(params.batch_size);\n            validated.batch_size = size >= 1 && size <= 4 ? size : 1;\n        }\n        \n        return validated;\n    },\n    \n    /**\n     * Adds a new job to active jobs\n     */\n    addActiveJob(state, jobData) {\n        const newJob = {\n            id: jobData.id || Date.now().toString(),\n            prompt: jobData.prompt || state.params.prompt,\n            negative_prompt: jobData.negative_prompt || state.params.negative_prompt,\n            width: jobData.width || state.params.width,\n            height: jobData.height || state.params.height,\n            steps: jobData.steps || state.params.steps,\n            cfg_scale: jobData.cfg_scale || state.params.cfg_scale,\n            seed: jobData.seed || state.params.seed,\n            batch_count: jobData.batch_count || state.params.batch_count,\n            batch_size: jobData.batch_size || state.params.batch_size,\n            status: jobData.status || 'queued',\n            progress: jobData.progress || 0,\n            current_step: 0,\n            total_steps: jobData.steps || state.params.steps,\n            created_at: jobData.created_at || new Date().toISOString(),\n            start_time: null,\n            eta: null\n        };\n        \n        state.activeJobs.unshift(newJob);\n        return newJob;\n    },\n    \n    /**\n     * Updates an active job\n     */\n    updateActiveJob(state, jobId, updates) {\n        const jobIndex = state.activeJobs.findIndex(job => job.id === jobId);\n        if (jobIndex !== -1) {\n            state.activeJobs[jobIndex] = { ...state.activeJobs[jobIndex], ...updates };\n            return state.activeJobs[jobIndex];\n        }\n        return null;\n    },\n    \n    /**\n     * Removes a job from active jobs\n     */\n    removeActiveJob(state, jobId) {\n        const initialLength = state.activeJobs.length;\n        state.activeJobs = state.activeJobs.filter(job => job.id !== jobId);\n        return state.activeJobs.length !== initialLength;\n    },\n    \n    /**\n     * Adds a result to recent results\n     */\n    addRecentResult(state, resultData) {\n        const newResult = {\n            id: resultData.id || Date.now().toString(),\n            job_id: resultData.job_id,\n            prompt: resultData.prompt,\n            negative_prompt: resultData.negative_prompt,\n            image_url: resultData.image_url,\n            thumbnail_url: resultData.thumbnail_url,\n            width: resultData.width,\n            height: resultData.height,\n            steps: resultData.steps,\n            cfg_scale: resultData.cfg_scale,\n            seed: resultData.seed,\n            batch_count: resultData.batch_count,\n            batch_size: resultData.batch_size,\n            created_at: resultData.created_at || new Date().toISOString(),\n            file_size: resultData.file_size,\n            generation_time: resultData.generation_time,\n            model_used: resultData.model_used\n        };\n        \n        state.recentResults.unshift(newResult);\n        \n        // Limit the number of results kept in memory\n        const maxResults = state.showHistory ? state.config.maxRecentResults : 10;\n        if (state.recentResults.length > maxResults) {\n            state.recentResults = state.recentResults.slice(0, maxResults);\n        }\n        \n        return newResult;\n    },\n    \n    /**\n     * Removes a result from recent results\n     */\n    removeRecentResult(state, resultId) {\n        const initialLength = state.recentResults.length;\n        state.recentResults = state.recentResults.filter(result => result.id !== resultId);\n        return state.recentResults.length !== initialLength;\n    },\n    \n    /**\n     * Updates system status\n     */\n    updateSystemStatus(state, statusData) {\n        state.systemStatus = {\n            ...state.systemStatus,\n            ...statusData,\n            last_updated: Date.now()\n        };\n        return state.systemStatus;\n    },\n    \n    /**\n     * Sets generation status\n     */\n    setGenerationStatus(state, isGenerating) {\n        state.isGenerating = Boolean(isGenerating);\n        return state.isGenerating;\n    },\n    \n    /**\n     * Sets connection status\n     */\n    setConnectionStatus(state, isConnected) {\n        state.isConnected = Boolean(isConnected);\n        return state.isConnected;\n    },\n    \n    /**\n     * Shows toast notification\n     */\n    showToast(state, message, type = 'success') {\n        state.toastMessage = String(message);\n        state.showToast = true;\n        \n        // Auto-hide after configured duration\n        setTimeout(() => {\n            state.showToast = false;\n            state.toastMessage = '';\n        }, state.config.toastDuration);\n        \n        return { message, type };\n    },\n    \n    /**\n     * Hides toast notification\n     */\n    hideToast(state) {\n        state.showToast = false;\n        state.toastMessage = '';\n        return state;\n    },\n    \n    /**\n     * Shows result modal\n     */\n    showResultModal(state, result) {\n        state.selectedResult = result;\n        state.showModal = true;\n        return state;\n    },\n    \n    /**\n     * Hides result modal\n     */\n    hideResultModal(state) {\n        state.selectedResult = null;\n        state.showModal = false;\n        return state;\n    },\n    \n    /**\n     * Toggles history view\n     */\n    toggleHistory(state) {\n        state.showHistory = !state.showHistory;\n        return state.showHistory;\n    },\n    \n    /**\n     * Gets job by ID\n     */\n    getJobById(state, jobId) {\n        return state.activeJobs.find(job => job.id === jobId) || null;\n    },\n    \n    /**\n     * Gets result by ID\n     */\n    getResultById(state, resultId) {\n        return state.recentResults.find(result => result.id === resultId) || null;\n    },\n    \n    /**\n     * Gets generation statistics\n     */\n    getStatistics(state) {\n        const totalJobs = state.activeJobs.length;\n        const processingJobs = state.activeJobs.filter(job => job.status === 'processing').length;\n        const queuedJobs = state.activeJobs.filter(job => job.status === 'queued').length;\n        const completedToday = state.recentResults.filter(result => {\n            const today = new Date().toDateString();\n            const resultDate = new Date(result.created_at).toDateString();\n            return today === resultDate;\n        }).length;\n        \n        return {\n            totalActiveJobs: totalJobs,\n            processingJobs,\n            queuedJobs,\n            completedToday,\n            totalResults: state.recentResults.length,\n            isSystemHealthy: this.isSystemHealthy(state),\n            averageGenerationTime: this.calculateAverageGenerationTime(state)\n        };\n    },\n    \n    /**\n     * Checks if system is healthy\n     */\n    isSystemHealthy(state) {\n        const now = Date.now();\n        const lastUpdate = state.systemStatus.last_updated || 0;\n        const timeSinceUpdate = now - lastUpdate;\n        \n        // Consider system healthy if:\n        // - Last update was within 30 seconds\n        // - No stuck jobs (processing for more than 10 minutes)\n        // - Connection is active\n        \n        const isRecent = timeSinceUpdate < 30000;\n        const hasStuckJobs = state.activeJobs.some(job => {\n            if (job.status === 'processing' && job.start_time) {\n                const processingTime = now - job.start_time;\n                return processingTime > 600000; // 10 minutes\n            }\n            return false;\n        });\n        \n        return isRecent && !hasStuckJobs && state.isConnected;\n    },\n    \n    /**\n     * Calculates average generation time\n     */\n    calculateAverageGenerationTime(state) {\n        const resultsWithTime = state.recentResults.filter(result => result.generation_time);\n        \n        if (resultsWithTime.length === 0) return 0;\n        \n        const totalTime = resultsWithTime.reduce((sum, result) => sum + result.generation_time, 0);\n        return totalTime / resultsWithTime.length;\n    },\n    \n    /**\n     * Clears all state (for cleanup)\n     */\n    clearState(state) {\n        Object.assign(state, this.createInitialState());\n        return state;\n    },\n    \n    /**\n     * Exports state for persistence\n     */\n    exportState(state) {\n        return {\n            params: state.params,\n            recentResults: state.recentResults.slice(0, 10), // Only export recent 10\n            config: state.config,\n            timestamp: Date.now()\n        };\n    },\n    \n    /**\n     * Imports state from persistence\n     */\n    importState(state, importedData) {\n        if (importedData.params) {\n            state.params = { ...state.params, ...this.validateParams(importedData.params) };\n        }\n        \n        if (Array.isArray(importedData.recentResults)) {\n            state.recentResults = importedData.recentResults;\n        }\n        \n        if (importedData.config) {\n            state.config = { ...state.config, ...importedData.config };\n        }\n        \n        return state;\n    }\n};\n\n// Export for use in other modules\nif (typeof module !== 'undefined' && module.exports) {\n    module.exports = { generationState };\n} else if (typeof window !== 'undefined') {\n    window.generationState = generationState;\n}\n"],"mappings":"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","ignoreList":[]}