18639390fc1e139ebc8147da142cd183
/* istanbul ignore next */
function cov_2bf3z3qt6p() {
  var path = "/home/anxilinux/DeepVault/models/Lora/lora-manager/app/frontend/static/js/components/performance-analytics/metrics.js";
  var hash = "9995dd7679c0616a0efb80ca4565b5332a18b2a1";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/anxilinux/DeepVault/models/Lora/lora-manager/app/frontend/static/js/components/performance-analytics/metrics.js",
    statementMap: {
      "0": {
        start: {
          line: 10,
          column: 27
        },
        end: {
          line: 334,
          column: 1
        }
      },
      "1": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 26,
          column: 9
        }
      },
      "2": {
        start: {
          line: 16,
          column: 29
        },
        end: {
          line: 16,
          column: 89
        }
      },
      "3": {
        start: {
          line: 17,
          column: 12
        },
        end: {
          line: 17,
          column: 69
        }
      },
      "4": {
        start: {
          line: 17,
          column: 30
        },
        end: {
          line: 17,
          column: 69
        }
      },
      "5": {
        start: {
          line: 19,
          column: 25
        },
        end: {
          line: 19,
          column: 46
        }
      },
      "6": {
        start: {
          line: 20,
          column: 12
        },
        end: {
          line: 20,
          column: 24
        }
      },
      "7": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 56
        }
      },
      "8": {
        start: {
          line: 25,
          column: 12
        },
        end: {
          line: 25,
          column: 43
        }
      },
      "9": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 42,
          column: 10
        }
      },
      "10": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 59,
          column: 9
        }
      },
      "11": {
        start: {
          line: 50,
          column: 29
        },
        end: {
          line: 50,
          column: 94
        }
      },
      "12": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 51,
          column: 74
        }
      },
      "13": {
        start: {
          line: 51,
          column: 30
        },
        end: {
          line: 51,
          column: 74
        }
      },
      "14": {
        start: {
          line: 53,
          column: 25
        },
        end: {
          line: 53,
          column: 46
        }
      },
      "15": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 54,
          column: 24
        }
      },
      "16": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 57,
          column: 61
        }
      },
      "17": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 58,
          column: 47
        }
      },
      "18": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 107,
          column: 10
        }
      },
      "19": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 124,
          column: 9
        }
      },
      "20": {
        start: {
          line: 115,
          column: 29
        },
        end: {
          line: 115,
          column: 91
        }
      },
      "21": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 116,
          column: 79
        }
      },
      "22": {
        start: {
          line: 116,
          column: 30
        },
        end: {
          line: 116,
          column: 79
        }
      },
      "23": {
        start: {
          line: 118,
          column: 25
        },
        end: {
          line: 118,
          column: 46
        }
      },
      "24": {
        start: {
          line: 119,
          column: 12
        },
        end: {
          line: 119,
          column: 24
        }
      },
      "25": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 122,
          column: 66
        }
      },
      "26": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 123,
          column: 52
        }
      },
      "27": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 162,
          column: 10
        }
      },
      "28": {
        start: {
          line: 169,
          column: 8
        },
        end: {
          line: 179,
          column: 9
        }
      },
      "29": {
        start: {
          line: 170,
          column: 29
        },
        end: {
          line: 170,
          column: 93
        }
      },
      "30": {
        start: {
          line: 171,
          column: 12
        },
        end: {
          line: 171,
          column: 85
        }
      },
      "31": {
        start: {
          line: 171,
          column: 30
        },
        end: {
          line: 171,
          column: 85
        }
      },
      "32": {
        start: {
          line: 173,
          column: 25
        },
        end: {
          line: 173,
          column: 46
        }
      },
      "33": {
        start: {
          line: 174,
          column: 12
        },
        end: {
          line: 174,
          column: 24
        }
      },
      "34": {
        start: {
          line: 177,
          column: 12
        },
        end: {
          line: 177,
          column: 72
        }
      },
      "35": {
        start: {
          line: 178,
          column: 12
        },
        end: {
          line: 178,
          column: 47
        }
      },
      "36": {
        start: {
          line: 186,
          column: 8
        },
        end: {
          line: 208,
          column: 10
        }
      },
      "37": {
        start: {
          line: 215,
          column: 8
        },
        end: {
          line: 225,
          column: 9
        }
      },
      "38": {
        start: {
          line: 216,
          column: 29
        },
        end: {
          line: 216,
          column: 91
        }
      },
      "39": {
        start: {
          line: 217,
          column: 12
        },
        end: {
          line: 217,
          column: 75
        }
      },
      "40": {
        start: {
          line: 217,
          column: 30
        },
        end: {
          line: 217,
          column: 75
        }
      },
      "41": {
        start: {
          line: 219,
          column: 25
        },
        end: {
          line: 219,
          column: 46
        }
      },
      "42": {
        start: {
          line: 220,
          column: 12
        },
        end: {
          line: 220,
          column: 24
        }
      },
      "43": {
        start: {
          line: 223,
          column: 12
        },
        end: {
          line: 223,
          column: 62
        }
      },
      "44": {
        start: {
          line: 224,
          column: 12
        },
        end: {
          line: 224,
          column: 48
        }
      },
      "45": {
        start: {
          line: 232,
          column: 22
        },
        end: {
          line: 232,
          column: 24
        }
      },
      "46": {
        start: {
          line: 233,
          column: 20
        },
        end: {
          line: 233,
          column: 30
        }
      },
      "47": {
        start: {
          line: 236,
          column: 33
        },
        end: {
          line: 242,
          column: 10
        }
      },
      "48": {
        start: {
          line: 237,
          column: 25
        },
        end: {
          line: 237,
          column: 83
        }
      },
      "49": {
        start: {
          line: 238,
          column: 12
        },
        end: {
          line: 241,
          column: 14
        }
      },
      "50": {
        start: {
          line: 245,
          column: 28
        },
        end: {
          line: 252,
          column: 10
        }
      },
      "51": {
        start: {
          line: 246,
          column: 25
        },
        end: {
          line: 246,
          column: 83
        }
      },
      "52": {
        start: {
          line: 247,
          column: 12
        },
        end: {
          line: 251,
          column: 14
        }
      },
      "53": {
        start: {
          line: 255,
          column: 26
        },
        end: {
          line: 258,
          column: 11
        }
      },
      "54": {
        start: {
          line: 255,
          column: 64
        },
        end: {
          line: 258,
          column: 9
        }
      },
      "55": {
        start: {
          line: 261,
          column: 30
        },
        end: {
          line: 269,
          column: 10
        }
      },
      "56": {
        start: {
          line: 262,
          column: 25
        },
        end: {
          line: 262,
          column: 83
        }
      },
      "57": {
        start: {
          line: 263,
          column: 12
        },
        end: {
          line: 268,
          column: 14
        }
      },
      "58": {
        start: {
          line: 271,
          column: 8
        },
        end: {
          line: 276,
          column: 10
        }
      },
      "59": {
        start: {
          line: 283,
          column: 24
        },
        end: {
          line: 283,
          column: 26
        }
      },
      "60": {
        start: {
          line: 286,
          column: 8
        },
        end: {
          line: 289,
          column: 9
        }
      },
      "61": {
        start: {
          line: 287,
          column: 36
        },
        end: {
          line: 287,
          column: 134
        }
      },
      "62": {
        start: {
          line: 287,
          column: 80
        },
        end: {
          line: 287,
          column: 99
        }
      },
      "63": {
        start: {
          line: 288,
          column: 12
        },
        end: {
          line: 288,
          column: 54
        }
      },
      "64": {
        start: {
          line: 292,
          column: 8
        },
        end: {
          line: 294,
          column: 9
        }
      },
      "65": {
        start: {
          line: 293,
          column: 12
        },
        end: {
          line: 293,
          column: 94
        }
      },
      "66": {
        start: {
          line: 297,
          column: 8
        },
        end: {
          line: 300,
          column: 9
        }
      },
      "67": {
        start: {
          line: 298,
          column: 31
        },
        end: {
          line: 298,
          column: 90
        }
      },
      "68": {
        start: {
          line: 298,
          column: 68
        },
        end: {
          line: 298,
          column: 89
        }
      },
      "69": {
        start: {
          line: 299,
          column: 12
        },
        end: {
          line: 299,
          column: 109
        }
      },
      "70": {
        start: {
          line: 302,
          column: 8
        },
        end: {
          line: 302,
          column: 23
        }
      },
      "71": {
        start: {
          line: 309,
          column: 8
        },
        end: {
          line: 332,
          column: 9
        }
      },
      "72": {
        start: {
          line: 310,
          column: 73
        },
        end: {
          line: 316,
          column: 14
        }
      },
      "73": {
        start: {
          line: 318,
          column: 35
        },
        end: {
          line: 318,
          column: 80
        }
      },
      "74": {
        start: {
          line: 320,
          column: 12
        },
        end: {
          line: 327,
          column: 14
        }
      },
      "75": {
        start: {
          line: 330,
          column: 12
        },
        end: {
          line: 330,
          column: 66
        }
      },
      "76": {
        start: {
          line: 331,
          column: 12
        },
        end: {
          line: 331,
          column: 24
        }
      },
      "77": {
        start: {
          line: 337,
          column: 0
        },
        end: {
          line: 341,
          column: 1
        }
      },
      "78": {
        start: {
          line: 338,
          column: 4
        },
        end: {
          line: 338,
          column: 44
        }
      },
      "79": {
        start: {
          line: 339,
          column: 7
        },
        end: {
          line: 341,
          column: 1
        }
      },
      "80": {
        start: {
          line: 340,
          column: 4
        },
        end: {
          line: 340,
          column: 51
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 14,
            column: 5
          }
        },
        loc: {
          start: {
            line: 14,
            column: 30
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 14
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        },
        loc: {
          start: {
            line: 32,
            column: 23
          },
          end: {
            line: 43,
            column: 5
          }
        },
        line: 32
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 48,
            column: 5
          }
        },
        loc: {
          start: {
            line: 48,
            column: 34
          },
          end: {
            line: 60,
            column: 5
          }
        },
        line: 48
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 65,
            column: 4
          },
          end: {
            line: 65,
            column: 5
          }
        },
        loc: {
          start: {
            line: 65,
            column: 27
          },
          end: {
            line: 108,
            column: 5
          }
        },
        line: 65
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 113,
            column: 4
          },
          end: {
            line: 113,
            column: 5
          }
        },
        loc: {
          start: {
            line: 113,
            column: 39
          },
          end: {
            line: 125,
            column: 5
          }
        },
        line: 113
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 130,
            column: 4
          },
          end: {
            line: 130,
            column: 5
          }
        },
        loc: {
          start: {
            line: 130,
            column: 32
          },
          end: {
            line: 163,
            column: 5
          }
        },
        line: 130
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 168,
            column: 4
          },
          end: {
            line: 168,
            column: 5
          }
        },
        loc: {
          start: {
            line: 168,
            column: 45
          },
          end: {
            line: 180,
            column: 5
          }
        },
        line: 168
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 185,
            column: 4
          },
          end: {
            line: 185,
            column: 5
          }
        },
        loc: {
          start: {
            line: 185,
            column: 27
          },
          end: {
            line: 209,
            column: 5
          }
        },
        line: 185
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 214,
            column: 4
          },
          end: {
            line: 214,
            column: 5
          }
        },
        loc: {
          start: {
            line: 214,
            column: 35
          },
          end: {
            line: 226,
            column: 5
          }
        },
        line: 214
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 231,
            column: 4
          },
          end: {
            line: 231,
            column: 5
          }
        },
        loc: {
          start: {
            line: 231,
            column: 28
          },
          end: {
            line: 277,
            column: 5
          }
        },
        line: 231
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 236,
            column: 63
          },
          end: {
            line: 236,
            column: 64
          }
        },
        loc: {
          start: {
            line: 236,
            column: 73
          },
          end: {
            line: 242,
            column: 9
          }
        },
        line: 236
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 245,
            column: 58
          },
          end: {
            line: 245,
            column: 59
          }
        },
        loc: {
          start: {
            line: 245,
            column: 68
          },
          end: {
            line: 252,
            column: 9
          }
        },
        line: 245
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 255,
            column: 53
          },
          end: {
            line: 255,
            column: 54
          }
        },
        loc: {
          start: {
            line: 255,
            column: 64
          },
          end: {
            line: 258,
            column: 9
          }
        },
        line: 255
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 261,
            column: 60
          },
          end: {
            line: 261,
            column: 61
          }
        },
        loc: {
          start: {
            line: 261,
            column: 70
          },
          end: {
            line: 269,
            column: 9
          }
        },
        line: 261
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 282,
            column: 4
          },
          end: {
            line: 282,
            column: 5
          }
        },
        loc: {
          start: {
            line: 282,
            column: 45
          },
          end: {
            line: 303,
            column: 5
          }
        },
        line: 282
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 287,
            column: 65
          },
          end: {
            line: 287,
            column: 66
          }
        },
        loc: {
          start: {
            line: 287,
            column: 80
          },
          end: {
            line: 287,
            column: 99
          }
        },
        line: 287
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 298,
            column: 60
          },
          end: {
            line: 298,
            column: 61
          }
        },
        loc: {
          start: {
            line: 298,
            column: 68
          },
          end: {
            line: 298,
            column: 89
          }
        },
        line: 298
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 308,
            column: 4
          },
          end: {
            line: 308,
            column: 5
          }
        },
        loc: {
          start: {
            line: 308,
            column: 33
          },
          end: {
            line: 333,
            column: 5
          }
        },
        line: 308
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 17,
            column: 12
          },
          end: {
            line: 17,
            column: 69
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 17,
            column: 12
          },
          end: {
            line: 17,
            column: 69
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 17
      },
      "1": {
        loc: {
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 51,
            column: 74
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 51,
            column: 74
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 51
      },
      "2": {
        loc: {
          start: {
            line: 116,
            column: 12
          },
          end: {
            line: 116,
            column: 79
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 116,
            column: 12
          },
          end: {
            line: 116,
            column: 79
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 116
      },
      "3": {
        loc: {
          start: {
            line: 171,
            column: 12
          },
          end: {
            line: 171,
            column: 85
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 171,
            column: 12
          },
          end: {
            line: 171,
            column: 85
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 171
      },
      "4": {
        loc: {
          start: {
            line: 217,
            column: 12
          },
          end: {
            line: 217,
            column: 75
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 217,
            column: 12
          },
          end: {
            line: 217,
            column: 75
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 217
      },
      "5": {
        loc: {
          start: {
            line: 286,
            column: 8
          },
          end: {
            line: 289,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 286,
            column: 8
          },
          end: {
            line: 289,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 286
      },
      "6": {
        loc: {
          start: {
            line: 286,
            column: 12
          },
          end: {
            line: 286,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 286,
            column: 12
          },
          end: {
            line: 286,
            column: 33
          }
        }, {
          start: {
            line: 286,
            column: 37
          },
          end: {
            line: 286,
            column: 69
          }
        }],
        line: 286
      },
      "7": {
        loc: {
          start: {
            line: 292,
            column: 8
          },
          end: {
            line: 294,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 292,
            column: 8
          },
          end: {
            line: 294,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 292
      },
      "8": {
        loc: {
          start: {
            line: 292,
            column: 12
          },
          end: {
            line: 292,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 292,
            column: 12
          },
          end: {
            line: 292,
            column: 34
          }
        }, {
          start: {
            line: 292,
            column: 38
          },
          end: {
            line: 292,
            column: 55
          }
        }],
        line: 292
      },
      "9": {
        loc: {
          start: {
            line: 297,
            column: 8
          },
          end: {
            line: 300,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 297,
            column: 8
          },
          end: {
            line: 300,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 297
      },
      "10": {
        loc: {
          start: {
            line: 297,
            column: 12
          },
          end: {
            line: 297,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 297,
            column: 12
          },
          end: {
            line: 297,
            column: 33
          }
        }, {
          start: {
            line: 297,
            column: 37
          },
          end: {
            line: 297,
            column: 69
          }
        }],
        line: 297
      },
      "11": {
        loc: {
          start: {
            line: 337,
            column: 0
          },
          end: {
            line: 341,
            column: 1
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 337,
            column: 0
          },
          end: {
            line: 341,
            column: 1
          }
        }, {
          start: {
            line: 339,
            column: 7
          },
          end: {
            line: 341,
            column: 1
          }
        }],
        line: 337
      },
      "12": {
        loc: {
          start: {
            line: 337,
            column: 4
          },
          end: {
            line: 337,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 337,
            column: 4
          },
          end: {
            line: 337,
            column: 33
          }
        }, {
          start: {
            line: 337,
            column: 37
          },
          end: {
            line: 337,
            column: 51
          }
        }],
        line: 337
      },
      "13": {
        loc: {
          start: {
            line: 339,
            column: 7
          },
          end: {
            line: 341,
            column: 1
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 339,
            column: 7
          },
          end: {
            line: 341,
            column: 1
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 339
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "9995dd7679c0616a0efb80ca4565b5332a18b2a1"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2bf3z3qt6p = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2bf3z3qt6p();
/**
 * Performance Analytics - Metrics Operations Module
 * 
 * Handles data loading, KPI calculations, and analytics data processing.
 */

/**
 * Metrics operations for performance analytics
 */
const performanceMetrics =
/* istanbul ignore next */
(cov_2bf3z3qt6p().s[0]++, {
  /**
   * Loads key performance indicators
   */
  async loadKPIs(timeRange) {
    /* istanbul ignore next */
    cov_2bf3z3qt6p().f[0]++;
    cov_2bf3z3qt6p().s[1]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_2bf3z3qt6p().s[2]++, await fetch(`/api/v1/analytics/kpis?timeRange=${timeRange}`));
      /* istanbul ignore next */
      cov_2bf3z3qt6p().s[3]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_2bf3z3qt6p().b[0][0]++;
        cov_2bf3z3qt6p().s[4]++;
        throw new Error('Failed to load KPIs');
      } else
      /* istanbul ignore next */
      {
        cov_2bf3z3qt6p().b[0][1]++;
      }
      const data =
      /* istanbul ignore next */
      (cov_2bf3z3qt6p().s[5]++, await response.json());
      /* istanbul ignore next */
      cov_2bf3z3qt6p().s[6]++;
      return data;
    } catch (error) {
      /* istanbul ignore next */
      cov_2bf3z3qt6p().s[7]++;
      console.error('Error loading KPIs:', error);
      // Return mock data for development
      /* istanbul ignore next */
      cov_2bf3z3qt6p().s[8]++;
      return this.generateMockKPIs();
    }
  },
  /**
   * Generates mock KPI data for development
   */
  generateMockKPIs() {
    /* istanbul ignore next */
    cov_2bf3z3qt6p().f[1]++;
    cov_2bf3z3qt6p().s[9]++;
    return {
      total_generations: 15847,
      generation_growth: 12.3,
      avg_generation_time: 42.7,
      time_improvement: -8.5,
      success_rate: 94.3,
      total_failed: 71,
      active_loras: 34,
      total_loras: 127
    };
  },
  /**
   * Loads top performing LoRAs
   */
  async loadTopLoras(timeRange) {
    /* istanbul ignore next */
    cov_2bf3z3qt6p().f[2]++;
    cov_2bf3z3qt6p().s[10]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_2bf3z3qt6p().s[11]++, await fetch(`/api/v1/analytics/top-loras?timeRange=${timeRange}`));
      /* istanbul ignore next */
      cov_2bf3z3qt6p().s[12]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_2bf3z3qt6p().b[1][0]++;
        cov_2bf3z3qt6p().s[13]++;
        throw new Error('Failed to load top LoRAs');
      } else
      /* istanbul ignore next */
      {
        cov_2bf3z3qt6p().b[1][1]++;
      }
      const data =
      /* istanbul ignore next */
      (cov_2bf3z3qt6p().s[14]++, await response.json());
      /* istanbul ignore next */
      cov_2bf3z3qt6p().s[15]++;
      return data;
    } catch (error) {
      /* istanbul ignore next */
      cov_2bf3z3qt6p().s[16]++;
      console.error('Error loading top LoRAs:', error);
      /* istanbul ignore next */
      cov_2bf3z3qt6p().s[17]++;
      return this.generateMockTopLoras();
    }
  },
  /**
   * Generates mock top LoRAs data
   */
  generateMockTopLoras() {
    /* istanbul ignore next */
    cov_2bf3z3qt6p().f[3]++;
    cov_2bf3z3qt6p().s[18]++;
    return [{
      id: 1,
      name: "Anime Style v2.1",
      version: "v2.1",
      usage_count: 342,
      success_rate: 96.8,
      avg_time: 42.3
    }, {
      id: 2,
      name: "Realistic Portrait",
      version: "v1.5",
      usage_count: 289,
      success_rate: 94.2,
      avg_time: 38.7
    }, {
      id: 3,
      name: "Fantasy Art",
      version: "v3.0",
      usage_count: 267,
      success_rate: 92.1,
      avg_time: 51.2
    }, {
      id: 4,
      name: "Cyberpunk Style",
      version: "v1.8",
      usage_count: 234,
      success_rate: 91.5,
      avg_time: 47.8
    }, {
      id: 5,
      name: "Oil Painting",
      version: "v2.0",
      usage_count: 198,
      success_rate: 89.3,
      avg_time: 55.1
    }];
  },
  /**
   * Loads error analysis data
   */
  async loadErrorAnalysis(timeRange) {
    /* istanbul ignore next */
    cov_2bf3z3qt6p().f[4]++;
    cov_2bf3z3qt6p().s[19]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_2bf3z3qt6p().s[20]++, await fetch(`/api/v1/analytics/errors?timeRange=${timeRange}`));
      /* istanbul ignore next */
      cov_2bf3z3qt6p().s[21]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_2bf3z3qt6p().b[2][0]++;
        cov_2bf3z3qt6p().s[22]++;
        throw new Error('Failed to load error analysis');
      } else
      /* istanbul ignore next */
      {
        cov_2bf3z3qt6p().b[2][1]++;
      }
      const data =
      /* istanbul ignore next */
      (cov_2bf3z3qt6p().s[23]++, await response.json());
      /* istanbul ignore next */
      cov_2bf3z3qt6p().s[24]++;
      return data;
    } catch (error) {
      /* istanbul ignore next */
      cov_2bf3z3qt6p().s[25]++;
      console.error('Error loading error analysis:', error);
      /* istanbul ignore next */
      cov_2bf3z3qt6p().s[26]++;
      return this.generateMockErrorAnalysis();
    }
  },
  /**
   * Generates mock error analysis data
   */
  generateMockErrorAnalysis() {
    /* istanbul ignore next */
    cov_2bf3z3qt6p().f[5]++;
    cov_2bf3z3qt6p().s[27]++;
    return [{
      error_type: "Out of Memory",
      count: 23,
      percentage: 32.4,
      trend: "decreasing"
    }, {
      error_type: "Model Loading Failed",
      count: 18,
      percentage: 25.4,
      trend: "stable"
    }, {
      error_type: "Invalid Parameters",
      count: 15,
      percentage: 21.1,
      trend: "increasing"
    }, {
      error_type: "Timeout",
      count: 12,
      percentage: 16.9,
      trend: "decreasing"
    }, {
      error_type: "Other",
      count: 3,
      percentage: 4.2,
      trend: "stable"
    }];
  },
  /**
   * Loads performance insights
   */
  async loadPerformanceInsights(timeRange) {
    /* istanbul ignore next */
    cov_2bf3z3qt6p().f[6]++;
    cov_2bf3z3qt6p().s[28]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_2bf3z3qt6p().s[29]++, await fetch(`/api/v1/analytics/insights?timeRange=${timeRange}`));
      /* istanbul ignore next */
      cov_2bf3z3qt6p().s[30]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_2bf3z3qt6p().b[3][0]++;
        cov_2bf3z3qt6p().s[31]++;
        throw new Error('Failed to load performance insights');
      } else
      /* istanbul ignore next */
      {
        cov_2bf3z3qt6p().b[3][1]++;
      }
      const data =
      /* istanbul ignore next */
      (cov_2bf3z3qt6p().s[32]++, await response.json());
      /* istanbul ignore next */
      cov_2bf3z3qt6p().s[33]++;
      return data;
    } catch (error) {
      /* istanbul ignore next */
      cov_2bf3z3qt6p().s[34]++;
      console.error('Error loading performance insights:', error);
      /* istanbul ignore next */
      cov_2bf3z3qt6p().s[35]++;
      return this.generateMockInsights();
    }
  },
  /**
   * Generates mock performance insights
   */
  generateMockInsights() {
    /* istanbul ignore next */
    cov_2bf3z3qt6p().f[7]++;
    cov_2bf3z3qt6p().s[36]++;
    return [{
      type: "optimization",
      title: "GPU Memory Optimization Opportunity",
      description: "Consider batch processing smaller images to improve GPU memory usage",
      impact: "high",
      recommendation: "enable_batch_processing"
    }, {
      type: "scaling",
      title: "Peak Usage Hours Identified",
      description: "Usage peaks between 2-4 PM daily. Consider auto-scaling during these hours",
      impact: "medium",
      recommendation: "implement_auto_scaling"
    }, {
      type: "maintenance",
      title: "Unused LoRAs Detected",
      description: "12 LoRAs haven't been used in the last 30 days",
      impact: "low",
      recommendation: "archive_unused_loras"
    }];
  },
  /**
   * Loads chart data for all visualizations
   */
  async loadChartData(timeRange) {
    /* istanbul ignore next */
    cov_2bf3z3qt6p().f[8]++;
    cov_2bf3z3qt6p().s[37]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_2bf3z3qt6p().s[38]++, await fetch(`/api/v1/analytics/charts?timeRange=${timeRange}`));
      /* istanbul ignore next */
      cov_2bf3z3qt6p().s[39]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_2bf3z3qt6p().b[4][0]++;
        cov_2bf3z3qt6p().s[40]++;
        throw new Error('Failed to load chart data');
      } else
      /* istanbul ignore next */
      {
        cov_2bf3z3qt6p().b[4][1]++;
      }
      const data =
      /* istanbul ignore next */
      (cov_2bf3z3qt6p().s[41]++, await response.json());
      /* istanbul ignore next */
      cov_2bf3z3qt6p().s[42]++;
      return data;
    } catch (error) {
      /* istanbul ignore next */
      cov_2bf3z3qt6p().s[43]++;
      console.error('Error loading chart data:', error);
      /* istanbul ignore next */
      cov_2bf3z3qt6p().s[44]++;
      return this.generateMockChartData();
    }
  },
  /**
   * Generates mock chart data for development
   */
  generateMockChartData() {
    /* istanbul ignore next */
    cov_2bf3z3qt6p().f[9]++;
    const hours =
    /* istanbul ignore next */
    (cov_2bf3z3qt6p().s[45]++, 24);
    const now =
    /* istanbul ignore next */
    (cov_2bf3z3qt6p().s[46]++, new Date());

    // Generation volume data
    const generationVolume =
    /* istanbul ignore next */
    (cov_2bf3z3qt6p().s[47]++, Array.from({
      length: hours
    }, (_, i) => {
      /* istanbul ignore next */
      cov_2bf3z3qt6p().f[10]++;
      const time =
      /* istanbul ignore next */
      (cov_2bf3z3qt6p().s[48]++, new Date(now.getTime() - (hours - i - 1) * 60 * 60 * 1000));
      /* istanbul ignore next */
      cov_2bf3z3qt6p().s[49]++;
      return {
        timestamp: time.toISOString(),
        count: Math.floor(Math.random() * 50) + 10
      };
    }));

    // Performance data
    const performance =
    /* istanbul ignore next */
    (cov_2bf3z3qt6p().s[50]++, Array.from({
      length: hours
    }, (_, i) => {
      /* istanbul ignore next */
      cov_2bf3z3qt6p().f[11]++;
      const time =
      /* istanbul ignore next */
      (cov_2bf3z3qt6p().s[51]++, new Date(now.getTime() - (hours - i - 1) * 60 * 60 * 1000));
      /* istanbul ignore next */
      cov_2bf3z3qt6p().s[52]++;
      return {
        timestamp: time.toISOString(),
        avg_time: Math.random() * 30 + 30,
        success_rate: Math.random() * 10 + 90
      };
    }));

    // LoRA usage data
    const loraUsage =
    /* istanbul ignore next */
    (cov_2bf3z3qt6p().s[53]++, Array.from({
      length: 10
    }, (_, i) => {
      /* istanbul ignore next */
      cov_2bf3z3qt6p().f[12]++;
      cov_2bf3z3qt6p().s[54]++;
      return {
        name: `LoRA ${i + 1}`,
        usage: Math.floor(Math.random() * 100) + 50
      };
    }));

    // Resource usage data
    const resourceUsage =
    /* istanbul ignore next */
    (cov_2bf3z3qt6p().s[55]++, Array.from({
      length: hours
    }, (_, i) => {
      /* istanbul ignore next */
      cov_2bf3z3qt6p().f[13]++;
      const time =
      /* istanbul ignore next */
      (cov_2bf3z3qt6p().s[56]++, new Date(now.getTime() - (hours - i - 1) * 60 * 60 * 1000));
      /* istanbul ignore next */
      cov_2bf3z3qt6p().s[57]++;
      return {
        timestamp: time.toISOString(),
        cpu: Math.random() * 40 + 30,
        memory: Math.random() * 30 + 50,
        gpu: Math.random() * 50 + 40
      };
    }));
    /* istanbul ignore next */
    cov_2bf3z3qt6p().s[58]++;
    return {
      generationVolume,
      performance,
      loraUsage,
      resourceUsage
    };
  },
  /**
   * Calculates derived metrics from raw data
   */
  calculateDerivedMetrics(chartData, kpis) {
    /* istanbul ignore next */
    cov_2bf3z3qt6p().f[14]++;
    const derived =
    /* istanbul ignore next */
    (cov_2bf3z3qt6p().s[59]++, {});

    // Calculate average response time from chart data
    /* istanbul ignore next */
    cov_2bf3z3qt6p().s[60]++;
    if (
    /* istanbul ignore next */
    (cov_2bf3z3qt6p().b[6][0]++, chartData.performance) &&
    /* istanbul ignore next */
    (cov_2bf3z3qt6p().b[6][1]++, chartData.performance.length > 0)) {
      /* istanbul ignore next */
      cov_2bf3z3qt6p().b[5][0]++;
      const avgResponseTime =
      /* istanbul ignore next */
      (cov_2bf3z3qt6p().s[61]++, chartData.performance.reduce((sum, item) => {
        /* istanbul ignore next */
        cov_2bf3z3qt6p().f[15]++;
        cov_2bf3z3qt6p().s[62]++;
        return sum + item.avg_time;
      }, 0) / chartData.performance.length);
      /* istanbul ignore next */
      cov_2bf3z3qt6p().s[63]++;
      derived.avgResponseTime = avgResponseTime;
    } else
    /* istanbul ignore next */
    {
      cov_2bf3z3qt6p().b[5][1]++;
    }

    // Calculate error rate
    cov_2bf3z3qt6p().s[64]++;
    if (
    /* istanbul ignore next */
    (cov_2bf3z3qt6p().b[8][0]++, kpis.total_generations) &&
    /* istanbul ignore next */
    (cov_2bf3z3qt6p().b[8][1]++, kpis.total_failed)) {
      /* istanbul ignore next */
      cov_2bf3z3qt6p().b[7][0]++;
      cov_2bf3z3qt6p().s[65]++;
      derived.errorRate = (kpis.total_failed / kpis.total_generations * 100).toFixed(2);
    } else
    /* istanbul ignore next */
    {
      cov_2bf3z3qt6p().b[7][1]++;
    }

    // Calculate uptime percentage
    cov_2bf3z3qt6p().s[66]++;
    if (
    /* istanbul ignore next */
    (cov_2bf3z3qt6p().b[10][0]++, chartData.performance) &&
    /* istanbul ignore next */
    (cov_2bf3z3qt6p().b[10][1]++, chartData.performance.length > 0)) {
      /* istanbul ignore next */
      cov_2bf3z3qt6p().b[9][0]++;
      const uptimeData =
      /* istanbul ignore next */
      (cov_2bf3z3qt6p().s[67]++, chartData.performance.filter(item => {
        /* istanbul ignore next */
        cov_2bf3z3qt6p().f[16]++;
        cov_2bf3z3qt6p().s[68]++;
        return item.success_rate > 0;
      }));
      /* istanbul ignore next */
      cov_2bf3z3qt6p().s[69]++;
      derived.uptimePercentage = (uptimeData.length / chartData.performance.length * 100).toFixed(2);
    } else
    /* istanbul ignore next */
    {
      cov_2bf3z3qt6p().b[9][1]++;
    }
    cov_2bf3z3qt6p().s[70]++;
    return derived;
  },
  /**
   * Loads all analytics data
   */
  async loadAllData(timeRange) {
    /* istanbul ignore next */
    cov_2bf3z3qt6p().f[17]++;
    cov_2bf3z3qt6p().s[71]++;
    try {
      const [kpis, topLoras, errorAnalysis, insights, chartData] =
      /* istanbul ignore next */
      (cov_2bf3z3qt6p().s[72]++, await Promise.all([this.loadKPIs(timeRange), this.loadTopLoras(timeRange), this.loadErrorAnalysis(timeRange), this.loadPerformanceInsights(timeRange), this.loadChartData(timeRange)]));
      const derivedMetrics =
      /* istanbul ignore next */
      (cov_2bf3z3qt6p().s[73]++, this.calculateDerivedMetrics(chartData, kpis));
      /* istanbul ignore next */
      cov_2bf3z3qt6p().s[74]++;
      return {
        kpis,
        topLoras,
        errorAnalysis,
        insights,
        chartData,
        derivedMetrics
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_2bf3z3qt6p().s[75]++;
      console.error('Error loading analytics data:', error);
      /* istanbul ignore next */
      cov_2bf3z3qt6p().s[76]++;
      throw error;
    }
  }
});

// Export for use in other modules
/* istanbul ignore next */
cov_2bf3z3qt6p().s[77]++;
if (
/* istanbul ignore next */
(cov_2bf3z3qt6p().b[12][0]++, typeof module !== 'undefined') &&
/* istanbul ignore next */
(cov_2bf3z3qt6p().b[12][1]++, module.exports)) {
  /* istanbul ignore next */
  cov_2bf3z3qt6p().b[11][0]++;
  cov_2bf3z3qt6p().s[78]++;
  module.exports = {
    performanceMetrics
  };
} else {
  /* istanbul ignore next */
  cov_2bf3z3qt6p().b[11][1]++;
  cov_2bf3z3qt6p().s[79]++;
  if (typeof window !== 'undefined') {
    /* istanbul ignore next */
    cov_2bf3z3qt6p().b[13][0]++;
    cov_2bf3z3qt6p().s[80]++;
    window.performanceMetrics = performanceMetrics;
  } else
  /* istanbul ignore next */
  {
    cov_2bf3z3qt6p().b[13][1]++;
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,