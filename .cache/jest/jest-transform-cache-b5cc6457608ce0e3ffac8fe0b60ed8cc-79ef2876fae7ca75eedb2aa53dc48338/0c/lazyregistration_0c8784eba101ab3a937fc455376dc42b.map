{"version":3,"names":["registerLazyComponent","name","Alpine","window","DevLogger","warn","data","backing","tryInit","e","error","local","getCommonStub","init","call","_backing","_isReal","ensureAlpine","callback","document","addEventListener","once","registerLazyComponents","componentNames","forEach","waitForAlpine","Promise","resolve","isComponentRegistered","_x_dataStack","some","stack","upgradeComponent","factory","debug","module","exports","Object","assign"],"sources":["lazy-registration.js"],"sourcesContent":["/**\n * Lazy Registration Utilities for Alpine.js Components\n * \n * Provides utilities for registering Alpine components that can be loaded\n * asynchronously while preventing ExpressionErrors during template parsing.\n */\n\n/**\n * Registers a lazy Alpine component that delegates to a global function\n * when it becomes available. Prevents ExpressionErrors in templates.\n * \n * @param {string} name - Component name to register\n */\nfunction registerLazyComponent(name) {\n    if (typeof Alpine === 'undefined') {\n        if (window.DevLogger && window.DevLogger.warn) {\n            window.DevLogger.warn(`Cannot register ${name}: Alpine not available`);\n        }\n        return;\n    }\n\n    Alpine.data(name, () => {\n        let backing = null;\n        \n        /**\n         * Try to initialize the backing component if the global function is available\n         */\n        function tryInit() {\n            if (!backing && typeof window[name] === 'function') {\n                try {\n                    backing = window[name]();\n                } catch (e) {\n                    if (window.DevLogger && window.DevLogger.error) {\n                        window.DevLogger.error(`Failed to initialize ${name}:`, e);\n                    }\n                    backing = {};\n                }\n            }\n        }\n\n        // Create the lazy component proxy\n        const local = window.getCommonStub ? window.getCommonStub(name) : { init() {} };\n        \n        return {\n            /**\n             * Initialize the component - tries to delegate to real implementation\n             */\n            init() {\n                tryInit();\n                if (backing && typeof backing.init === 'function') {\n                    try {\n                        backing.init.call(this);\n                    } catch (e) {\n                        if (window.DevLogger && window.DevLogger.error) {\n                            window.DevLogger.error(`Error in ${name}.init():`, e);\n                        }\n                    }\n                } else if (local && typeof local.init === 'function') {\n                    local.init.call(this);\n                }\n            },\n\n            /**\n             * Get the backing implementation (for debugging)\n             */\n            get _backing() {\n                tryInit();\n                return backing;\n            },\n\n            /**\n             * Check if the real implementation is loaded\n             */\n            get _isReal() {\n                return backing !== null;\n            },\n\n            /**\n             * Spread all properties from the common stub\n             * Real components will re-register and override these\n             */\n            ...local\n        };\n    });\n}\n\n/**\n * Helper to defer Alpine registrations until Alpine is ready\n * \n * @param {Function} callback - Function to call when Alpine is available\n */\nfunction ensureAlpine(callback) {\n    if (typeof window.Alpine !== 'undefined') {\n        try {\n            callback();\n        } catch (e) {\n            if (window.DevLogger && window.DevLogger.error) {\n                window.DevLogger.error('Error in ensureAlpine callback:', e);\n            }\n        }\n    } else {\n        document.addEventListener('alpine:init', () => {\n            try {\n                callback();\n            } catch (e) {\n                if (window.DevLogger && window.DevLogger.error) {\n                    window.DevLogger.error('Error in alpine:init callback:', e);\n                }\n            }\n        }, { once: true });\n    }\n}\n\n/**\n * Register multiple lazy components at once\n * \n * @param {string[]} componentNames - Array of component names to register\n */\nfunction registerLazyComponents(componentNames) {\n    ensureAlpine(() => {\n        componentNames.forEach(registerLazyComponent);\n    });\n}\n\n/**\n * Wait for Alpine to be ready and return a promise\n * \n * @returns {Promise<void>} Promise that resolves when Alpine is ready\n */\nfunction waitForAlpine() {\n    return new Promise((resolve) => {\n        if (typeof window.Alpine !== 'undefined') {\n            resolve();\n        } else {\n            document.addEventListener('alpine:init', resolve, { once: true });\n        }\n    });\n}\n\n/**\n * Check if a component is already registered with Alpine\n * \n * @param {string} name - Component name to check\n * @returns {boolean} True if component is registered\n */\nfunction isComponentRegistered(name) {\n    return typeof Alpine !== 'undefined' && \n           Alpine._x_dataStack && \n           Alpine._x_dataStack.some(stack => stack[name]);\n}\n\n/**\n * Upgrade a lazy component to its real implementation\n * This is called when the real component script loads\n * \n * @param {string} name - Component name\n * @param {Function} factory - Real component factory function\n */\nfunction upgradeComponent(name, factory) {\n    if (typeof Alpine === 'undefined') {\n        if (window.DevLogger && window.DevLogger.warn) {\n            window.DevLogger.warn(`Cannot upgrade ${name}: Alpine not available`);\n        }\n        return;\n    }\n\n    // Store the real factory globally so lazy components can find it\n    window[name] = factory;\n\n    // Re-register with Alpine to replace the lazy version\n    Alpine.data(name, factory);\n\n    if (window.DevLogger && window.DevLogger.debug) {\n        window.DevLogger.debug(`Component ${name} upgraded to real implementation`);\n    }\n}\n\n// Export for use in other modules\nif (typeof module !== 'undefined' && module.exports) {\n    module.exports = {\n        registerLazyComponent,\n        registerLazyComponents,\n        ensureAlpine,\n        waitForAlpine,\n        isComponentRegistered,\n        upgradeComponent\n    };\n} else if (typeof window !== 'undefined') {\n    // Make functions available globally\n    Object.assign(window, {\n        registerLazyComponent,\n        registerLazyComponents,\n        ensureAlpine,\n        waitForAlpine,\n        isComponentRegistered,\n        upgradeComponent\n    });\n}\n"],"mappings":"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","ignoreList":[]}