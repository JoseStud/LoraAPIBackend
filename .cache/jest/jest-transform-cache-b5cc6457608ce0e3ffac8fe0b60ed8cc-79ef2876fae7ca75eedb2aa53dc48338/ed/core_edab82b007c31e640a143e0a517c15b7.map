{"version":3,"names":["cov_2n77hjumx7","actualCoverage","ComponentLoaderCore","constructor","f","s","components","stubs","loadedScripts","Set","isAlpineReady","isInitialized","pendingRegistrations","Map","dependencies","init","b","window","DevLogger","debug","setupLogging","createStubs","waitForDependencies","args","__DEV_CONSOLE__","console","log","warn","error","checkDependencies","missing","filter","dep","length","waitForAlpine","setTimeout","Alpine","onAlpineReady","document","addEventListener","once","registerStubs","processPendingRegistrations","ComponentStubs","createAllStubs","createBasicStubs","componentNames","forEach","name","stub","getCommonStub","Object","entries","factory","data","registerComponent","set","clear","isComponentLoaded","prototype","hasOwnProperty","call","getComponent","loadScript","scriptUrl","has","Promise","resolve","reject","script","createElement","src","async","onload","add","onerror","Error","head","appendChild","loadScripts","scriptUrls","url","getStatus","stubsCount","keys","componentsCount","Array","from","reset","componentLoaderCore","module","exports"],"sources":["core.js"],"sourcesContent":["/**\n * Component Loader Core Module\n * \n * Handles the main initialization, lifecycle orchestration, and coordination\n * between stubs, real components, and Alpine.js registration.\n */\n\n/**\n * Component Loader Core Class\n */\nclass ComponentLoaderCore {\n    constructor() {\n        this.components = {};\n        this.stubs = {};\n        this.loadedScripts = new Set();\n        this.isAlpineReady = false;\n        this.isInitialized = false;\n        this.pendingRegistrations = new Map();\n        this.dependencies = ['DevLogger'];\n    }\n\n    /**\n     * Initialize the component loader\n     */\n    init() {\n        if (this.isInitialized) {\n            return;\n        }\n\n        this.isInitialized = true;\n\n        if (window.DevLogger && window.DevLogger.debug) {\n            window.DevLogger.debug('[ComponentLoader] Initializing core...');\n        }\n\n        // Set up logging first\n        this.setupLogging();\n        \n        // Create comprehensive stubs\n        this.createStubs();\n        \n        // Wait for dependencies before Alpine.js\n        this.waitForDependencies();\n        \n        if (window.DevLogger && window.DevLogger.debug) {\n            window.DevLogger.debug('[ComponentLoader] Core initialization complete');\n        }\n    }\n\n    /**\n     * Set up logging infrastructure\n     */\n    setupLogging() {\n        if (typeof window.DevLogger === 'undefined') {\n            // Create a basic logger if not available\n            // Note: Console usage is intentional here for core logging setup\n            /* eslint-disable no-console */\n            window.DevLogger = {\n                debug(...args) {\n                    if (window.__DEV_CONSOLE__ && typeof console !== 'undefined' && console.log) {\n                        console.log('[DEBUG]', ...args);\n                    }\n                },\n                warn(...args) {\n                    if (window.__DEV_CONSOLE__ && typeof console !== 'undefined' && console.warn) {\n                        console.warn('[WARN]', ...args);\n                    }\n                },\n                error(...args) {\n                    if (window.__DEV_CONSOLE__ && typeof console !== 'undefined' && console.error) {\n                        console.error('[ERROR]', ...args);\n                    }\n                }\n            };\n            /* eslint-enable no-console */\n        }\n\n        // Enable console by default\n        if (typeof window.__DEV_CONSOLE__ === 'undefined') {\n            window.__DEV_CONSOLE__ = true;\n        }\n    }\n\n    /**\n     * Wait for required dependencies to be available\n     */\n    waitForDependencies() {\n        const checkDependencies = () => {\n            const missing = this.dependencies.filter(dep => typeof window[dep] === 'undefined');\n            \n            if (missing.length === 0) {\n                if (window.DevLogger && window.DevLogger.debug) {\n                    window.DevLogger.debug('[ComponentLoader] All dependencies available');\n                }\n                this.waitForAlpine();\n            } else {\n                if (window.DevLogger && window.DevLogger.debug) {\n                    window.DevLogger.debug('[ComponentLoader] Waiting for dependencies:', missing);\n                }\n                setTimeout(checkDependencies, 50);\n            }\n        };\n        \n        checkDependencies();\n    }\n\n    /**\n     * Wait for Alpine.js to be ready\n     */\n    waitForAlpine() {\n        if (typeof window.Alpine !== 'undefined') {\n            this.onAlpineReady();\n        } else {\n            if (window.DevLogger && window.DevLogger.debug) {\n                window.DevLogger.debug('[ComponentLoader] Waiting for Alpine.js...');\n            }\n            \n            document.addEventListener('alpine:init', () => {\n                this.onAlpineReady();\n            }, { once: true });\n        }\n    }\n\n    /**\n     * Called when Alpine.js is ready\n     */\n    onAlpineReady() {\n        this.isAlpineReady = true;\n        \n        if (window.DevLogger && window.DevLogger.debug) {\n            window.DevLogger.debug('[ComponentLoader] Alpine.js ready, registering stubs...');\n        }\n\n        // Register all stubs with Alpine\n        this.registerStubs();\n        \n        // Process any pending registrations\n        this.processPendingRegistrations();\n        \n        if (window.DevLogger && window.DevLogger.debug) {\n            window.DevLogger.debug('[ComponentLoader] Component loader fully initialized');\n        }\n    }\n\n    /**\n     * Create component stubs\n     */\n    createStubs() {\n        if (window.DevLogger && window.DevLogger.debug) {\n            window.DevLogger.debug('[ComponentLoader] Creating component stubs...');\n        }\n\n        // Load stubs from the stubs module if available\n        if (window.ComponentStubs && window.ComponentStubs.createAllStubs) {\n            this.stubs = window.ComponentStubs.createAllStubs();\n        } else {\n            // Fallback to basic stubs\n            this.createBasicStubs();\n        }\n    }\n\n    /**\n     * Create basic fallback stubs\n     */\n    createBasicStubs() {\n        const componentNames = [\n            'mobileNav', 'recommendationsData', 'generationStudio', 'generationHistory',\n            'performanceAnalytics', 'importExport', 'loraGallery', 'promptComposer',\n            'systemAdmin', 'offlinePage', 'promptRecommendations', 'loraCard',\n            'dashboard', 'searchFilter', 'generationMonitor'\n        ];\n\n        componentNames.forEach(name => {\n            this.stubs[name] = () => {\n                const stub = window.getCommonStub ? window.getCommonStub(name) : { init() {} };\n                return stub;\n            };\n        });\n    }\n\n    /**\n     * Register all stubs with Alpine.js\n     */\n    registerStubs() {\n        if (!this.isAlpineReady) {\n            if (window.DevLogger && window.DevLogger.warn) {\n                window.DevLogger.warn('[ComponentLoader] Cannot register stubs: Alpine not ready');\n            }\n            return;\n        }\n\n        Object.entries(this.stubs).forEach(([name, factory]) => {\n            try {\n                if (window.Alpine && window.Alpine.data) {\n                    window.Alpine.data(name, factory);\n                    if (window.DevLogger && window.DevLogger.debug) {\n                        window.DevLogger.debug(`[ComponentLoader] Registered stub: ${name}`);\n                    }\n                }\n            } catch (error) {\n                if (window.DevLogger && window.DevLogger.error) {\n                    window.DevLogger.error(`[ComponentLoader] Failed to register stub ${name}:`, error);\n                }\n            }\n        });\n    }\n\n    /**\n     * Register a real component (replacing stub)\n     * @param {string} name - Component name\n     * @param {Function} factory - Component factory function\n     */\n    registerComponent(name, factory) {\n        if (!this.isAlpineReady) {\n            // Store for later registration\n            this.pendingRegistrations.set(name, factory);\n            return;\n        }\n\n        try {\n            this.components[name] = factory;\n            \n            // Make the factory available globally for lazy components\n            window[name] = factory;\n            \n            // Re-register with Alpine to replace the stub\n            if (window.Alpine && window.Alpine.data) {\n                window.Alpine.data(name, factory);\n                \n                if (window.DevLogger && window.DevLogger.debug) {\n                    window.DevLogger.debug(`[ComponentLoader] Registered real component: ${name}`);\n                }\n            }\n        } catch (error) {\n            if (window.DevLogger && window.DevLogger.error) {\n                window.DevLogger.error(`[ComponentLoader] Failed to register component ${name}:`, error);\n            }\n        }\n    }\n\n    /**\n     * Process pending registrations\n     */\n    processPendingRegistrations() {\n        this.pendingRegistrations.forEach((factory, name) => {\n            this.registerComponent(name, factory);\n        });\n        this.pendingRegistrations.clear();\n    }\n\n    /**\n     * Check if a component is loaded\n     * @param {string} name - Component name\n     * @returns {boolean} True if component is loaded\n     */\n    isComponentLoaded(name) {\n        return Object.prototype.hasOwnProperty.call(this.components, name);\n    }\n\n    /**\n     * Get component factory\n     * @param {string} name - Component name\n     * @returns {Function|null} Component factory or null\n     */\n    getComponent(name) {\n        return this.components[name] || null;\n    }\n\n    /**\n     * Load component script dynamically\n     * @param {string} scriptUrl - Script URL to load\n     * @returns {Promise<void>} Promise that resolves when script is loaded\n     */\n    async loadScript(scriptUrl) {\n        if (this.loadedScripts.has(scriptUrl)) {\n            return Promise.resolve();\n        }\n\n        return new Promise((resolve, reject) => {\n            const script = document.createElement('script');\n            script.src = scriptUrl;\n            script.async = true;\n            \n            script.onload = () => {\n                this.loadedScripts.add(scriptUrl);\n                if (window.DevLogger && window.DevLogger.debug) {\n                    window.DevLogger.debug(`[ComponentLoader] Loaded script: ${scriptUrl}`);\n                }\n                resolve();\n            };\n            \n            script.onerror = (error) => {\n                if (window.DevLogger && window.DevLogger.error) {\n                    window.DevLogger.error(`[ComponentLoader] Failed to load script: ${scriptUrl}`, error);\n                }\n                reject(new Error(`Failed to load script: ${scriptUrl}`));\n            };\n            \n            document.head.appendChild(script);\n        });\n    }\n\n    /**\n     * Load multiple scripts in sequence\n     * @param {string[]} scriptUrls - Array of script URLs\n     * @returns {Promise<void>} Promise that resolves when all scripts are loaded\n     */\n    async loadScripts(scriptUrls) {\n        for (const url of scriptUrls) {\n            await this.loadScript(url);\n        }\n    }\n\n    /**\n     * Get loader status for debugging\n     * @returns {Object} Status object\n     */\n    getStatus() {\n        return {\n            isInitialized: this.isInitialized,\n            isAlpineReady: this.isAlpineReady,\n            stubsCount: Object.keys(this.stubs).length,\n            componentsCount: Object.keys(this.components).length,\n            loadedScripts: Array.from(this.loadedScripts),\n            pendingRegistrations: Array.from(this.pendingRegistrations.keys())\n        };\n    }\n\n    /**\n     * Reset the loader (useful for testing)\n     */\n    reset() {\n        this.components = {};\n        this.stubs = {};\n        this.loadedScripts = new Set();\n        this.isAlpineReady = false;\n        this.isInitialized = false;\n        this.pendingRegistrations = new Map();\n    }\n}\n\n// Create singleton instance\nconst componentLoaderCore = new ComponentLoaderCore();\n\n// Export for use in other modules\nif (typeof module !== 'undefined' && module.exports) {\n    module.exports = { ComponentLoaderCore, componentLoaderCore };\n} else if (typeof window !== 'undefined') {\n    window.ComponentLoaderCore = ComponentLoaderCore;\n    window.componentLoaderCore = componentLoaderCore;\n}\n"],"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","ignoreList":[]}