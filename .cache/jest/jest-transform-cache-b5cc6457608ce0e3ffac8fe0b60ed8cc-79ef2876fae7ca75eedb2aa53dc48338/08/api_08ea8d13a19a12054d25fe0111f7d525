12b0db27f8829e18822404114f4bc8fb
/* istanbul ignore next */
function cov_11mhqwgeop() {
  var path = "/home/anxilinux/DeepVault/models/Lora/lora-manager/app/frontend/static/js/components/system-admin/api.js";
  var hash = "d9d614a4675e20f9b017bd5f705fe415798d2b0b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/anxilinux/DeepVault/models/Lora/lora-manager/app/frontend/static/js/components/system-admin/api.js",
    statementMap: {
      "0": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 39
        }
      },
      "1": {
        start: {
          line: 23,
          column: 20
        },
        end: {
          line: 23,
          column: 48
        }
      },
      "2": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 51,
          column: 9
        }
      },
      "3": {
        start: {
          line: 26,
          column: 29
        },
        end: {
          line: 32,
          column: 14
        }
      },
      "4": {
        start: {
          line: 34,
          column: 12
        },
        end: {
          line: 37,
          column: 13
        }
      },
      "5": {
        start: {
          line: 35,
          column: 34
        },
        end: {
          line: 35,
          column: 55
        }
      },
      "6": {
        start: {
          line: 36,
          column: 16
        },
        end: {
          line: 36,
          column: 73
        }
      },
      "7": {
        start: {
          line: 40,
          column: 32
        },
        end: {
          line: 40,
          column: 68
        }
      },
      "8": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 45,
          column: 13
        }
      },
      "9": {
        start: {
          line: 42,
          column: 16
        },
        end: {
          line: 42,
          column: 45
        }
      },
      "10": {
        start: {
          line: 44,
          column: 16
        },
        end: {
          line: 44,
          column: 45
        }
      },
      "11": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 49,
          column: 13
        }
      },
      "12": {
        start: {
          line: 48,
          column: 16
        },
        end: {
          line: 48,
          column: 81
        }
      },
      "13": {
        start: {
          line: 50,
          column: 12
        },
        end: {
          line: 50,
          column: 24
        }
      },
      "14": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 60,
          column: 52
        }
      },
      "15": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 68,
          column: 51
        }
      },
      "16": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 76,
          column: 53
        }
      },
      "17": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 85,
          column: 46
        }
      },
      "18": {
        start: {
          line: 94,
          column: 25
        },
        end: {
          line: 94,
          column: 80
        }
      },
      "19": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 95,
          column: 64
        }
      },
      "20": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 103,
          column: 78
        }
      },
      "21": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 112,
          column: 86
        }
      },
      "22": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 121,
          column: 83
        }
      },
      "23": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 130,
          column: 53
        }
      },
      "24": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 138,
          column: 74
        }
      },
      "25": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 150,
          column: 11
        }
      },
      "26": {
        start: {
          line: 159,
          column: 25
        },
        end: {
          line: 159,
          column: 84
        }
      },
      "27": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 162,
          column: 9
        }
      },
      "28": {
        start: {
          line: 161,
          column: 12
        },
        end: {
          line: 161,
          column: 77
        }
      },
      "29": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 163,
          column: 37
        }
      },
      "30": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 172,
          column: 80
        }
      },
      "31": {
        start: {
          line: 180,
          column: 8
        },
        end: {
          line: 180,
          column: 76
        }
      },
      "32": {
        start: {
          line: 188,
          column: 8
        },
        end: {
          line: 188,
          column: 83
        }
      },
      "33": {
        start: {
          line: 196,
          column: 8
        },
        end: {
          line: 196,
          column: 84
        }
      },
      "34": {
        start: {
          line: 204,
          column: 8
        },
        end: {
          line: 204,
          column: 76
        }
      },
      "35": {
        start: {
          line: 213,
          column: 8
        },
        end: {
          line: 213,
          column: 45
        }
      },
      "36": {
        start: {
          line: 222,
          column: 8
        },
        end: {
          line: 225,
          column: 11
        }
      },
      "37": {
        start: {
          line: 235,
          column: 23
        },
        end: {
          line: 235,
          column: 44
        }
      },
      "38": {
        start: {
          line: 237,
          column: 8
        },
        end: {
          line: 237,
          column: 65
        }
      },
      "39": {
        start: {
          line: 237,
          column: 27
        },
        end: {
          line: 237,
          column: 65
        }
      },
      "40": {
        start: {
          line: 238,
          column: 8
        },
        end: {
          line: 238,
          column: 92
        }
      },
      "41": {
        start: {
          line: 238,
          column: 54
        },
        end: {
          line: 238,
          column: 92
        }
      },
      "42": {
        start: {
          line: 239,
          column: 8
        },
        end: {
          line: 239,
          column: 96
        }
      },
      "43": {
        start: {
          line: 239,
          column: 56
        },
        end: {
          line: 239,
          column: 96
        }
      },
      "44": {
        start: {
          line: 241,
          column: 28
        },
        end: {
          line: 241,
          column: 45
        }
      },
      "45": {
        start: {
          line: 242,
          column: 25
        },
        end: {
          line: 242,
          column: 71
        }
      },
      "46": {
        start: {
          line: 244,
          column: 8
        },
        end: {
          line: 244,
          column: 44
        }
      },
      "47": {
        start: {
          line: 253,
          column: 8
        },
        end: {
          line: 253,
          column: 46
        }
      },
      "48": {
        start: {
          line: 262,
          column: 8
        },
        end: {
          line: 262,
          column: 52
        }
      },
      "49": {
        start: {
          line: 271,
          column: 8
        },
        end: {
          line: 271,
          column: 58
        }
      },
      "50": {
        start: {
          line: 276,
          column: 23
        },
        end: {
          line: 276,
          column: 43
        }
      },
      "51": {
        start: {
          line: 279,
          column: 0
        },
        end: {
          line: 284,
          column: 1
        }
      },
      "52": {
        start: {
          line: 280,
          column: 4
        },
        end: {
          line: 280,
          column: 56
        }
      },
      "53": {
        start: {
          line: 281,
          column: 7
        },
        end: {
          line: 284,
          column: 1
        }
      },
      "54": {
        start: {
          line: 282,
          column: 4
        },
        end: {
          line: 282,
          column: 43
        }
      },
      "55": {
        start: {
          line: 283,
          column: 4
        },
        end: {
          line: 283,
          column: 43
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 18
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 42
          },
          end: {
            line: 52,
            column: 5
          }
        },
        line: 22
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 59,
            column: 4
          },
          end: {
            line: 59,
            column: 5
          }
        },
        loc: {
          start: {
            line: 59,
            column: 28
          },
          end: {
            line: 61,
            column: 5
          }
        },
        line: 59
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 67,
            column: 4
          },
          end: {
            line: 67,
            column: 5
          }
        },
        loc: {
          start: {
            line: 67,
            column: 27
          },
          end: {
            line: 69,
            column: 5
          }
        },
        line: 67
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 75,
            column: 4
          },
          end: {
            line: 75,
            column: 5
          }
        },
        loc: {
          start: {
            line: 75,
            column: 29
          },
          end: {
            line: 77,
            column: 5
          }
        },
        line: 75
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 84,
            column: 4
          },
          end: {
            line: 84,
            column: 5
          }
        },
        loc: {
          start: {
            line: 84,
            column: 23
          },
          end: {
            line: 86,
            column: 5
          }
        },
        line: 84
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 93,
            column: 4
          },
          end: {
            line: 93,
            column: 5
          }
        },
        loc: {
          start: {
            line: 93,
            column: 33
          },
          end: {
            line: 96,
            column: 5
          }
        },
        line: 93
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 102,
            column: 4
          },
          end: {
            line: 102,
            column: 5
          }
        },
        loc: {
          start: {
            line: 102,
            column: 30
          },
          end: {
            line: 104,
            column: 5
          }
        },
        line: 102
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 111,
            column: 4
          },
          end: {
            line: 111,
            column: 5
          }
        },
        loc: {
          start: {
            line: 111,
            column: 34
          },
          end: {
            line: 113,
            column: 5
          }
        },
        line: 111
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 120,
            column: 4
          },
          end: {
            line: 120,
            column: 5
          }
        },
        loc: {
          start: {
            line: 120,
            column: 31
          },
          end: {
            line: 122,
            column: 5
          }
        },
        line: 120
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 129,
            column: 4
          },
          end: {
            line: 129,
            column: 5
          }
        },
        loc: {
          start: {
            line: 129,
            column: 29
          },
          end: {
            line: 131,
            column: 5
          }
        },
        line: 129
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 137,
            column: 4
          },
          end: {
            line: 137,
            column: 5
          }
        },
        loc: {
          start: {
            line: 137,
            column: 25
          },
          end: {
            line: 139,
            column: 5
          }
        },
        line: 137
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 146,
            column: 4
          },
          end: {
            line: 146,
            column: 5
          }
        },
        loc: {
          start: {
            line: 146,
            column: 34
          },
          end: {
            line: 151,
            column: 5
          }
        },
        line: 146
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 158,
            column: 4
          },
          end: {
            line: 158,
            column: 5
          }
        },
        loc: {
          start: {
            line: 158,
            column: 35
          },
          end: {
            line: 164,
            column: 5
          }
        },
        line: 158
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 171,
            column: 4
          },
          end: {
            line: 171,
            column: 5
          }
        },
        loc: {
          start: {
            line: 171,
            column: 33
          },
          end: {
            line: 173,
            column: 5
          }
        },
        line: 171
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 179,
            column: 4
          },
          end: {
            line: 179,
            column: 5
          }
        },
        loc: {
          start: {
            line: 179,
            column: 29
          },
          end: {
            line: 181,
            column: 5
          }
        },
        line: 179
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 187,
            column: 4
          },
          end: {
            line: 187,
            column: 5
          }
        },
        loc: {
          start: {
            line: 187,
            column: 27
          },
          end: {
            line: 189,
            column: 5
          }
        },
        line: 187
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 195,
            column: 4
          },
          end: {
            line: 195,
            column: 5
          }
        },
        loc: {
          start: {
            line: 195,
            column: 28
          },
          end: {
            line: 197,
            column: 5
          }
        },
        line: 195
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 203,
            column: 4
          },
          end: {
            line: 203,
            column: 5
          }
        },
        loc: {
          start: {
            line: 203,
            column: 29
          },
          end: {
            line: 205,
            column: 5
          }
        },
        line: 203
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 212,
            column: 4
          },
          end: {
            line: 212,
            column: 5
          }
        },
        loc: {
          start: {
            line: 212,
            column: 29
          },
          end: {
            line: 214,
            column: 5
          }
        },
        line: 212
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 221,
            column: 4
          },
          end: {
            line: 221,
            column: 5
          }
        },
        loc: {
          start: {
            line: 221,
            column: 38
          },
          end: {
            line: 226,
            column: 5
          }
        },
        line: 221
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 234,
            column: 4
          },
          end: {
            line: 234,
            column: 5
          }
        },
        loc: {
          start: {
            line: 234,
            column: 32
          },
          end: {
            line: 245,
            column: 5
          }
        },
        line: 234
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 252,
            column: 4
          },
          end: {
            line: 252,
            column: 5
          }
        },
        loc: {
          start: {
            line: 252,
            column: 29
          },
          end: {
            line: 254,
            column: 5
          }
        },
        line: 252
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 261,
            column: 4
          },
          end: {
            line: 261,
            column: 5
          }
        },
        loc: {
          start: {
            line: 261,
            column: 28
          },
          end: {
            line: 263,
            column: 5
          }
        },
        line: 261
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 270,
            column: 4
          },
          end: {
            line: 270,
            column: 5
          }
        },
        loc: {
          start: {
            line: 270,
            column: 42
          },
          end: {
            line: 272,
            column: 5
          }
        },
        line: 270
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 22,
            column: 28
          },
          end: {
            line: 22,
            column: 40
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 22,
            column: 38
          },
          end: {
            line: 22,
            column: 40
          }
        }],
        line: 22
      },
      "1": {
        loc: {
          start: {
            line: 34,
            column: 12
          },
          end: {
            line: 37,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 12
          },
          end: {
            line: 37,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 34
      },
      "2": {
        loc: {
          start: {
            line: 41,
            column: 12
          },
          end: {
            line: 45,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 12
          },
          end: {
            line: 45,
            column: 13
          }
        }, {
          start: {
            line: 43,
            column: 19
          },
          end: {
            line: 45,
            column: 13
          }
        }],
        line: 41
      },
      "3": {
        loc: {
          start: {
            line: 41,
            column: 16
          },
          end: {
            line: 41,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 16
          },
          end: {
            line: 41,
            column: 27
          }
        }, {
          start: {
            line: 41,
            column: 31
          },
          end: {
            line: 41,
            column: 71
          }
        }],
        line: 41
      },
      "4": {
        loc: {
          start: {
            line: 47,
            column: 12
          },
          end: {
            line: 49,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 12
          },
          end: {
            line: 49,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 47
      },
      "5": {
        loc: {
          start: {
            line: 47,
            column: 16
          },
          end: {
            line: 47,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 16
          },
          end: {
            line: 47,
            column: 32
          }
        }, {
          start: {
            line: 47,
            column: 36
          },
          end: {
            line: 47,
            column: 58
          }
        }],
        line: 47
      },
      "6": {
        loc: {
          start: {
            line: 94,
            column: 25
          },
          end: {
            line: 94,
            column: 80
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 94,
            column: 46
          },
          end: {
            line: 94,
            column: 62
          }
        }, {
          start: {
            line: 94,
            column: 65
          },
          end: {
            line: 94,
            column: 80
          }
        }],
        line: 94
      },
      "7": {
        loc: {
          start: {
            line: 160,
            column: 8
          },
          end: {
            line: 162,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 160,
            column: 8
          },
          end: {
            line: 162,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 160
      },
      "8": {
        loc: {
          start: {
            line: 234,
            column: 18
          },
          end: {
            line: 234,
            column: 30
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 234,
            column: 28
          },
          end: {
            line: 234,
            column: 30
          }
        }],
        line: 234
      },
      "9": {
        loc: {
          start: {
            line: 237,
            column: 8
          },
          end: {
            line: 237,
            column: 65
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 237,
            column: 8
          },
          end: {
            line: 237,
            column: 65
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 237
      },
      "10": {
        loc: {
          start: {
            line: 238,
            column: 8
          },
          end: {
            line: 238,
            column: 92
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 238,
            column: 8
          },
          end: {
            line: 238,
            column: 92
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 238
      },
      "11": {
        loc: {
          start: {
            line: 238,
            column: 12
          },
          end: {
            line: 238,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 238,
            column: 12
          },
          end: {
            line: 238,
            column: 25
          }
        }, {
          start: {
            line: 238,
            column: 29
          },
          end: {
            line: 238,
            column: 52
          }
        }],
        line: 238
      },
      "12": {
        loc: {
          start: {
            line: 239,
            column: 8
          },
          end: {
            line: 239,
            column: 96
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 239,
            column: 8
          },
          end: {
            line: 239,
            column: 96
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 239
      },
      "13": {
        loc: {
          start: {
            line: 239,
            column: 12
          },
          end: {
            line: 239,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 239,
            column: 12
          },
          end: {
            line: 239,
            column: 26
          }
        }, {
          start: {
            line: 239,
            column: 30
          },
          end: {
            line: 239,
            column: 54
          }
        }],
        line: 239
      },
      "14": {
        loc: {
          start: {
            line: 242,
            column: 25
          },
          end: {
            line: 242,
            column: 71
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 242,
            column: 39
          },
          end: {
            line: 242,
            column: 61
          }
        }, {
          start: {
            line: 242,
            column: 64
          },
          end: {
            line: 242,
            column: 71
          }
        }],
        line: 242
      },
      "15": {
        loc: {
          start: {
            line: 279,
            column: 0
          },
          end: {
            line: 284,
            column: 1
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 279,
            column: 0
          },
          end: {
            line: 284,
            column: 1
          }
        }, {
          start: {
            line: 281,
            column: 7
          },
          end: {
            line: 284,
            column: 1
          }
        }],
        line: 279
      },
      "16": {
        loc: {
          start: {
            line: 279,
            column: 4
          },
          end: {
            line: 279,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 279,
            column: 4
          },
          end: {
            line: 279,
            column: 33
          }
        }, {
          start: {
            line: 279,
            column: 37
          },
          end: {
            line: 279,
            column: 51
          }
        }],
        line: 279
      },
      "17": {
        loc: {
          start: {
            line: 281,
            column: 7
          },
          end: {
            line: 284,
            column: 1
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 281,
            column: 7
          },
          end: {
            line: 284,
            column: 1
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 281
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d9d614a4675e20f9b017bd5f705fe415798d2b0b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_11mhqwgeop = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_11mhqwgeop();
/**
 * System Administration API Module
 * 
 * Handles all HTTP requests to the admin API endpoints.
 * Provides a clean interface for system monitoring, configuration, and maintenance operations.
 */

/**
 * API client for system administration endpoints
 */
class SystemAdminAPI {
  constructor() {
    /* istanbul ignore next */
    cov_11mhqwgeop().f[0]++;
    cov_11mhqwgeop().s[0]++;
    this.baseUrl = '/api/v1/admin';
  }

  /**
   * Make a generic API request with error handling
   * @param {string} endpoint - API endpoint relative to baseUrl
   * @param {Object} options - Fetch options
   * @returns {Promise<Object>} Response data
   */
  async request(endpoint, options =
  /* istanbul ignore next */
  (cov_11mhqwgeop().b[0][0]++, {})) {
    /* istanbul ignore next */
    cov_11mhqwgeop().f[1]++;
    const url =
    /* istanbul ignore next */
    (cov_11mhqwgeop().s[1]++, `${this.baseUrl}${endpoint}`);
    /* istanbul ignore next */
    cov_11mhqwgeop().s[2]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_11mhqwgeop().s[3]++, await fetch(url, {
        headers: {
          'Content-Type': 'application/json',
          ...options.headers
        },
        ...options
      }));
      /* istanbul ignore next */
      cov_11mhqwgeop().s[4]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_11mhqwgeop().b[1][0]++;
        const errorData =
        /* istanbul ignore next */
        (cov_11mhqwgeop().s[5]++, await response.text());
        /* istanbul ignore next */
        cov_11mhqwgeop().s[6]++;
        throw new Error(`HTTP ${response.status}: ${errorData}`);
      } else
      /* istanbul ignore next */
      {
        cov_11mhqwgeop().b[1][1]++;
      }

      // Handle empty responses
      const contentType =
      /* istanbul ignore next */
      (cov_11mhqwgeop().s[7]++, response.headers.get('content-type'));
      /* istanbul ignore next */
      cov_11mhqwgeop().s[8]++;
      if (
      /* istanbul ignore next */
      (cov_11mhqwgeop().b[3][0]++, contentType) &&
      /* istanbul ignore next */
      (cov_11mhqwgeop().b[3][1]++, contentType.includes('application/json'))) {
        /* istanbul ignore next */
        cov_11mhqwgeop().b[2][0]++;
        cov_11mhqwgeop().s[9]++;
        return await response.json();
      } else {
        /* istanbul ignore next */
        cov_11mhqwgeop().b[2][1]++;
        cov_11mhqwgeop().s[10]++;
        return await response.text();
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_11mhqwgeop().s[11]++;
      if (
      /* istanbul ignore next */
      (cov_11mhqwgeop().b[5][0]++, window.DevLogger) &&
      /* istanbul ignore next */
      (cov_11mhqwgeop().b[5][1]++, window.DevLogger.error)) {
        /* istanbul ignore next */
        cov_11mhqwgeop().b[4][0]++;
        cov_11mhqwgeop().s[12]++;
        window.DevLogger.error(`API request failed: ${endpoint}`, error);
      } else
      /* istanbul ignore next */
      {
        cov_11mhqwgeop().b[4][1]++;
      }
      cov_11mhqwgeop().s[13]++;
      throw error;
    }
  }

  // System Status and Stats
  /**
   * Get system status
   * @returns {Promise<Object>} System status data
   */
  async getSystemStatus() {
    /* istanbul ignore next */
    cov_11mhqwgeop().f[2]++;
    cov_11mhqwgeop().s[14]++;
    return await this.request('/system/status');
  }

  /**
   * Get system statistics
   * @returns {Promise<Object>} System stats data
   */
  async getSystemStats() {
    /* istanbul ignore next */
    cov_11mhqwgeop().f[3]++;
    cov_11mhqwgeop().s[15]++;
    return await this.request('/system/stats');
  }

  /**
   * Get real-time system metrics
   * @returns {Promise<Object>} System metrics data
   */
  async getSystemMetrics() {
    /* istanbul ignore next */
    cov_11mhqwgeop().f[4]++;
    cov_11mhqwgeop().s[16]++;
    return await this.request('/system/metrics');
  }

  // Workers Management
  /**
   * Get all workers
   * @returns {Promise<Array>} Array of worker objects
   */
  async getWorkers() {
    /* istanbul ignore next */
    cov_11mhqwgeop().f[5]++;
    cov_11mhqwgeop().s[17]++;
    return await this.request('/workers');
  }

  /**
   * Start or stop workers
   * @param {string} action - 'start' or 'stop'
   * @returns {Promise<Object>} Operation result
   */
  async controlWorkers(action) {
    /* istanbul ignore next */
    cov_11mhqwgeop().f[6]++;
    const endpoint =
    /* istanbul ignore next */
    (cov_11mhqwgeop().s[18]++, action === 'start' ?
    /* istanbul ignore next */
    (cov_11mhqwgeop().b[6][0]++, '/workers/start') :
    /* istanbul ignore next */
    (cov_11mhqwgeop().b[6][1]++, '/workers/stop'));
    /* istanbul ignore next */
    cov_11mhqwgeop().s[19]++;
    return await this.request(endpoint, {
      method: 'POST'
    });
  }

  /**
   * Restart all workers
   * @returns {Promise<Object>} Operation result
   */
  async restartAllWorkers() {
    /* istanbul ignore next */
    cov_11mhqwgeop().f[7]++;
    cov_11mhqwgeop().s[20]++;
    return await this.request('/workers/restart-all', {
      method: 'POST'
    });
  }

  /**
   * Restart a specific worker
   * @param {string} workerId - Worker ID to restart
   * @returns {Promise<Object>} Operation result
   */
  async restartWorker(workerId) {
    /* istanbul ignore next */
    cov_11mhqwgeop().f[8]++;
    cov_11mhqwgeop().s[21]++;
    return await this.request(`/workers/${workerId}/restart`, {
      method: 'POST'
    });
  }

  /**
   * Stop a specific worker
   * @param {string} workerId - Worker ID to stop
   * @returns {Promise<Object>} Operation result
   */
  async stopWorker(workerId) {
    /* istanbul ignore next */
    cov_11mhqwgeop().f[9]++;
    cov_11mhqwgeop().s[22]++;
    return await this.request(`/workers/${workerId}/stop`, {
      method: 'POST'
    });
  }

  // Database Management
  /**
   * Get database statistics
   * @returns {Promise<Object>} Database stats
   */
  async getDatabaseStats() {
    /* istanbul ignore next */
    cov_11mhqwgeop().f[10]++;
    cov_11mhqwgeop().s[23]++;
    return await this.request('/database/stats');
  }

  /**
   * Create database backup
   * @returns {Promise<Object>} Backup operation result
   */
  async createBackup() {
    /* istanbul ignore next */
    cov_11mhqwgeop().f[11]++;
    cov_11mhqwgeop().s[24]++;
    return await this.request('/database/backup', {
      method: 'POST'
    });
  }

  /**
   * Restore database from backup
   * @param {string} backupId - Backup ID to restore
   * @returns {Promise<Object>} Restore operation result
   */
  async restoreBackup(backupId) {
    /* istanbul ignore next */
    cov_11mhqwgeop().f[12]++;
    cov_11mhqwgeop().s[25]++;
    return await this.request('/database/restore', {
      method: 'POST',
      body: JSON.stringify({
        backup_id: backupId
      })
    });
  }

  /**
   * Download backup file
   * @param {string} backupId - Backup ID to download
   * @returns {Promise<Blob>} Backup file blob
   */
  async downloadBackup(backupId) {
    /* istanbul ignore next */
    cov_11mhqwgeop().f[13]++;
    const response =
    /* istanbul ignore next */
    (cov_11mhqwgeop().s[26]++, await fetch(`${this.baseUrl}/backups/${backupId}/download`));
    /* istanbul ignore next */
    cov_11mhqwgeop().s[27]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_11mhqwgeop().b[7][0]++;
      cov_11mhqwgeop().s[28]++;
      throw new Error(`Failed to download backup: ${response.status}`);
    } else
    /* istanbul ignore next */
    {
      cov_11mhqwgeop().b[7][1]++;
    }
    cov_11mhqwgeop().s[29]++;
    return await response.blob();
  }

  /**
   * Delete a backup
   * @param {string} backupId - Backup ID to delete
   * @returns {Promise<Object>} Delete operation result
   */
  async deleteBackup(backupId) {
    /* istanbul ignore next */
    cov_11mhqwgeop().f[14]++;
    cov_11mhqwgeop().s[30]++;
    return await this.request(`/backups/${backupId}`, {
      method: 'DELETE'
    });
  }

  /**
   * Optimize database
   * @returns {Promise<Object>} Optimization result
   */
  async optimizeDatabase() {
    /* istanbul ignore next */
    cov_11mhqwgeop().f[15]++;
    cov_11mhqwgeop().s[31]++;
    return await this.request('/database/optimize', {
      method: 'POST'
    });
  }

  /**
   * Rebuild database indexes
   * @returns {Promise<Object>} Rebuild operation result
   */
  async rebuildIndexes() {
    /* istanbul ignore next */
    cov_11mhqwgeop().f[16]++;
    cov_11mhqwgeop().s[32]++;
    return await this.request('/database/rebuild-indexes', {
      method: 'POST'
    });
  }

  /**
   * Cleanup orphaned records
   * @returns {Promise<Object>} Cleanup operation result
   */
  async cleanupOrphaned() {
    /* istanbul ignore next */
    cov_11mhqwgeop().f[17]++;
    cov_11mhqwgeop().s[33]++;
    return await this.request('/database/cleanup-orphaned', {
      method: 'POST'
    });
  }

  /**
   * Validate database integrity
   * @returns {Promise<Object>} Validation result
   */
  async validateDatabase() {
    /* istanbul ignore next */
    cov_11mhqwgeop().f[18]++;
    cov_11mhqwgeop().s[34]++;
    return await this.request('/database/validate', {
      method: 'POST'
    });
  }

  // Configuration Management
  /**
   * Get system configuration
   * @returns {Promise<Object>} Configuration data
   */
  async getConfiguration() {
    /* istanbul ignore next */
    cov_11mhqwgeop().f[19]++;
    cov_11mhqwgeop().s[35]++;
    return await this.request('/config');
  }

  /**
   * Update system configuration
   * @param {Object} config - Configuration object to update
   * @returns {Promise<Object>} Update result
   */
  async updateConfiguration(config) {
    /* istanbul ignore next */
    cov_11mhqwgeop().f[20]++;
    cov_11mhqwgeop().s[36]++;
    return await this.request('/config', {
      method: 'PUT',
      body: JSON.stringify(config)
    });
  }

  // Logs Management
  /**
   * Get system logs
   * @param {Object} options - Query options (limit, level, source)
   * @returns {Promise<Array>} Array of log entries
   */
  async getLogs(options =
  /* istanbul ignore next */
  (cov_11mhqwgeop().b[8][0]++, {})) {
    /* istanbul ignore next */
    cov_11mhqwgeop().f[21]++;
    const params =
    /* istanbul ignore next */
    (cov_11mhqwgeop().s[37]++, new URLSearchParams());
    /* istanbul ignore next */
    cov_11mhqwgeop().s[38]++;
    if (options.limit) {
      /* istanbul ignore next */
      cov_11mhqwgeop().b[9][0]++;
      cov_11mhqwgeop().s[39]++;
      params.append('limit', options.limit);
    } else
    /* istanbul ignore next */
    {
      cov_11mhqwgeop().b[9][1]++;
    }
    cov_11mhqwgeop().s[40]++;
    if (
    /* istanbul ignore next */
    (cov_11mhqwgeop().b[11][0]++, options.level) &&
    /* istanbul ignore next */
    (cov_11mhqwgeop().b[11][1]++, options.level !== 'all')) {
      /* istanbul ignore next */
      cov_11mhqwgeop().b[10][0]++;
      cov_11mhqwgeop().s[41]++;
      params.append('level', options.level);
    } else
    /* istanbul ignore next */
    {
      cov_11mhqwgeop().b[10][1]++;
    }
    cov_11mhqwgeop().s[42]++;
    if (
    /* istanbul ignore next */
    (cov_11mhqwgeop().b[13][0]++, options.source) &&
    /* istanbul ignore next */
    (cov_11mhqwgeop().b[13][1]++, options.source !== 'all')) {
      /* istanbul ignore next */
      cov_11mhqwgeop().b[12][0]++;
      cov_11mhqwgeop().s[43]++;
      params.append('source', options.source);
    } else
    /* istanbul ignore next */
    {
      cov_11mhqwgeop().b[12][1]++;
    }
    const queryString =
    /* istanbul ignore next */
    (cov_11mhqwgeop().s[44]++, params.toString());
    const endpoint =
    /* istanbul ignore next */
    (cov_11mhqwgeop().s[45]++, queryString ?
    /* istanbul ignore next */
    (cov_11mhqwgeop().b[14][0]++, `/logs?${queryString}`) :
    /* istanbul ignore next */
    (cov_11mhqwgeop().b[14][1]++, '/logs'));
    /* istanbul ignore next */
    cov_11mhqwgeop().s[46]++;
    return await this.request(endpoint);
  }

  // Backup Management
  /**
   * Get recent backups
   * @returns {Promise<Array>} Array of backup objects
   */
  async getRecentBackups() {
    /* istanbul ignore next */
    cov_11mhqwgeop().f[22]++;
    cov_11mhqwgeop().s[47]++;
    return await this.request('/backups');
  }

  // Health and Monitoring
  /**
   * Get comprehensive health report
   * @returns {Promise<Object>} Health report data
   */
  async getHealthReport() {
    /* istanbul ignore next */
    cov_11mhqwgeop().f[23]++;
    cov_11mhqwgeop().s[48]++;
    return await this.request('/health/report');
  }

  /**
   * Check specific system component health
   * @param {string} component - Component to check (database, workers, storage, etc.)
   * @returns {Promise<Object>} Component health status
   */
  async checkComponentHealth(component) {
    /* istanbul ignore next */
    cov_11mhqwgeop().f[24]++;
    cov_11mhqwgeop().s[49]++;
    return await this.request(`/health/${component}`);
  }
}

// Export singleton instance
const systemAdminAPI =
/* istanbul ignore next */
(cov_11mhqwgeop().s[50]++, new SystemAdminAPI());

// Make available globally and for module export
/* istanbul ignore next */
cov_11mhqwgeop().s[51]++;
if (
/* istanbul ignore next */
(cov_11mhqwgeop().b[16][0]++, typeof module !== 'undefined') &&
/* istanbul ignore next */
(cov_11mhqwgeop().b[16][1]++, module.exports)) {
  /* istanbul ignore next */
  cov_11mhqwgeop().b[15][0]++;
  cov_11mhqwgeop().s[52]++;
  module.exports = {
    SystemAdminAPI,
    systemAdminAPI
  };
} else {
  /* istanbul ignore next */
  cov_11mhqwgeop().b[15][1]++;
  cov_11mhqwgeop().s[53]++;
  if (typeof window !== 'undefined') {
    /* istanbul ignore next */
    cov_11mhqwgeop().b[17][0]++;
    cov_11mhqwgeop().s[54]++;
    window.systemAdminAPI = systemAdminAPI;
    /* istanbul ignore next */
    cov_11mhqwgeop().s[55]++;
    window.SystemAdminAPI = SystemAdminAPI;
  } else
  /* istanbul ignore next */
  {
    cov_11mhqwgeop().b[17][1]++;
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMTFtaHF3Z2VvcCIsImFjdHVhbENvdmVyYWdlIiwiU3lzdGVtQWRtaW5BUEkiLCJjb25zdHJ1Y3RvciIsImYiLCJzIiwiYmFzZVVybCIsInJlcXVlc3QiLCJlbmRwb2ludCIsIm9wdGlvbnMiLCJiIiwidXJsIiwicmVzcG9uc2UiLCJmZXRjaCIsImhlYWRlcnMiLCJvayIsImVycm9yRGF0YSIsInRleHQiLCJFcnJvciIsInN0YXR1cyIsImNvbnRlbnRUeXBlIiwiZ2V0IiwiaW5jbHVkZXMiLCJqc29uIiwiZXJyb3IiLCJ3aW5kb3ciLCJEZXZMb2dnZXIiLCJnZXRTeXN0ZW1TdGF0dXMiLCJnZXRTeXN0ZW1TdGF0cyIsImdldFN5c3RlbU1ldHJpY3MiLCJnZXRXb3JrZXJzIiwiY29udHJvbFdvcmtlcnMiLCJhY3Rpb24iLCJtZXRob2QiLCJyZXN0YXJ0QWxsV29ya2VycyIsInJlc3RhcnRXb3JrZXIiLCJ3b3JrZXJJZCIsInN0b3BXb3JrZXIiLCJnZXREYXRhYmFzZVN0YXRzIiwiY3JlYXRlQmFja3VwIiwicmVzdG9yZUJhY2t1cCIsImJhY2t1cElkIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJiYWNrdXBfaWQiLCJkb3dubG9hZEJhY2t1cCIsImJsb2IiLCJkZWxldGVCYWNrdXAiLCJvcHRpbWl6ZURhdGFiYXNlIiwicmVidWlsZEluZGV4ZXMiLCJjbGVhbnVwT3JwaGFuZWQiLCJ2YWxpZGF0ZURhdGFiYXNlIiwiZ2V0Q29uZmlndXJhdGlvbiIsInVwZGF0ZUNvbmZpZ3VyYXRpb24iLCJjb25maWciLCJnZXRMb2dzIiwicGFyYW1zIiwiVVJMU2VhcmNoUGFyYW1zIiwibGltaXQiLCJhcHBlbmQiLCJsZXZlbCIsInNvdXJjZSIsInF1ZXJ5U3RyaW5nIiwidG9TdHJpbmciLCJnZXRSZWNlbnRCYWNrdXBzIiwiZ2V0SGVhbHRoUmVwb3J0IiwiY2hlY2tDb21wb25lbnRIZWFsdGgiLCJjb21wb25lbnQiLCJzeXN0ZW1BZG1pbkFQSSIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlcyI6WyJhcGkuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBTeXN0ZW0gQWRtaW5pc3RyYXRpb24gQVBJIE1vZHVsZVxuICogXG4gKiBIYW5kbGVzIGFsbCBIVFRQIHJlcXVlc3RzIHRvIHRoZSBhZG1pbiBBUEkgZW5kcG9pbnRzLlxuICogUHJvdmlkZXMgYSBjbGVhbiBpbnRlcmZhY2UgZm9yIHN5c3RlbSBtb25pdG9yaW5nLCBjb25maWd1cmF0aW9uLCBhbmQgbWFpbnRlbmFuY2Ugb3BlcmF0aW9ucy5cbiAqL1xuXG4vKipcbiAqIEFQSSBjbGllbnQgZm9yIHN5c3RlbSBhZG1pbmlzdHJhdGlvbiBlbmRwb2ludHNcbiAqL1xuY2xhc3MgU3lzdGVtQWRtaW5BUEkge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLmJhc2VVcmwgPSAnL2FwaS92MS9hZG1pbic7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogTWFrZSBhIGdlbmVyaWMgQVBJIHJlcXVlc3Qgd2l0aCBlcnJvciBoYW5kbGluZ1xuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBlbmRwb2ludCAtIEFQSSBlbmRwb2ludCByZWxhdGl2ZSB0byBiYXNlVXJsXG4gICAgICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnMgLSBGZXRjaCBvcHRpb25zXG4gICAgICogQHJldHVybnMge1Byb21pc2U8T2JqZWN0Pn0gUmVzcG9uc2UgZGF0YVxuICAgICAqL1xuICAgIGFzeW5jIHJlcXVlc3QoZW5kcG9pbnQsIG9wdGlvbnMgPSB7fSkge1xuICAgICAgICBjb25zdCB1cmwgPSBgJHt0aGlzLmJhc2VVcmx9JHtlbmRwb2ludH1gO1xuICAgICAgICBcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2godXJsLCB7XG4gICAgICAgICAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgICAgICAgICAgICAgICAuLi5vcHRpb25zLmhlYWRlcnNcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIC4uLm9wdGlvbnNcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgZXJyb3JEYXRhID0gYXdhaXQgcmVzcG9uc2UudGV4dCgpO1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgSFRUUCAke3Jlc3BvbnNlLnN0YXR1c306ICR7ZXJyb3JEYXRhfWApO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvLyBIYW5kbGUgZW1wdHkgcmVzcG9uc2VzXG4gICAgICAgICAgICBjb25zdCBjb250ZW50VHlwZSA9IHJlc3BvbnNlLmhlYWRlcnMuZ2V0KCdjb250ZW50LXR5cGUnKTtcbiAgICAgICAgICAgIGlmIChjb250ZW50VHlwZSAmJiBjb250ZW50VHlwZS5pbmNsdWRlcygnYXBwbGljYXRpb24vanNvbicpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGF3YWl0IHJlc3BvbnNlLnRleHQoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIGlmICh3aW5kb3cuRGV2TG9nZ2VyICYmIHdpbmRvdy5EZXZMb2dnZXIuZXJyb3IpIHtcbiAgICAgICAgICAgICAgICB3aW5kb3cuRGV2TG9nZ2VyLmVycm9yKGBBUEkgcmVxdWVzdCBmYWlsZWQ6ICR7ZW5kcG9pbnR9YCwgZXJyb3IpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBTeXN0ZW0gU3RhdHVzIGFuZCBTdGF0c1xuICAgIC8qKlxuICAgICAqIEdldCBzeXN0ZW0gc3RhdHVzXG4gICAgICogQHJldHVybnMge1Byb21pc2U8T2JqZWN0Pn0gU3lzdGVtIHN0YXR1cyBkYXRhXG4gICAgICovXG4gICAgYXN5bmMgZ2V0U3lzdGVtU3RhdHVzKCkge1xuICAgICAgICByZXR1cm4gYXdhaXQgdGhpcy5yZXF1ZXN0KCcvc3lzdGVtL3N0YXR1cycpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEdldCBzeXN0ZW0gc3RhdGlzdGljc1xuICAgICAqIEByZXR1cm5zIHtQcm9taXNlPE9iamVjdD59IFN5c3RlbSBzdGF0cyBkYXRhXG4gICAgICovXG4gICAgYXN5bmMgZ2V0U3lzdGVtU3RhdHMoKSB7XG4gICAgICAgIHJldHVybiBhd2FpdCB0aGlzLnJlcXVlc3QoJy9zeXN0ZW0vc3RhdHMnKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBHZXQgcmVhbC10aW1lIHN5c3RlbSBtZXRyaWNzXG4gICAgICogQHJldHVybnMge1Byb21pc2U8T2JqZWN0Pn0gU3lzdGVtIG1ldHJpY3MgZGF0YVxuICAgICAqL1xuICAgIGFzeW5jIGdldFN5c3RlbU1ldHJpY3MoKSB7XG4gICAgICAgIHJldHVybiBhd2FpdCB0aGlzLnJlcXVlc3QoJy9zeXN0ZW0vbWV0cmljcycpO1xuICAgIH1cblxuICAgIC8vIFdvcmtlcnMgTWFuYWdlbWVudFxuICAgIC8qKlxuICAgICAqIEdldCBhbGwgd29ya2Vyc1xuICAgICAqIEByZXR1cm5zIHtQcm9taXNlPEFycmF5Pn0gQXJyYXkgb2Ygd29ya2VyIG9iamVjdHNcbiAgICAgKi9cbiAgICBhc3luYyBnZXRXb3JrZXJzKCkge1xuICAgICAgICByZXR1cm4gYXdhaXQgdGhpcy5yZXF1ZXN0KCcvd29ya2VycycpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFN0YXJ0IG9yIHN0b3Agd29ya2Vyc1xuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBhY3Rpb24gLSAnc3RhcnQnIG9yICdzdG9wJ1xuICAgICAqIEByZXR1cm5zIHtQcm9taXNlPE9iamVjdD59IE9wZXJhdGlvbiByZXN1bHRcbiAgICAgKi9cbiAgICBhc3luYyBjb250cm9sV29ya2VycyhhY3Rpb24pIHtcbiAgICAgICAgY29uc3QgZW5kcG9pbnQgPSBhY3Rpb24gPT09ICdzdGFydCcgPyAnL3dvcmtlcnMvc3RhcnQnIDogJy93b3JrZXJzL3N0b3AnO1xuICAgICAgICByZXR1cm4gYXdhaXQgdGhpcy5yZXF1ZXN0KGVuZHBvaW50LCB7IG1ldGhvZDogJ1BPU1QnIH0pO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFJlc3RhcnQgYWxsIHdvcmtlcnNcbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxPYmplY3Q+fSBPcGVyYXRpb24gcmVzdWx0XG4gICAgICovXG4gICAgYXN5bmMgcmVzdGFydEFsbFdvcmtlcnMoKSB7XG4gICAgICAgIHJldHVybiBhd2FpdCB0aGlzLnJlcXVlc3QoJy93b3JrZXJzL3Jlc3RhcnQtYWxsJywgeyBtZXRob2Q6ICdQT1NUJyB9KTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBSZXN0YXJ0IGEgc3BlY2lmaWMgd29ya2VyXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IHdvcmtlcklkIC0gV29ya2VyIElEIHRvIHJlc3RhcnRcbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxPYmplY3Q+fSBPcGVyYXRpb24gcmVzdWx0XG4gICAgICovXG4gICAgYXN5bmMgcmVzdGFydFdvcmtlcih3b3JrZXJJZCkge1xuICAgICAgICByZXR1cm4gYXdhaXQgdGhpcy5yZXF1ZXN0KGAvd29ya2Vycy8ke3dvcmtlcklkfS9yZXN0YXJ0YCwgeyBtZXRob2Q6ICdQT1NUJyB9KTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBTdG9wIGEgc3BlY2lmaWMgd29ya2VyXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IHdvcmtlcklkIC0gV29ya2VyIElEIHRvIHN0b3BcbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxPYmplY3Q+fSBPcGVyYXRpb24gcmVzdWx0XG4gICAgICovXG4gICAgYXN5bmMgc3RvcFdvcmtlcih3b3JrZXJJZCkge1xuICAgICAgICByZXR1cm4gYXdhaXQgdGhpcy5yZXF1ZXN0KGAvd29ya2Vycy8ke3dvcmtlcklkfS9zdG9wYCwgeyBtZXRob2Q6ICdQT1NUJyB9KTtcbiAgICB9XG5cbiAgICAvLyBEYXRhYmFzZSBNYW5hZ2VtZW50XG4gICAgLyoqXG4gICAgICogR2V0IGRhdGFiYXNlIHN0YXRpc3RpY3NcbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxPYmplY3Q+fSBEYXRhYmFzZSBzdGF0c1xuICAgICAqL1xuICAgIGFzeW5jIGdldERhdGFiYXNlU3RhdHMoKSB7XG4gICAgICAgIHJldHVybiBhd2FpdCB0aGlzLnJlcXVlc3QoJy9kYXRhYmFzZS9zdGF0cycpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIENyZWF0ZSBkYXRhYmFzZSBiYWNrdXBcbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxPYmplY3Q+fSBCYWNrdXAgb3BlcmF0aW9uIHJlc3VsdFxuICAgICAqL1xuICAgIGFzeW5jIGNyZWF0ZUJhY2t1cCgpIHtcbiAgICAgICAgcmV0dXJuIGF3YWl0IHRoaXMucmVxdWVzdCgnL2RhdGFiYXNlL2JhY2t1cCcsIHsgbWV0aG9kOiAnUE9TVCcgfSk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogUmVzdG9yZSBkYXRhYmFzZSBmcm9tIGJhY2t1cFxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBiYWNrdXBJZCAtIEJhY2t1cCBJRCB0byByZXN0b3JlXG4gICAgICogQHJldHVybnMge1Byb21pc2U8T2JqZWN0Pn0gUmVzdG9yZSBvcGVyYXRpb24gcmVzdWx0XG4gICAgICovXG4gICAgYXN5bmMgcmVzdG9yZUJhY2t1cChiYWNrdXBJZCkge1xuICAgICAgICByZXR1cm4gYXdhaXQgdGhpcy5yZXF1ZXN0KCcvZGF0YWJhc2UvcmVzdG9yZScsIHtcbiAgICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoeyBiYWNrdXBfaWQ6IGJhY2t1cElkIH0pXG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIERvd25sb2FkIGJhY2t1cCBmaWxlXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGJhY2t1cElkIC0gQmFja3VwIElEIHRvIGRvd25sb2FkXG4gICAgICogQHJldHVybnMge1Byb21pc2U8QmxvYj59IEJhY2t1cCBmaWxlIGJsb2JcbiAgICAgKi9cbiAgICBhc3luYyBkb3dubG9hZEJhY2t1cChiYWNrdXBJZCkge1xuICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGAke3RoaXMuYmFzZVVybH0vYmFja3Vwcy8ke2JhY2t1cElkfS9kb3dubG9hZGApO1xuICAgICAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEZhaWxlZCB0byBkb3dubG9hZCBiYWNrdXA6ICR7cmVzcG9uc2Uuc3RhdHVzfWApO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBhd2FpdCByZXNwb25zZS5ibG9iKCk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogRGVsZXRlIGEgYmFja3VwXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGJhY2t1cElkIC0gQmFja3VwIElEIHRvIGRlbGV0ZVxuICAgICAqIEByZXR1cm5zIHtQcm9taXNlPE9iamVjdD59IERlbGV0ZSBvcGVyYXRpb24gcmVzdWx0XG4gICAgICovXG4gICAgYXN5bmMgZGVsZXRlQmFja3VwKGJhY2t1cElkKSB7XG4gICAgICAgIHJldHVybiBhd2FpdCB0aGlzLnJlcXVlc3QoYC9iYWNrdXBzLyR7YmFja3VwSWR9YCwgeyBtZXRob2Q6ICdERUxFVEUnIH0pO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIE9wdGltaXplIGRhdGFiYXNlXG4gICAgICogQHJldHVybnMge1Byb21pc2U8T2JqZWN0Pn0gT3B0aW1pemF0aW9uIHJlc3VsdFxuICAgICAqL1xuICAgIGFzeW5jIG9wdGltaXplRGF0YWJhc2UoKSB7XG4gICAgICAgIHJldHVybiBhd2FpdCB0aGlzLnJlcXVlc3QoJy9kYXRhYmFzZS9vcHRpbWl6ZScsIHsgbWV0aG9kOiAnUE9TVCcgfSk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogUmVidWlsZCBkYXRhYmFzZSBpbmRleGVzXG4gICAgICogQHJldHVybnMge1Byb21pc2U8T2JqZWN0Pn0gUmVidWlsZCBvcGVyYXRpb24gcmVzdWx0XG4gICAgICovXG4gICAgYXN5bmMgcmVidWlsZEluZGV4ZXMoKSB7XG4gICAgICAgIHJldHVybiBhd2FpdCB0aGlzLnJlcXVlc3QoJy9kYXRhYmFzZS9yZWJ1aWxkLWluZGV4ZXMnLCB7IG1ldGhvZDogJ1BPU1QnIH0pO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIENsZWFudXAgb3JwaGFuZWQgcmVjb3Jkc1xuICAgICAqIEByZXR1cm5zIHtQcm9taXNlPE9iamVjdD59IENsZWFudXAgb3BlcmF0aW9uIHJlc3VsdFxuICAgICAqL1xuICAgIGFzeW5jIGNsZWFudXBPcnBoYW5lZCgpIHtcbiAgICAgICAgcmV0dXJuIGF3YWl0IHRoaXMucmVxdWVzdCgnL2RhdGFiYXNlL2NsZWFudXAtb3JwaGFuZWQnLCB7IG1ldGhvZDogJ1BPU1QnIH0pO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFZhbGlkYXRlIGRhdGFiYXNlIGludGVncml0eVxuICAgICAqIEByZXR1cm5zIHtQcm9taXNlPE9iamVjdD59IFZhbGlkYXRpb24gcmVzdWx0XG4gICAgICovXG4gICAgYXN5bmMgdmFsaWRhdGVEYXRhYmFzZSgpIHtcbiAgICAgICAgcmV0dXJuIGF3YWl0IHRoaXMucmVxdWVzdCgnL2RhdGFiYXNlL3ZhbGlkYXRlJywgeyBtZXRob2Q6ICdQT1NUJyB9KTtcbiAgICB9XG5cbiAgICAvLyBDb25maWd1cmF0aW9uIE1hbmFnZW1lbnRcbiAgICAvKipcbiAgICAgKiBHZXQgc3lzdGVtIGNvbmZpZ3VyYXRpb25cbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxPYmplY3Q+fSBDb25maWd1cmF0aW9uIGRhdGFcbiAgICAgKi9cbiAgICBhc3luYyBnZXRDb25maWd1cmF0aW9uKCkge1xuICAgICAgICByZXR1cm4gYXdhaXQgdGhpcy5yZXF1ZXN0KCcvY29uZmlnJyk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogVXBkYXRlIHN5c3RlbSBjb25maWd1cmF0aW9uXG4gICAgICogQHBhcmFtIHtPYmplY3R9IGNvbmZpZyAtIENvbmZpZ3VyYXRpb24gb2JqZWN0IHRvIHVwZGF0ZVxuICAgICAqIEByZXR1cm5zIHtQcm9taXNlPE9iamVjdD59IFVwZGF0ZSByZXN1bHRcbiAgICAgKi9cbiAgICBhc3luYyB1cGRhdGVDb25maWd1cmF0aW9uKGNvbmZpZykge1xuICAgICAgICByZXR1cm4gYXdhaXQgdGhpcy5yZXF1ZXN0KCcvY29uZmlnJywge1xuICAgICAgICAgICAgbWV0aG9kOiAnUFVUJyxcbiAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KGNvbmZpZylcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgLy8gTG9ncyBNYW5hZ2VtZW50XG4gICAgLyoqXG4gICAgICogR2V0IHN5c3RlbSBsb2dzXG4gICAgICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnMgLSBRdWVyeSBvcHRpb25zIChsaW1pdCwgbGV2ZWwsIHNvdXJjZSlcbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxBcnJheT59IEFycmF5IG9mIGxvZyBlbnRyaWVzXG4gICAgICovXG4gICAgYXN5bmMgZ2V0TG9ncyhvcHRpb25zID0ge30pIHtcbiAgICAgICAgY29uc3QgcGFyYW1zID0gbmV3IFVSTFNlYXJjaFBhcmFtcygpO1xuICAgICAgICBcbiAgICAgICAgaWYgKG9wdGlvbnMubGltaXQpIHBhcmFtcy5hcHBlbmQoJ2xpbWl0Jywgb3B0aW9ucy5saW1pdCk7XG4gICAgICAgIGlmIChvcHRpb25zLmxldmVsICYmIG9wdGlvbnMubGV2ZWwgIT09ICdhbGwnKSBwYXJhbXMuYXBwZW5kKCdsZXZlbCcsIG9wdGlvbnMubGV2ZWwpO1xuICAgICAgICBpZiAob3B0aW9ucy5zb3VyY2UgJiYgb3B0aW9ucy5zb3VyY2UgIT09ICdhbGwnKSBwYXJhbXMuYXBwZW5kKCdzb3VyY2UnLCBvcHRpb25zLnNvdXJjZSk7XG4gICAgICAgIFxuICAgICAgICBjb25zdCBxdWVyeVN0cmluZyA9IHBhcmFtcy50b1N0cmluZygpO1xuICAgICAgICBjb25zdCBlbmRwb2ludCA9IHF1ZXJ5U3RyaW5nID8gYC9sb2dzPyR7cXVlcnlTdHJpbmd9YCA6ICcvbG9ncyc7XG4gICAgICAgIFxuICAgICAgICByZXR1cm4gYXdhaXQgdGhpcy5yZXF1ZXN0KGVuZHBvaW50KTtcbiAgICB9XG5cbiAgICAvLyBCYWNrdXAgTWFuYWdlbWVudFxuICAgIC8qKlxuICAgICAqIEdldCByZWNlbnQgYmFja3Vwc1xuICAgICAqIEByZXR1cm5zIHtQcm9taXNlPEFycmF5Pn0gQXJyYXkgb2YgYmFja3VwIG9iamVjdHNcbiAgICAgKi9cbiAgICBhc3luYyBnZXRSZWNlbnRCYWNrdXBzKCkge1xuICAgICAgICByZXR1cm4gYXdhaXQgdGhpcy5yZXF1ZXN0KCcvYmFja3VwcycpO1xuICAgIH1cblxuICAgIC8vIEhlYWx0aCBhbmQgTW9uaXRvcmluZ1xuICAgIC8qKlxuICAgICAqIEdldCBjb21wcmVoZW5zaXZlIGhlYWx0aCByZXBvcnRcbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxPYmplY3Q+fSBIZWFsdGggcmVwb3J0IGRhdGFcbiAgICAgKi9cbiAgICBhc3luYyBnZXRIZWFsdGhSZXBvcnQoKSB7XG4gICAgICAgIHJldHVybiBhd2FpdCB0aGlzLnJlcXVlc3QoJy9oZWFsdGgvcmVwb3J0Jyk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQ2hlY2sgc3BlY2lmaWMgc3lzdGVtIGNvbXBvbmVudCBoZWFsdGhcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gY29tcG9uZW50IC0gQ29tcG9uZW50IHRvIGNoZWNrIChkYXRhYmFzZSwgd29ya2Vycywgc3RvcmFnZSwgZXRjLilcbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxPYmplY3Q+fSBDb21wb25lbnQgaGVhbHRoIHN0YXR1c1xuICAgICAqL1xuICAgIGFzeW5jIGNoZWNrQ29tcG9uZW50SGVhbHRoKGNvbXBvbmVudCkge1xuICAgICAgICByZXR1cm4gYXdhaXQgdGhpcy5yZXF1ZXN0KGAvaGVhbHRoLyR7Y29tcG9uZW50fWApO1xuICAgIH1cbn1cblxuLy8gRXhwb3J0IHNpbmdsZXRvbiBpbnN0YW5jZVxuY29uc3Qgc3lzdGVtQWRtaW5BUEkgPSBuZXcgU3lzdGVtQWRtaW5BUEkoKTtcblxuLy8gTWFrZSBhdmFpbGFibGUgZ2xvYmFsbHkgYW5kIGZvciBtb2R1bGUgZXhwb3J0XG5pZiAodHlwZW9mIG1vZHVsZSAhPT0gJ3VuZGVmaW5lZCcgJiYgbW9kdWxlLmV4cG9ydHMpIHtcbiAgICBtb2R1bGUuZXhwb3J0cyA9IHsgU3lzdGVtQWRtaW5BUEksIHN5c3RlbUFkbWluQVBJIH07XG59IGVsc2UgaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgd2luZG93LnN5c3RlbUFkbWluQVBJID0gc3lzdGVtQWRtaW5BUEk7XG4gICAgd2luZG93LlN5c3RlbUFkbWluQVBJID0gU3lzdGVtQWRtaW5BUEk7XG59XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFlWTtJQUFBQSxjQUFBLFlBQUFBLENBQUE7TUFBQSxPQUFBQyxjQUFBO0lBQUE7RUFBQTtFQUFBLE9BQUFBLGNBQUE7QUFBQTtBQUFBRCxjQUFBO0FBZlo7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLE1BQU1FLGNBQWMsQ0FBQztFQUNqQkMsV0FBV0EsQ0FBQSxFQUFHO0lBQUE7SUFBQUgsY0FBQSxHQUFBSSxDQUFBO0lBQUFKLGNBQUEsR0FBQUssQ0FBQTtJQUNWLElBQUksQ0FBQ0MsT0FBTyxHQUFHLGVB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QUFLLENBQUE7SUFDckIsT0FBTyxNQUFNLElBQUksQ0FBQ0UsT0FBTyxDQUFDLFVBQVUsQ0FBQztFQUN6Qzs7RUFFQTtFQUNBO0FBQ0o7QUFDQTtBQUNBO0VBQ0ksTUFBTTJELGVBQWVBLENBQUEsRUFBRztJQUFBO0lBQUFsRSxjQUFBLEdBQUFJLENBQUE7SUFBQUosY0FBQSxHQUFBSyxDQUFBO0lBQ3BCLE9BQU8sTUFBTSxJQUFJLENBQUNFLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQztFQUMvQzs7RUFFQTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0VBQ0ksTUFBTTRELG9CQUFvQkEsQ0FBQ0MsU0FBUyxFQUFFO0lBQUE7SUFBQXBFLGNBQUEsR0FBQUksQ0FBQTtJQUFBSixjQUFBLEdBQUFLLENBQUE7SUFDbEMsT0FBTyxNQUFNLElBQUksQ0FBQ0UsT0FBTyxDQUFDLFdBQVc2RCxTQUFTLEVBQUUsQ0FBQztFQUNyRDtBQUNKOztBQUVBO0FBQ0EsTUFBTUMsY0FBYztBQUFBO0FBQUEsQ0FBQXJFLGNBQUEsR0FBQUssQ0FBQSxRQUFHLElBQUlILGNBQWMsQ0FBQyxDQUFDOztBQUUzQztBQUFBO0FBQUFGLGNBQUEsR0FBQUssQ0FBQTtBQUNBO0FBQUk7QUFBQSxDQUFBTCxjQUFBLEdBQUFVLENBQUEsa0JBQU80RCxNQUFNLEtBQUssV0FBVztBQUFBO0FBQUEsQ0FBQXRFLGNBQUEsR0FBQVUsQ0FBQSxXQUFJNEQsTUFBTSxDQUFDQyxPQUFPLEdBQUU7RUFBQTtFQUFBdkUsY0FBQSxHQUFBVSxDQUFBO0VBQUFWLGNBQUEsR0FBQUssQ0FBQTtFQUNqRGlFLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHO0lBQUVyRSxjQUFjO0lBQUVtRTtFQUFlLENBQUM7QUFDdkQsQ0FBQyxNQUFNO0VBQUE7RUFBQXJFLGNBQUEsR0FBQVUsQ0FBQTtFQUFBVixjQUFBLEdBQUFLLENBQUE7RUFBQSxJQUFJLE9BQU9vQixNQUFNLEtBQUssV0FBVyxFQUFFO0lBQUE7SUFBQXpCLGNBQUEsR0FBQVUsQ0FBQTtJQUFBVixjQUFBLEdBQUFLLENBQUE7SUFDdENvQixNQUFNLENBQUM0QyxjQUFjLEdBQUdBLGNBQWM7SUFBQztJQUFBckUsY0FBQSxHQUFBSyxDQUFBO0lBQ3ZDb0IsTUFBTSxDQUFDdkIsY0FBYyxHQUFHQSxjQUFjO0VBQzFDLENBQUM7RUFBQTtFQUFBO0lBQUFGLGNBQUEsR0FBQVUsQ0FBQTtFQUFBO0FBQUQiLCJpZ25vcmVMaXN0IjpbXX0=