{"version":3,"names":["cov_2i69aanh4l","actualCoverage","pwaOffline","s","init","callbacks","b","f","state","isOnline","navigator","onLine","queuedActions","loadQueuedActions","setupEventListeners","updateOnlineStatus","handleOnline","syncPendingActions","handleOffline","handleVisibilityChange","document","hidden","window","addEventListener","removeEventListener","onOnline","onOffline","dispatchEvent","CustomEvent","detail","timestamp","Date","now","createOfflineIndicator","options","message","className","indicator","createElement","id","innerHTML","toggleOfflineIndicator","show","getElementById","classList","remove","add","stored","localStorage","getItem","actions","JSON","parse","Array","isArray","error","saveQueuedActions","setItem","stringify","DevLogger","queueAction","action","queuedAction","generateActionId","retryCount","currentQueue","push","removeQueuedAction","actionId","updated","filter","length","actionsToSync","syncedActions","failedActions","success","executeAction","lastError","onSyncSuccess","onSyncFailure","synced","failed","remaining","url","type","response","fetch","ok","execute","Math","random","toString","substr","interceptFetch","queueHandler","originalFetch","method","Response","offline","queued","status","headers","getOfflineStatus","queuedActionsCount","lastOnlineTime","getLastOnlineTime","offlineDuration","getOfflineDuration","connectionType","getConnectionType","networkQuality","getNetworkQuality","lastOnline","parseInt","setLastOnlineTime","getTime","effectiveType","connection","downlink","rtt","saveData","clearQueuedActions","removeItem","getQueuedActionsSummary","summary","total","byType","oldestAction","newestAction","a","retryingActions","forEach","module","exports"],"sources":["offline.js"],"sourcesContent":["/**\n * PWA Manager - Offline Management Module\n * \n * Handles offline detection, action queuing, and background synchronization.\n */\n\n/**\n * Offline management and synchronization operations\n */\nconst pwaOffline = {\n    /**\n     * Initializes offline detection and management\n     */\n    init(callbacks = {}) {\n        const state = {\n            isOnline: navigator.onLine,\n            queuedActions: this.loadQueuedActions(),\n            callbacks\n        };\n        \n        this.setupEventListeners(state);\n        this.updateOnlineStatus(state.isOnline, callbacks);\n        \n        return state;\n    },\n    \n    /**\n     * Sets up online/offline event listeners\n     */\n    setupEventListeners(state) {\n        const handleOnline = () => {\n            state.isOnline = true;\n            this.updateOnlineStatus(true, state.callbacks);\n            this.syncPendingActions(state);\n        };\n        \n        const handleOffline = () => {\n            state.isOnline = false;\n            this.updateOnlineStatus(false, state.callbacks);\n        };\n        \n        const handleVisibilityChange = () => {\n            if (!document.hidden && state.isOnline) {\n                this.syncPendingActions(state);\n            }\n        };\n        \n        window.addEventListener('online', handleOnline);\n        window.addEventListener('offline', handleOffline);\n        document.addEventListener('visibilitychange', handleVisibilityChange);\n        \n        // Return cleanup function\n        return () => {\n            window.removeEventListener('online', handleOnline);\n            window.removeEventListener('offline', handleOffline);\n            document.removeEventListener('visibilitychange', handleVisibilityChange);\n        };\n    },\n    \n    /**\n     * Updates online status and triggers callbacks\n     */\n    updateOnlineStatus(isOnline, callbacks = {}) {\n        if (isOnline) {\n            if (callbacks.onOnline) callbacks.onOnline();\n        } else {\n            if (callbacks.onOffline) callbacks.onOffline();\n        }\n        \n        // Dispatch custom event\n        window.dispatchEvent(new CustomEvent('pwa-connection-change', {\n            detail: { isOnline, timestamp: Date.now() }\n        }));\n    },\n    \n    /**\n     * Creates offline indicator UI\n     */\n    createOfflineIndicator(options = {}) {\n        const {\n            message = \"You're offline. Some features may be limited.\",\n            className = 'pwa-offline-indicator'\n        } = options;\n        \n        const indicator = document.createElement('div');\n        indicator.id = 'offline-indicator';\n        indicator.className = `${className} fixed top-0 left-0 right-0 bg-yellow-500 text-white text-center py-2 text-sm font-medium transform -translate-y-full transition-transform duration-300 z-50`;\n        \n        indicator.innerHTML = `\n            <div class=\"flex items-center justify-center space-x-2\">\n                <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L4.082 16.5c-.77.833.192 2.5 1.732 2.5z\"></path>\n                </svg>\n                <span>${message}</span>\n            </div>\n        `;\n        \n        return indicator;\n    },\n    \n    /**\n     * Shows/hides offline indicator\n     */\n    toggleOfflineIndicator(show) {\n        const indicator = document.getElementById('offline-indicator');\n        if (!indicator) return;\n        \n        if (show) {\n            indicator.classList.remove('-translate-y-full');\n        } else {\n            indicator.classList.add('-translate-y-full');\n        }\n    },\n    \n    /**\n     * Loads queued actions from storage\n     */\n    loadQueuedActions() {\n        try {\n            const stored = localStorage.getItem('pwa-queued-actions');\n            const actions = stored ? JSON.parse(stored) : [];\n            return Array.isArray(actions) ? actions : [];\n        } catch (error) {\n            return [];\n        }\n    },\n    \n    /**\n     * Saves queued actions to storage\n     */\n    saveQueuedActions(actions) {\n        try {\n            localStorage.setItem('pwa-queued-actions', JSON.stringify(actions));\n            return true;\n        } catch (error) {\n            if (window.DevLogger?.error) {\n                window.DevLogger.error('[PWA] Failed to save queued actions:', error);\n            }\n            return false;\n        }\n    },\n    \n    /**\n     * Queues an action for later execution\n     */\n    queueAction(action, state) {\n        const queuedAction = {\n            id: this.generateActionId(),\n            timestamp: Date.now(),\n            retryCount: 0,\n            ...action\n        };\n        \n        if (!state) {\n            // Standalone mode - load current queue\n            const currentQueue = this.loadQueuedActions();\n            currentQueue.push(queuedAction);\n            this.saveQueuedActions(currentQueue);\n            return queuedAction;\n        }\n        \n        state.queuedActions.push(queuedAction);\n        this.saveQueuedActions(state.queuedActions);\n        \n        return queuedAction;\n    },\n    \n    /**\n     * Removes an action from the queue\n     */\n    removeQueuedAction(actionId, state) {\n        if (!state) {\n            const currentQueue = this.loadQueuedActions();\n            const updated = currentQueue.filter(action => action.id !== actionId);\n            this.saveQueuedActions(updated);\n            return updated;\n        }\n        \n        state.queuedActions = state.queuedActions.filter(action => action.id !== actionId);\n        this.saveQueuedActions(state.queuedActions);\n        \n        return state.queuedActions;\n    },\n    \n    /**\n     * Syncs pending actions when online\n     */\n    async syncPendingActions(state, callbacks = {}) {\n        if (!state.isOnline || !state.queuedActions.length) return;\n        \n        const actionsToSync = [...state.queuedActions];\n        const syncedActions = [];\n        const failedActions = [];\n        \n        for (const action of actionsToSync) {\n            try {\n                const success = await this.executeAction(action);\n                \n                if (success) {\n                    syncedActions.push(action);\n                    this.removeQueuedAction(action.id, state);\n                } else {\n                    action.retryCount = (action.retryCount || 0) + 1;\n                    if (action.retryCount >= 3) {\n                        failedActions.push(action);\n                        this.removeQueuedAction(action.id, state);\n                    }\n                }\n                \n            } catch (error) {\n                action.retryCount = (action.retryCount || 0) + 1;\n                action.lastError = error.message;\n                \n                if (action.retryCount >= 3) {\n                    failedActions.push(action);\n                    this.removeQueuedAction(action.id, state);\n                }\n            }\n        }\n        \n        // Trigger callbacks\n        if (syncedActions.length > 0 && callbacks.onSyncSuccess) {\n            callbacks.onSyncSuccess(syncedActions);\n        }\n        \n        if (failedActions.length > 0 && callbacks.onSyncFailure) {\n            callbacks.onSyncFailure(failedActions);\n        }\n        \n        return {\n            synced: syncedActions.length,\n            failed: failedActions.length,\n            remaining: state.queuedActions.length\n        };\n    },\n    \n    /**\n     * Executes a queued action\n     */\n    async executeAction(action) {\n        const { url, options, type } = action;\n        \n        if (type === 'fetch') {\n            try {\n                const response = await fetch(url, options);\n                return response.ok;\n            } catch (error) {\n                return false;\n            }\n        }\n        \n        if (type === 'custom' && action.execute) {\n            try {\n                return await action.execute();\n            } catch (error) {\n                return false;\n            }\n        }\n        \n        return false;\n    },\n    \n    /**\n     * Generates a unique action ID\n     */\n    generateActionId() {\n        return `action_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n    },\n    \n    /**\n     * Intercepts fetch requests for offline handling\n     */\n    interceptFetch(isOnline, queueHandler) {\n        const originalFetch = window.fetch;\n        \n        window.fetch = async (url, options = {}) => {\n            try {\n                // Always attempt the request first\n                const response = await originalFetch(url, options);\n                \n                if (response.ok) {\n                    return response;\n                }\n                \n                // If request failed and we're offline, queue it\n                if (!isOnline && options.method && options.method !== 'GET') {\n                    queueHandler({ url, options, type: 'fetch' });\n                    \n                    return new Response(JSON.stringify({\n                        success: false,\n                        message: 'Action queued for when connection is restored',\n                        offline: true,\n                        queued: true\n                    }), {\n                        status: 202,\n                        headers: { 'Content-Type': 'application/json' }\n                    });\n                }\n                \n                return response;\n                \n            } catch (error) {\n                // If we're offline and this is a modifying request, queue it\n                if (!isOnline && options.method && options.method !== 'GET') {\n                    queueHandler({ url, options, type: 'fetch' });\n                    \n                    return new Response(JSON.stringify({\n                        success: false,\n                        message: 'Action queued for when connection is restored',\n                        offline: true,\n                        queued: true\n                    }), {\n                        status: 202,\n                        headers: { 'Content-Type': 'application/json' }\n                    });\n                }\n                \n                // For GET requests or when online, return offline response\n                return new Response(JSON.stringify({\n                    success: false,\n                    message: 'You are offline. Please check your connection.',\n                    offline: true\n                }), {\n                    status: 503,\n                    headers: { 'Content-Type': 'application/json' }\n                });\n            }\n        };\n        \n        // Return restore function\n        return () => {\n            window.fetch = originalFetch;\n        };\n    },\n    \n    /**\n     * Gets offline status information\n     */\n    getOfflineStatus(state) {\n        return {\n            isOnline: state ? state.isOnline : navigator.onLine,\n            queuedActionsCount: state ? state.queuedActions.length : this.loadQueuedActions().length,\n            lastOnlineTime: this.getLastOnlineTime(),\n            offlineDuration: this.getOfflineDuration(),\n            connectionType: this.getConnectionType(),\n            networkQuality: this.getNetworkQuality()\n        };\n    },\n    \n    /**\n     * Gets last known online time\n     */\n    getLastOnlineTime() {\n        const lastOnline = localStorage.getItem('pwa-last-online');\n        return lastOnline ? new Date(parseInt(lastOnline)) : null;\n    },\n    \n    /**\n     * Sets last online time\n     */\n    setLastOnlineTime() {\n        localStorage.setItem('pwa-last-online', Date.now().toString());\n    },\n    \n    /**\n     * Gets offline duration\n     */\n    getOfflineDuration() {\n        if (navigator.onLine) return 0;\n        \n        const lastOnline = this.getLastOnlineTime();\n        if (!lastOnline) return null;\n        \n        return Date.now() - lastOnline.getTime();\n    },\n    \n    /**\n     * Gets connection type if available\n     */\n    getConnectionType() {\n        if ('connection' in navigator) {\n            return {\n                effectiveType: navigator.connection.effectiveType,\n                type: navigator.connection.type,\n                downlink: navigator.connection.downlink,\n                rtt: navigator.connection.rtt,\n                saveData: navigator.connection.saveData\n            };\n        }\n        return null;\n    },\n    \n    /**\n     * Estimates network quality\n     */\n    getNetworkQuality() {\n        if (!('connection' in navigator)) return 'unknown';\n        \n        const connection = navigator.connection;\n        \n        if (connection.effectiveType === '4g' && connection.downlink > 10) {\n            return 'excellent';\n        } else if (connection.effectiveType === '4g' || connection.downlink > 5) {\n            return 'good';\n        } else if (connection.effectiveType === '3g' || connection.downlink > 1) {\n            return 'fair';\n        } else {\n            return 'poor';\n        }\n    },\n    \n    /**\n     * Clears all queued actions\n     */\n    clearQueuedActions(state) {\n        if (state) {\n            state.queuedActions = [];\n        }\n        \n        localStorage.removeItem('pwa-queued-actions');\n    },\n    \n    /**\n     * Gets queued actions summary\n     */\n    getQueuedActionsSummary(state) {\n        const actions = state ? state.queuedActions : this.loadQueuedActions();\n        \n        const summary = {\n            total: actions.length,\n            byType: {},\n            oldestAction: null,\n            newestAction: null,\n            failedActions: actions.filter(a => a.retryCount >= 3).length,\n            retryingActions: actions.filter(a => a.retryCount > 0 && a.retryCount < 3).length\n        };\n        \n        actions.forEach(action => {\n            const type = action.type || 'unknown';\n            summary.byType[type] = (summary.byType[type] || 0) + 1;\n            \n            if (!summary.oldestAction || action.timestamp < summary.oldestAction.timestamp) {\n                summary.oldestAction = action;\n            }\n            \n            if (!summary.newestAction || action.timestamp > summary.newestAction.timestamp) {\n                summary.newestAction = action;\n            }\n        });\n        \n        return summary;\n    }\n};\n\n// Export for use in other modules\nif (typeof module !== 'undefined' && module.exports) {\n    module.exports = { pwaOffline };\n} else if (typeof window !== 'undefined') {\n    window.pwaOffline = pwaOffline;\n}\n"],"mappingseY;IAAAA,cAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,cAAA;AAfZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAME,UAAU;AAAA;AAAA,CAAAF,cAAA,GAAAG,CAAA,OAAG;EACf;AACJ;AACA;EACIC,IAAIA,CAACC,SAAS;EAAA;EAAA,CAAAL,cAAA,GAAAM,CAAA,UAAG,CAAC,CAAC,GAAE;IAAA;IAAAN,cAAA,GAAAO,CAAA;IACjB,MAAMC,KAAK;IAAA;IAAA,CAAAR,cAAA,GAAAG,CAAA,OAAG;MACVM,QAAQ,EAAEC,SAAS,CAACC,MAAM;MAC1BC,aAAa,EAAE,IAAI,CAACC,iBAAiB,CAAC,CAAC;MACvCR;IACJ,CAAC;IAAC;IAAAL,cAAA,GAAAG,CAAA;IAEF,IAAI,CAACW,mBAAmB,CAACN,KAAK,CAAC;IAAC;IAAAR,cAAA,GAAAG,CAAA;IAChC,IAAI,CAACY,kBAAkB,CAACP,KAAK,CAACC,QAAQ,EAAEJ,SAAS,CAAC;IAAC;IAAAL,cAAA,GAAAG,CAAA;IAEnD,OAAOK,KAAK;EAChB,CAAC;EAED;AACJ;AACA;EACIM,mBAAmBA,CAACN,KAAK,EAAE;IAAA;IAAAR,cAAA,GAAAO,CAAA;IAAAP,cAAA,GAAAG,CAAA;IACvB,MAAMa,YAAY,GAAGA,CAAA,KAAM;MAAA;MAAAhB,cAAA,GAAAO,CAAA;MAAAP,cAAA,GAAAG,CAAA;MACvBK,KAAK,CAACC,QAAQ,GAAG,IAAI;MAAC;MAAAT,cAAA,GAAAG,CAAA;MACtB,IAAI,CAACY,kBAAkB,CAAC,IAAI,EAAEP,KAAK,CAACH,SAAS,CAAC;MAAC;MAAAL,cAAA,GAAAG,CAAA;MAC/C,IAAI,CAACc,kBAAkB,CAACT,KAAK,CAAC;IAClC,CAAC;IAAC;IAAAR,cAAA,GAAAG,CAAA;IAEF,MAAMe,aAAa,GAAGA,CAAA,KAAM;MAAA;MAAAlB,cAAA,GAAAO,CAAA;MAAAP,cAAA,GAAAG,CAAA;MACxBK,KAAK,CAACC,QAAQ,GAAG,KAAK;MAAC;MAAAT,cAAA,GAAAG,CAAA;MACvB,IAAI,CAACY,kBAAkB,CAAC,KAAK,EAAEP,KAAK,CAACH,SAAS,CAAC;IACnD,CAAC;IAAC;IAAAL,cAAA,GAAAG,CAAA;IAEF,MAAMgB,sBAAsB,GAAGA,CAAA,KAAM;MAAA;MAAAnB,cAAA,GAAAO,CAAA;MAAAP,cAAA,GAAAG,CAAA;MACjC;MAAI;MAAA,CAAAH,cAAA,GAAAM,CAAA,WAACc,QAAQ,CAACC,MAAM;MAAA;MAAA,CAAArB,cAAA,GAAAM,CAAA,UAAIE,KAAK,CAACC,QAAQ,GAAE;QAAA;QAAAT,cAAA,GAAAM,CAAA;QAAAN,cAAA,GAAAG,CAAA;QACpC,IAAI,CAACc,kBAAkB,CAACT,KAAK,CAAC;MAClC,CAAC;MAAA;MAAA;QAAAR,cAAA,GAAAM,CAAA;MAAA;IACL,CAAC;IAAC;IAAAN,cAAA,GAAAG,CAAA;IAEFmB,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAEP,YAAY,CAAC;IAAC;IAAAhB,cAAA,GAAAG,CAAA;IAChDmB,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEL,aAAa,CAAC;IAAC;IAAAlB,cAAA,GAAAG,CAAA;IAClDiB,QAAQ,CAACG,gBAAgB,CAAC,kBAAkB,EAAEJ,sBAAsB,CAAC;;IAErE;IAAA;IAAAnB,cAAA,GAAAG,CAAA;IACA,OAAO,MAAM;MAAA;MAAAH,cAAA,GAAAO,CAAA;MAAAP,cAAA,GAAAG,CAAA;MACTmB,MAAM,CAACE,mBAAmB,CAAC,QAAQ,EAAER,YAAY,CAAC;MAAC;MAAAhB,cAAA,GAAAG,CAAA;MACnDmB,MAAM,CAACE,mBAAmB,CAAC,SAAS,EAAEN,aAAa,CAAC;MAAC;MAAAlB,cAAA,GAAAG,CAAA;MACrDiB,QAAQ,CAACI,mBAAmB,CAAC,kBAAkB,EAAEL,sBAAsB,CAAC;IAC5E,CAAC;EACL,CAAC;EAED;AACJ;AACA;EACIJ,kBAAkBA,CAACN,QAAQ,EAAEJ,SAAS;EAAA;EAAA,CAAAL,cAAA,GAAAM,CAAA,UAAG,CAAC,CAAC,GAAE;IAAA;IAAAN,cAAA,GAAAO,CAAA;IAAAP,cAAA,GAAAG,CAAA;IACzC,IAAIM,QAAQ,EAAE;MAAA;MAAAT,cAAA,GAAAM,CAAA;MAAAN,cAAA,GAAAG,CAAA;MACV,IAAIE,SAAS,CAACoB,QAAQ,EAAE;QAAA;QAAAzB,cAAA,GAAAM,CAAA;QAAAN,cAAA,GAAAG,CAAA;QAAAE,SAAS,CAACoB,QAAQ,CAAC,CAAC;MAAA,CAAC;MAAA;MAAA;QAAAzB,cAAA,GAAAM,CAAA;MAAA;IACjD,CAAC,MAAM;MAAA;MAAAN,cAAA,GAAAM,CAAA;MAAAN,cAAA,GAAAG,CAAA;MACH,IAAIE,SAAS,CAACqB,SAAS,EAAE;QAAA;QAAA1B,cAAA,GAAAM,CAAA;QAAAN,cAAA,GAAAG,CAAA;QAAAE,SAAS,CAACqB,SAAS,CAAC,CAAC;MAAA,CAAC;MAAA;MAAA;QAAA1B,cAAA,GAAAM,CAAA;MAAA;IACnD;;IAEA;IAAA;IAAAN,cAAA,GAAAG,CAAA;IACAmB,MAAM,CAACK,aAAa,CAAC,IAAIC,WAAW,CAAC,uBAAuB,EAAE;MAC1DC,MAAM,EAAE;QAAEpB,QAAQ;QAAEqB,SAAS,EAAEC,IAAI,CAACC,GAAG,CAAC;MAAE;IAC9C,CAAC,CAAC,CAAC;EACP,CAAC;EAED;AACJ;AACA;EACIC,sBAAsBA,CAACC,OAAO;EAAA;EAAA,CAAAlC,cAAA,GAAAM,CAAA,UAAG,CAAC,CAAC,GAAE;IAAA;IAAAN,cAAA,GAAAO,CAAA;IACjC,MAAM;MACF4B,OAAO;MAAA;MAAA,CAAAnC,cAAA,GAAAM,CAAA,UAAG,+CAA+C;MACzD8B,SAAS;MAAA;MAAA,CAAApC,cAAA,GAAAM,CAAA,UAAG,uBAAuB;IACvC,CAAC;IAAA;IAAA,CAAAN,cAAA,GAAAG,CAAA,QAAG+B,OAAO;IAEX,MAAMG,SAAS;IAAA;IAAA,CAAArC,cAAA,GAAAG,CAAA,QAAGiB,QAAQ,CAACkB,aAAa,CAAC,KAAK,CAAC;IAAC;IAAAtC,cAAA,GAAAG,CAAA;IAChDkC,SAAS,CAACE,EAAE,GAAG,mBAAmB;IAAC;IAAAvC,cAAA,GAAAG,CAAA;IACnCkC,SAAS,CAACD,SAAS,GAAG,GAAGA,SAAS,8JAA8J;IAAC;IAAApC,cAAA,GAAAG,CAAA;IAEjMkC,SAAS,CAACG,SAAS,GAAG;AAC9B;AACA;AACA;AACA;AACA,wBAAwBL,OAAO;AAC/B;AACA,SAAS;IAAC;IAAAnC,cAAA,GAAAG,CAAA;IAEF,OAAOkC,SAAS;EACpB,CAAC;EAED;AACJ;AACA;EACII,sBAAsBA,CAACC,IAAI,EAAE;IAAA;IAAA1C,cAAA,GAAAO,CAAA;IACzB,MAAM8B,SAAS;IAAA;IAAA,CAAArC,cAAA,GAAAG,CAAA,QAAGiB,QAAQ,CAACuB,cAAc,CAAC,mBAAmB,CAAC;IAAC;IAAA3C,cAAA,GAAAG,CAAA;IAC/D,IAAI,CAACkC,SAAS,EAAE;MAAA;MAAArC,cAAA,GAAAM,CAAA;MAAAN,cAAA,GAAAG,CAAA;MAAA;IAAM,CAAC;IAAA;IAAA;MAAAH,cAAA,GAAAM,CAAA;IAAA;IAAAN,cAAA,GAAAG,CAAA;IAEvB,IAAIuC,IAAI,EAAE;MAAA;MAAA1C,cAAA,GAAAM,CAAA;MAAAN,cAAA,GAAAG,CAAA;MACNkC,SAAS,CAACO,SAAS,CAACC,MAAM,CAAC,mBAAmB,CAAC;IACnD,CAAC,MAAM;MAAA;MAAA7C,cAAA,GAAAM,CAAA;MAAAN,cAAA,GAAAG,CAAA;MACHkC,SAAS,CAACO,SAAS,CAACE,GAAG,CAAC,mBAAmB,CAAC;IAChD;EACJ,CAAC;EAED;AACJ;AACA;EACIjC,iBAAiBA,CAAA,EAAG;IAAA;IAAAb,cAAA,GAAAO,CAAA;IAAAP,cAAA,GAAAG,CAAA;IAChB,IAAI;MACA,MAAM4C,MAAM;MAAA;MAAA,CAAA/C,cAAA,GAAAG,CAAA,QAAG6C,YAAY,CAACC,OAAO,CAAC,oBAAoB,CAAC;MACzD,MAAMC,OAAO;MAAA;MAAA,CAAAlD,cAAA,GAAAG,CAAA,QAAG4C,MAAM;MAAA;MAAA,CAAA/C,cAAA,GAAAM,CAAA,WAAG6C,IAAI,CAACC,KAAK,CAACL,MAAM,CAAC;MAAA;MAAA,CAAA/C,cAAA,GAAAM,CAAA,WAAG,EAAE;MAAC;MAAAN,cAAA,GAAAG,CAAA;MACjD,OAAOkD,KAAK,CAACC,OAAO,CAACJ,OAAO,CAAC;MAAA;MAAA,CAAAlD,cAAA,GAAAM,CAAA,WAAG4C,OAAO;MAAA;MAAA,CAAAlD,cAAA,GAAAM,CAAA,WAAG,EAAE;IAChD,CAAC,CAAC,OAAOiD,KAAK,EAAE;MAAA;MAAAvD,cAAA,GAAAG,CAAA;MACZ,OAAO,EAAE;IACb;EACJ,CAAC;EAED;AACJ;AACA;EACIqD,iBAAiBA,CAACN,OAAO,EAAE;IAAA;IAAAlD,cAAA,GAAAO,CAAA;IAAAP,cAAA,GAAAG,CAAA;IACvB,IAAI;MAAA;MAAAH,cAAA,GAAAG,CAAA;MACA6C,YAAY,CAACS,OAAO,CAAC,oBAAoB,EAAEN,IAAI,CAACO,SAAS,CAACR,OAAO,CAAC,CAAC;MAAC;MAAAlD,cAAA,GAAAG,CAAA;MACpE,OAAO,IAAI;IACf,CAAC,CAAC,OAAOoD,KAAK,EAAE;MAAA;MAAAvD,cAAA,GAAAG,CAAA;MACZ,IAAImB,MAAM,CAACqC,SAAS,EAAEJ,KAAK,EAAE;QAAA;QAAAvD,cAAA,GAAAM,CAAA;QAAAN,cAAA,GAAAG,CAAA;QACzBmB,MAAM,CAACqC,SAAS,CAACJ,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;MACzE,CAAC;MAAA;MAAA;QAAAvD,cAAA,GAAAM,CAAA;MAAA;MAAAN,cAAA,GAAAG,CAAA;MACD,OAAO,KAAK;IAChB;EACJ,CAAC;EAED;AACJ;AACA;EACIyD,WAAWA,CAACC,MAAM,EAAErD,KAAK,EAAE;IAAA;IAAAR,cAAA,GAAAO,CAAA;IACvB,MAAMuD,YAAY;IAAA;IAAA,CAAA9D,cAAA,GAAAG,CAAA,QAAG;MACjBoC,EAAE,EAAE,IAAI,CAACwB,gBAAgB,CAAC,CAAC;MAC3BjC,SAAS,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;MACrBgC,UAAU,EAAE,CAAC;MACb,GAAGH;IACP,CAAC;IAAC;IAAA7D,cAAA,GAAAG,CAAA;IAEF,IAAI,CAACK,KAAK,EAAE;MAAA;MAAAR,cAAA,GAAAM,CAAA;MACR;MACA,MAAM2D,YAAY;MAAA;MAAA,CAAAjE,cAAA,GAAAG,CAAA,QAAG,IAAI,CAACU,iBAAiB,CAAC,CAAC;MAAC;MAAAb,cAAA,GAAAG,CAAA;MAC9C8D,YAAY,CAACC,IAAI,CAACJ,YAAY,CAAC;MAAC;MAAA9D,cAAA,GAAAG,CAAA;MAChC,IAAI,CAACqD,iBAAiB,CAACS,YAAY,CAAC;MAAC;MAAAjE,cAAA,GAAAG,CAAA;MACrC,OAAO2D,YAAY;IACvB,CAAC;IAAA;IAAA;MAAA9D,cAAA,GAAAM,CAAA;IAAA;IAAAN,cAAA,GAAAG,CAAA;IAEDK,KAAK,CAACI,aAAa,CAACsD,IAAI,CAACJ,YAAY,CAAC;IAAC;IAAA9D,cAAA,GAAAG,CAAA;IACvC,IAAI,CAACqD,iBAAiB,CAAChD,KAAK,CAACI,aAAa,CAAC;IAAC;IAAAZ,cAAA,GAAAG,CAAA;IAE5C,OAAO2D,YAAY;EACvB,CAAC;EAED;AACJ;AACA;EACIK,kBAAkBA,CAACC,QAAQ,EAAE5D,KAAK,EAAE;IAAA;IAAAR,cAAA,GAAAO,CAAA;IAAAP,cAAA,GAAAG,CAAA;IAChC,IAAI,CAACK,KAAK,EAAE;MAAA;MAAAR,cAAA,GAAAM,CAAA;MACR,MAAM2D,YAAY;MAAA;MAAA,CAAAjE,cAAA,GAAAG,CAAA,QAAG,IAAI,CAACU,iBAAiB,CAAC,CAAC;MAC7C,MAAMwD,OAAO;MAAA;MAAA,CAAArE,cAAA,GAAAG,CAAA,QAAG8D,YAAY,CAACK,MAAM,CAACT,MAAM,IAAI;QAAA;QAAA7D,cAAA,GAAAO,CAAA;QAAAP,cAAA,GAAAG,CAAA;QAAA,OAAA0D,MAAM,CAACtB,EAAE,KAAK6B,QAAQ;MAAD,CAAC,CAAC;MAAC;MAAApE,cAAA,GAAAG,CAAA;MACtE,IAAI,CAACqD,iBAAiB,CAACa,OAAO,CAAC;MAAC;MAAArE,cAAA,GAAAG,CAAA;MAChC,OAAOkE,OAAO;IAClB,CAAC;IAAA;IAAA;MAAArE,cAAA,GAAAM,CAAA;IAAA;IAAAN,cAAA,GAAAG,CAAA;IAEDK,KAAK,CAACI,aAAa,GAAGJ,KAAK,CAACI,aAAa,CAAC0D,MAAM,CAACT,MAAM,IAAI;MAAA;MAAA7D,cAAA,GAAAO,CAAA;MAAAP,cAAA,GAAAG,CAAA;MAAA,OAAA0D,MAAM,CAACtB,EAAE,KAAK6B,QAAQ;IAAD,CAAC,CAAC;IAAC;IAAApE,cAAA,GAAAG,CAAA;IACnF,IAAI,CAACqD,iBAAiB,CAAChD,KAAK,CAACI,aAAa,CAAC;IAAC;IAAAZ,cAAA,GAAAG,CAAA;IAE5C,OAAOK,KAAK,CAACI,aAAa;EAC9B,CAAC;EAED;AACJ;AACA;EACI,MAAMK,kBAAkBA,CAACT,KAAK,EAAEH,SAAS;EAAA;EAAA,CAAAL,cAAA,GAAAM,CAAA,WAAG,CAAC,CAAC,GAAE;IAAA;IAAAN,cAAA,GAAAO,CAAA;IAAAP,cAAA,GAAAG,CAAA;IAC5C;IAAI;IAAA,CAAAH,cAAA,GAAAM,CAAA,YAACE,KAAK,CAACC,QAAQ;IAAA;IAAA,CAAAT,cAAA,GAAAM,CAAA,WAAI,CAACE,KAAK,CAACI,aAAa,CAAC2D,MAAM,GAAE;MAAA;MAAAvE,cAAA,GAAAM,CAAA;MAAAN,cAAA,GAAAG,CAAA;MAAA;IAAM,CAAC;IAAA;IAAA;MAAAH,cAAA,GAAAM,CAAA;IAAA;IAE3D,MAAMkE,aAAa;IAAA;IAAA,CAAAxE,cAAA,GAAAG,CAAA,QAAG,CAAC,GAAGK,KAAK,CAACI,aAAa,CAAC;IAC9C,MAAM6D,aAAa;IAAA;IAAA,CAAAzE,cAAA,GAAAG,CAAA,QAAG,EAAE;IACxB,MAAMuE,aAAa;IAAA;IAAA,CAAA1E,cAAA,GAAAG,CAAA,QAAG,EAAE;IAAC;IAAAH,cAAA,GAAAG,CAAA;IAEzB,KAAK,MAAM0D,MAAM,IAAIW,aAAa,EAAE;MAAA;MAAAxE,cAAA,GAAAG,CAAA;MAChC,IAAI;QACA,MAAMwE,OAAO;QAAA;QAAA,CAAA3E,cAAA,GAAAG,CAAA,QAAG,MAAM,IAAI,CAACyE,aAAa,CAACf,MAAM,CAAC;QAAC;QAAA7D,cAAA,GAAAG,CAAA;QAEjD,IAAIwE,OAAO,EAAE;UAAA;UAAA3E,cAAA,GAAAM,CAAA;UAAAN,cAAA,GAAAG,CAAA;UACTsE,aAAa,CAACP,IAAI,CAACL,MAAM,CAAC;UAAC;UAAA7D,cAAA,GAAAG,CAAA;UAC3B,IAAI,CAACgE,kBAAkB,CAACN,MAAM,CAACtB,EAAE,EAAE/B,KAAK,CAAC;QAC7C,CAAC,MAAM;UAAA;UAAAR,cAAA,GAAAM,CAAA;UAAAN,cAAA,GAAAG,CAAA;UACH0D,MAAM,CAACG,UAAU,GAAG;UAAC;UAAA,CAAAhE,cAAA,GAAAM,CAAA,WAAAuD,MAAM,CAACG,UAAU;UAAA;UAAA,CAAAhE,cAAA,GAAAM,CAAA,WAAI,CAAC,KAAI,CAAC;UAAC;UAAAN,cAAA,GAAAG,CAAA;UACjD,IAAI0D,MAAM,CAACG,UAAU,IAAI,CAAC,EAAE;YAAA;YAAAhE,cAAA,GAAAM,CAAA;YAAAN,cAAA,GAAAG,CAAA;YACxBuE,aAAa,CAACR,IAAI,CAACL,MAAM,CAAC;YAAC;YAAA7D,cAAA,GAAAG,CAAA;YAC3B,IAAI,CAACgE,kBAAkB,CAACN,MAAM,CAACtB,EAAE,EAAE/B,KAAK,CAAC;UAC7C,CAAC;UAAA;UAAA;YAAAR,cAAA,GAAAM,CAAA;UAAA;QACL;MAEJ,CAAC,CAAC,OAAOiD,KAAK,EAAE;QAAA;QAAAvD,cAAA,GAAAG,CAAA;QACZ0D,MAAM,CAACG,UAAU,GAAG;QAAC;QAAA,CAAAhE,cAAA,GAAAM,CAAA,WAAAuD,MAAM,CAACG,UAAU;QAAA;QAAA,CAAAhE,cAAA,GAAAM,CAAA,WAAI,CAAC,KAAI,CAAC;QAAC;QAAAN,cAAA,GAAAG,CAAA;QACjD0D,MAAM,CAACgB,SAAS,GAAGtB,KAAK,CAACpB,OAAO;QAAC;QAAAnC,cAAA,GAAAG,CAAA;QAEjC,IAAI0D,MAAM,CAACG,UAAU,IAAI,CAAC,EAAE;UAAA;UAAAhE,cAAA,GAAAM,CAAA;UAAAN,cAAA,GAAAG,CAAA;UACxBuE,aAAa,CAACR,IAAI,CAACL,MAAM,CAAC;UAAC;UAAA7D,cAAA,GAAAG,CAAA;UAC3B,IAAI,CAACgE,kBAAkB,CAACN,MAAM,CAACtB,EAAE,EAAE/B,KAAK,CAAC;QAC7C,CAAC;QAAA;QAAA;UAAAR,cAAA,GAAAM,CAAA;QAAA;MACL;IACJ;;IAEA;IAAA;IAAAN,cAAA,GAAAG,CAAA;IACA;IAAI;IAAA,CAAAH,cAAA,GAAAM,CAAA,WAAAmE,aAAa,CAACF,MAAM,GAAG,CAAC;IAAA;IAAA,CAAAvE,cAAA,GAAAM,CAAA,WAAID,SAAS,CAACyE,aAAa,GAAE;MAAA;MAAA9E,cAAA,GAAAM,CAAA;MAAAN,cAAA,GAAAG,CAAA;MACrDE,SAAS,CAACyE,aAAa,CAACL,aAAa,CAAC;IAC1C,CAAC;IAAA;IAAA;MAAAzE,cAAA,GAAAM,CAAA;IAAA;IAAAN,cAAA,GAAAG,CAAA;IAED;IAAI;IAAA,CAAAH,cAAA,GAAAM,CAAA,WAAAoE,aAAa,CAACH,MAAM,GAAG,CAAC;IAAA;IAAA,CAAAvE,cAAA,GAAAM,CAAA,WAAID,SAAS,CAAC0E,aAAa,GAAE;MAAA;MAAA/E,cAAA,GAAAM,CAAA;MAAAN,cAAA,GAAAG,CAAA;MACrDE,SAAS,CAAC0E,aAAa,CAACL,aAAa,CAAC;IAC1C,CAAC;IAAA;IAAA;MAAA1E,cAAA,GAAAM,CAAA;IAAA;IAAAN,cAAA,GAAAG,CAAA;IAED,OAAO;MACH6E,MAAM,EAAEP,aAAa,CAACF,MAAM;MAC5BU,MAAM,EAAEP,aAAa,CAACH,MAAM;MAC5BW,SAAS,EAAE1E,KAAK,CAACI,aAAa,CAAC2D;IACnC,CAAC;EACL,CAAC;EAED;AACJ;AACA;EACI,MAAMK,aAAaA,CAACf,MAAM,EAAE;IAAA;IAAA7D,cAAA,GAAAO,CAAA;IACxB,MAAM;MAAE4E,GAAG;MAAEjD,OAAO;MAAEkD;IAAK,CAAC;IAAA;IAAA,CAAApF,cAAA,GAAAG,CAAA,QAAG0D,MAAM;IAAC;IAAA7D,cAAA,GAAAG,CAAA;IAEtC,IAAIiF,IAAI,KAAK,OAAO,EAAE;MAAA;MAAApF,cAAA,GAAAM,CAAA;MAAAN,cAAA,GAAAG,CAAA;MAClB,IAAI;QACA,MAAMkF,QAAQ;QAAA;QAAA,CAAArF,cAAA,GAAAG,CAAA,QAAG,MAAMmF,KAAK,CAACH,GAAG,EAAEjD,OAAO,CAAC;QAAC;QAAAlC,cAAA,GAAAG,CAAA;QAC3C,OAAOkF,QAAQ,CAACE,EAAE;MACtB,CAAC,CAAC,OAAOhC,KAAK,EAAE;QAAA;QAAAvD,cAAA,GAAAG,CAAA;QACZ,OAAO,KAAK;MAChB;IACJ,CAAC;IAAA;IAAA;MAAAH,cAAA,GAAAM,CAAA;IAAA;IAAAN,cAAA,GAAAG,CAAA;IAED;IAAI;IAAA,CAAAH,cAAA,GAAAM,CAAA,WAAA8E,IAAI,KAAK,QAAQ;IAAA;IAAA,CAAApF,cAAA,GAAAM,CAAA,WAAIuD,MAAM,CAAC2B,OAAO,GAAE;MAAA;MAAAxF,cAAA,GAAAM,CAAA;MAAAN,cAAA,GAAAG,CAAA;MACrC,IAAI;QAAA;QAAAH,cAAA,GAAAG,CAAA;QACA,OAAO,MAAM0D,MAAM,CAAC2B,OAAO,CAAC,CAAC;MACjC,CAAC,CAAC,OAAOjC,KAAK,EAAE;QAAA;QAAAvD,cAAA,GAAAG,CAAA;QACZ,OAAO,KAAK;MAChB;IACJ,CAAC;IAAA;IAAA;MAAAH,cAAA,GAAAM,CAAA;IAAA;IAAAN,cAAA,GAAAG,CAAA;IAED,OAAO,KAAK;EAChB,CAAC;EAED;AACJ;AACA;EACI4D,gBAAgBA,CAAA,EAAG;IAAA;IAAA/D,cAAA,GAAAO,CAAA;IAAAP,cAAA,GAAAG,CAAA;IACf,OAAO,UAAU4B,IAAI,CAACC,GAAG,CAAC,CAAC,IAAIyD,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;EAC5E,CAAC;EAED;AACJ;AACA;EACIC,cAAcA,CAACpF,QAAQ,EAAEqF,YAAY,EAAE;IAAA;IAAA9F,cAAA,GAAAO,CAAA;IACnC,MAAMwF,aAAa;IAAA;IAAA,CAAA/F,cAAA,GAAAG,CAAA,SAAGmB,MAAM,CAACgE,KAAK;IAAC;IAAAtF,cAAA,GAAAG,CAAA;IAEnCmB,MAAM,CAACgE,KAAK,GAAG,OAAOH,GAAG,EAAEjD,OAAO;IAAA;IAAA,CAAAlC,cAAA,GAAAM,CAAA,WAAG,CAAC,CAAC,MAAK;MAAA;MAAAN,cAAA,GAAAO,CAAA;MAAAP,cAAA,GAAAG,CAAA;MACxC,IAAI;QACA;QACA,MAAMkF,QAAQ;QAAA;QAAA,CAAArF,cAAA,GAAAG,CAAA,SAAG,MAAM4F,aAAa,CAACZ,GAAG,EAAEjD,OAAO,CAAC;QAAC;QAAAlC,cAAA,GAAAG,CAAA;QAEnD,IAAIkF,QAAQ,CAACE,EAAE,EAAE;UAAA;UAAAvF,cAAA,GAAAM,CAAA;UAAAN,cAAA,GAAAG,CAAA;UACb,OAAOkF,QAAQ;QACnB,CAAC;QAAA;QAAA;UAAArF,cAAA,GAAAM,CAAA;QAAA;;QAED;QAAAN,cAAA,GAAAG,CAAA;QACA;QAAI;QAAA,CAAAH,cAAA,GAAAM,CAAA,YAACG,QAAQ;QAAA;QAAA,CAAAT,cAAA,GAAAM,CAAA,WAAI4B,OAAO,CAAC8D,MAAM;QAAA;QAAA,CAAAhG,cAAA,GAAAM,CAAA,WAAI4B,OAAO,CAAC8D,MAAM,KAAK,KAAK,GAAE;UAAA;UAAAhG,cAAA,GAAAM,CAAA;UAAAN,cAAA,GAAAG,CAAA;UACzD2F,YAAY,CAAC;YAAEX,GAAG;YAAEjD,OAAO;YAAEkD,IAAI,EAAE;UAAQ,CAAC,CAAC;UAAC;UAAApF,cAAA,GAAAG,CAAA;UAE9C,OAAO,IAAI8F,QAAQ,CAAC9C,IAAI,CAACO,SAAS,CAAC;YAC/BiB,OAAO,EAAE,KAAK;YACdxC,OAAO,EAAE,+CAA+C;YACxD+D,OAAO,EAAE,IAAI;YACbC,MAAM,EAAE;UACZ,CAAC,CAAC,EAAE;YACAC,MAAM,EAAE,GAAG;YACXC,OAAO,EAAE;cAAE,cAAc,EAAE;YAAmB;UAClD,CAAC,CAAC;QACN,CAAC;QAAA;QAAA;UAAArG,cAAA,GAAAM,CAAA;QAAA;QAAAN,cAAA,GAAAG,CAAA;QAED,OAAOkF,QAAQ;MAEnB,CAAC,CAAC,OAAO9B,KAAK,EAAE;QAAA;QAAAvD,cAAA,GAAAG,CAAA;QACZ;QACA;QAAI;QAAA,CAAAH,cAAA,GAAAM,CAAA,YAACG,QAAQ;QAAA;QAAA,CAAAT,cAAA,GAAAM,CAAA,WAAI4B,OAAO,CAAC8D,MAAM;QAAA;QAAA,CAAAhG,cAAA,GAAAM,CAAA,WAAI4B,OAAO,CAAC8D,MAAM,KAAK,KAAK,GAAE;UAAA;UAAAhG,cAAA,GAAAM,CAAA;UAAAN,cAAA,GAAAG,CAAA;UACzD2F,YAAY,CAAC;YAAEX,GAAG;YAAEjD,OAAO;YAAEkD,IAAI,EAAE;UAAQ,CAAC,CAAC;UAAC;UAAApF,cAAA,GAAAG,CAAA;UAE9C,OAAO,IAAI8F,QAAQ,CAAC9C,IAAI,CAACO,SAAS,CAAC;YAC/BiB,OAAO,EAAE,KAAK;YACdxC,OAAO,EAAE,+CAA+C;YACxD+D,OAAO,EAAE,IAAI;YACbC,MAAM,EAAE;UACZ,CAAC,CAAC,EAAE;YACAC,MAAM,EAAE,GAAG;YACXC,OAAO,EAAE;cAAE,cAAc,EAAE;YAAmB;UAClD,CAAC,CAAC;QACN,CAAC;QAAA;QAAA;UAAArG,cAAA,GAAAM,CAAA;QAAA;;QAED;QAAAN,cAAA,GAAAG,CAAA;QACA,OAAO,IAAI8F,QAAQ,CAAC9C,IAAI,CAACO,SAAS,CAAC;UAC/BiB,OAAO,EAAE,KAAK;UACdxC,OAAO,EAAE,gDAAgD;UACzD+D,OAAO,EAAE;QACb,CAAC,CAAC,EAAE;UACAE,MAAM,EAAE,GAAG;UACXC,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB;QAClD,CAAC,CAAC;MACN;IACJ,CAAC;;IAED;IAAA;IAAArG,cAAA,GAAAG,CAAA;IACA,OAAO,MAAM;MAAA;MAAAH,cAAA,GAAAO,CAAA;MAAAP,cAAA,GAAAG,CAAA;MACTmB,MAAM,CAACgE,KAAK,GAAGS,aAAa;IAChC,CAAC;EACL,CAAC;EAED;AACJ;AACA;EACIO,gBAAgBA,CAAC9F,KAAK,EAAE;IAAA;IAAAR,cAAA,GAAAO,CAAA;IAAAP,cAAA,GAAAG,CAAA;IACpB,OAAO;MACHM,QAAQ,EAAED,KAAK;MAAA;MAAA,CAAAR,cAAA,GAAAM,CAAA,WAAGE,KAAK,CAACC,QAAQ;MAAA;MAAA,CAAAT,cAAA,GAAAM,CAAA,WAAGI,SAAS,CAACC,MAAM;MACnD4F,kBAAkB,EAAE/F,KAAK;MAAA;MAAA,CAAAR,cAAA,GAAAM,CAAA,WAAGE,KAAK,CAACI,aAAa,CAAC2D,MAAM;MAAA;MAAA,CAAAvE,cAAA,GAAAM,CAAA,WAAG,IAAI,CAACO,iBAAiB,CAAC,CAAC,CAAC0D,MAAM;MACxFiC,cAAc,EAAE,IAAI,CAACC,iBAAiB,CAAC,CAAC;MACxCC,eAAe,EAAE,IAAI,CAACC,kBAAkB,CAAC,CAAC;MAC1CC,cAAc,EAAE,IAAI,CAACC,iBAAiB,CAAC,CAAC;MACxCC,cAAc,EAAE,IAAI,CAACC,iBAAiB,CAAC;IAC3C,CAAC;EACL,CAAC;EAED;AACJ;AACA;EACIN,iBAAiBA,CAAA,EAAG;IAAA;IAAAzG,cAAA,GAAAO,CAAA;IAChB,MAAMyG,UAAU;IAAA;IAAA,CAAAhH,cAAA,GAAAG,CAAA,SAAG6C,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC;IAAC;IAAAjD,cAAA,GAAAG,CAAA;IAC3D,OAAO6G,UAAU;IAAA;IAAA,CAAAhH,cAAA,GAAAM,CAAA,WAAG,IAAIyB,IAAI,CAACkF,QAAQ,CAACD,UAAU,CAAC,CAAC;IAAA;IAAA,CAAAhH,cAAA,GAAAM,CAAA,WAAG,IAAI;EAC7D,CAAC;EAED;AACJ;AACA;EACI4G,iBAAiBA,CAAA,EAAG;IAAA;IAAAlH,cAAA,GAAAO,CAAA;IAAAP,cAAA,GAAAG,CAAA;IAChB6C,YAAY,CAACS,OAAO,CAAC,iBAAiB,EAAE1B,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC2D,QAAQ,CAAC,CAAC,CAAC;EAClE,CAAC;EAED;AACJ;AACA;EACIgB,kBAAkBA,CAAA,EAAG;IAAA;IAAA3G,cAAA,GAAAO,CAAA;IAAAP,cAAA,GAAAG,CAAA;IACjB,IAAIO,SAAS,CAACC,MAAM,EAAE;MAAA;MAAAX,cAAA,GAAAM,CAAA;MAAAN,cAAA,GAAAG,CAAA;MAAA,OAAO,CAAC;IAAA,CAAC;IAAA;IAAA;MAAAH,cAAA,GAAAM,CAAA;IAAA;IAE/B,MAAM0G,UAAU;IAAA;IAAA,CAAAhH,cAAA,GAAAG,CAAA,SAAG,IAAI,CAACsG,iBAAiB,CAAC,CAAC;IAAC;IAAAzG,cAAA,GAAAG,CAAA;IAC5C,IAAI,CAAC6G,UAAU,EAAE;MAAA;MAAAhH,cAAA,GAAAM,CAAA;MAAAN,cAAA,GAAAG,CAAA;MAAA,OAAO,IAAI;IAAA,CAAC;IAAA;IAAA;MAAAH,cAAA,GAAAM,CAAA;IAAA;IAAAN,cAAA,GAAAG,CAAA;IAE7B,OAAO4B,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGgF,UAAU,CAACG,OAAO,CAAC,CAAC;EAC5C,CAAC;EAED;AACJ;AACA;EACIN,iBAAiBA,CAAA,EAAG;IAAA;IAAA7G,cAAA,GAAAO,CAAA;IAAAP,cAAA,GAAAG,CAAA;IAChB,IAAI,YAAY,IAAIO,SAAS,EAAE;MAAA;MAAAV,cAAA,GAAAM,CAAA;MAAAN,cAAA,GAAAG,CAAA;MAC3B,OAAO;QACHiH,aAAa,EAAE1G,SAAS,CAAC2G,UAAU,CAACD,aAAa;QACjDhC,IAAI,EAAE1E,SAAS,CAAC2G,UAAU,CAACjC,IAAI;QAC/BkC,QAAQ,EAAE5G,SAAS,CAAC2G,UAAU,CAACC,QAAQ;QACvCC,GAAG,EAAE7G,SAAS,CAAC2G,UAAU,CAACE,GAAG;QAC7BC,QAAQ,EAAE9G,SAAS,CAAC2G,UAAU,CAACG;MACnC,CAAC;IACL,CAAC;IAAA;IAAA;MAAAxH,cAAA,GAAAM,CAAA;IAAA;IAAAN,cAAA,GAAAG,CAAA;IACD,OAAO,IAAI;EACf,CAAC;EAED;AACJ;AACA;EACI4G,iBAAiBA,CAAA,EAAG;IAAA;IAAA/G,cAAA,GAAAO,CAAA;IAAAP,cAAA,GAAAG,CAAA;IAChB,IAAI,EAAE,YAAY,IAAIO,SAAS,CAAC,EAAE;MAAA;MAAAV,cAAA,GAAAM,CAAA;MAAAN,cAAA,GAAAG,CAAA;MAAA,OAAO,SAAS;IAAA,CAAC;IAAA;IAAA;MAAAH,cAAA,GAAAM,CAAA;IAAA;IAEnD,MAAM+G,UAAU;IAAA;IAAA,CAAArH,cAAA,GAAAG,CAAA,SAAGO,SAAS,CAAC2G,UAAU;IAAC;IAAArH,cAAA,GAAAG,CAAA;IAExC;IAAI;IAAA,CAAAH,cAAA,GAAAM,CAAA,WAAA+G,UAAU,CAACD,aAAa,KAAK,IAAI;IAAA;IAAA,CAAApH,cAAA,GAAAM,CAAA,WAAI+G,UAAU,CAACC,QAAQ,GAAG,EAAE,GAAE;MAAA;MAAAtH,cAAA,GAAAM,CAAA;MAAAN,cAAA,GAAAG,CAAA;MAC/D,OAAO,WAAW;IACtB,CAAC,MAAM;MAAA;MAAAH,cAAA,GAAAM,CAAA;MAAAN,cAAA,GAAAG,CAAA;MAAA;MAAI;MAAA,CAAAH,cAAA,GAAAM,CAAA,WAAA+G,UAAU,CAACD,aAAa,KAAK,IAAI;MAAA;MAAA,CAAApH,cAAA,GAAAM,CAAA,WAAI+G,UAAU,CAACC,QAAQ,GAAG,CAAC,GAAE;QAAA;QAAAtH,cAAA,GAAAM,CAAA;QAAAN,cAAA,GAAAG,CAAA;QACrE,OAAO,MAAM;MACjB,CAAC,MAAM;QAAA;QAAAH,cAAA,GAAAM,CAAA;QAAAN,cAAA,GAAAG,CAAA;QAAA;QAAI;QAAA,CAAAH,cAAA,GAAAM,CAAA,WAAA+G,UAAU,CAACD,aAAa,KAAK,IAAI;QAAA;QAAA,CAAApH,cAAA,GAAAM,CAAA,WAAI+G,UAAU,CAACC,QAAQ,GAAG,CAAC,GAAE;UAAA;UAAAtH,cAAA,GAAAM,CAAA;UAAAN,cAAA,GAAAG,CAAA;UACrE,OAAO,MAAM;QACjB,CAAC,MAAM;UAAA;UAAAH,cAAA,GAAAM,CAAA;UAAAN,cAAA,GAAAG,CAAA;UACH,OAAO,MAAM;QACjB;MAAA;IAAA;EACJ,CAAC;EAED;AACJ;AACA;EACIsH,kBAAkBA,CAACjH,KAAK,EAAE;IAAA;IAAAR,cAAA,GAAAO,CAAA;IAAAP,cAAA,GAAAG,CAAA;IACtB,IAAIK,KAAK,EAAE;MAAA;MAAAR,cAAA,GAAAM,CAAA;MAAAN,cAAA,GAAAG,CAAA;MACPK,KAAK,CAACI,aAAa,GAAG,EAAE;IAC5B,CAAC;IAAA;IAAA;MAAAZ,cAAA,GAAAM,CAAA;IAAA;IAAAN,cAAA,GAAAG,CAAA;IAED6C,YAAY,CAAC0E,UAAU,CAAC,oBAAoB,CAAC;EACjD,CAAC;EAED;AACJ;AACA;EACIC,uBAAuBA,CAACnH,KAAK,EAAE;IAAA;IAAAR,cAAA,GAAAO,CAAA;IAC3B,MAAM2C,OAAO;IAAA;IAAA,CAAAlD,cAAA,GAAAG,CAAA,SAAGK,KAAK;IAAA;IAAA,CAAAR,cAAA,GAAAM,CAAA,WAAGE,KAAK,CAACI,aAAa;IAAA;IAAA,CAAAZ,cAAA,GAAAM,CAAA,WAAG,IAAI,CAACO,iBAAiB,CAAC,CAAC;IAEtE,MAAM+G,OAAO;IAAA;IAAA,CAAA5H,cAAA,GAAAG,CAAA,SAAG;MACZ0H,KAAK,EAAE3E,OAAO,CAACqB,MAAM;MACrBuD,MAAM,EAAE,CAAC,CAAC;MACVC,YAAY,EAAE,IAAI;MAClBC,YAAY,EAAE,IAAI;MAClBtD,aAAa,EAAExB,OAAO,CAACoB,MAAM,CAAC2D,CAAC,IAAI;QAAA;QAAAjI,cAAA,GAAAO,CAAA;QAAAP,cAAA,GAAAG,CAAA;QAAA,OAAA8H,CAAC,CAACjE,UAAU,IAAI,CAAC;MAAD,CAAC,CAAC,CAACO,MAAM;MAC5D2D,eAAe,EAAEhF,OAAO,CAACoB,MAAM,CAAC2D,CAAC,IAAI;QAAA;QAAAjI,cAAA,GAAAO,CAAA;QAAAP,cAAA,GAAAG,CAAA;QAAA,kCAAAH,cAAA,GAAAM,CAAA,WAAA2H,CAAC,CAACjE,UAAU,GAAG,CAAC;QAAA;QAAA,CAAAhE,cAAA,GAAAM,CAAA,WAAI2H,CAAC,CAACjE,UAAU,GAAG,CAAC;MAAD,CAAC,CAAC,CAACO;IAC/E,CAAC;IAAC;IAAAvE,cAAA,GAAAG,CAAA;IAEF+C,OAAO,CAACiF,OAAO,CAACtE,MAAM,IAAI;MAAA;MAAA7D,cAAA,GAAAO,CAAA;MACtB,MAAM6E,IAAI;MAAA;MAAA,CAAApF,cAAA,GAAAG,CAAA;MAAG;MAAA,CAAAH,cAAA,GAAAM,CAAA,WAAAuD,MAAM,CAACuB,IAAI;MAAA;MAAA,CAAApF,cAAA,GAAAM,CAAA,WAAI,SAAS;MAAC;MAAAN,cAAA,GAAAG,CAAA;MACtCyH,OAAO,CAACE,MAAM,CAAC1C,IAAI,CAAC,GAAG;MAAC;MAAA,CAAApF,cAAA,GAAAM,CAAA,WAAAsH,OAAO,CAACE,MAAM,CAAC1C,IAAI,CAAC;MAAA;MAAA,CAAApF,cAAA,GAAAM,CAAA,WAAI,CAAC,KAAI,CAAC;MAAC;MAAAN,cAAA,GAAAG,CAAA;MAEvD;MAAI;MAAA,CAAAH,cAAA,GAAAM,CAAA,YAACsH,OAAO,CAACG,YAAY;MAAA;MAAA,CAAA/H,cAAA,GAAAM,CAAA,WAAIuD,MAAM,CAAC/B,SAAS,GAAG8F,OAAO,CAACG,YAAY,CAACjG,SAAS,GAAE;QAAA;QAAA9B,cAAA,GAAAM,CAAA;QAAAN,cAAA,GAAAG,CAAA;QAC5EyH,OAAO,CAACG,YAAY,GAAGlE,MAAM;MACjC,CAAC;MAAA;MAAA;QAAA7D,cAAA,GAAAM,CAAA;MAAA;MAAAN,cAAA,GAAAG,CAAA;MAED;MAAI;MAAA,CAAAH,cAAA,GAAAM,CAAA,YAACsH,OAAO,CAACI,YAAY;MAAA;MAAA,CAAAhI,cAAA,GAAAM,CAAA,WAAIuD,MAAM,CAAC/B,SAAS,GAAG8F,OAAO,CAACI,YAAY,CAAClG,SAAS,GAAE;QAAA;QAAA9B,cAAA,GAAAM,CAAA;QAAAN,cAAA,GAAAG,CAAA;QAC5EyH,OAAO,CAACI,YAAY,GAAGnE,MAAM;MACjC,CAAC;MAAA;MAAA;QAAA7D,cAAA,GAAAM,CAAA;MAAA;IACL,CAAC,CAAC;IAAC;IAAAN,cAAA,GAAAG,CAAA;IAEH,OAAOyH,OAAO;EAClB;AACJ,CAAC;;AAED;AAAA;AAAA5H,cAAA,GAAAG,CAAA;AACA;AAAI;AAAA,CAAAH,cAAA,GAAAM,CAAA,kBAAO8H,MAAM,KAAK,WAAW;AAAA;AAAA,CAAApI,cAAA,GAAAM,CAAA,WAAI8H,MAAM,CAACC,OAAO,GAAE;EAAA;EAAArI,cAAA,GAAAM,CAAA;EAAAN,cAAA,GAAAG,CAAA;EACjDiI,MAAM,CAACC,OAAO,GAAG;IAAEnI;EAAW,CAAC;AACnC,CAAC,MAAM;EAAA;EAAAF,cAAA,GAAAM,CAAA;EAAAN,cAAA,GAAAG,CAAA;EAAA,IAAI,OAAOmB,MAAM,KAAK,WAAW,EAAE;IAAA;IAAAtB,cAAA,GAAAM,CAAA;IAAAN,cAAA,GAAAG,CAAA;IACtCmB,MAAM,CAACpB,UAAU,GAAGA,UAAU;EAClC,CAAC;EAAA;EAAA;IAAAF,cAAA,GAAAM,CAAA;EAAA;AAAD","ignoreList":[]}