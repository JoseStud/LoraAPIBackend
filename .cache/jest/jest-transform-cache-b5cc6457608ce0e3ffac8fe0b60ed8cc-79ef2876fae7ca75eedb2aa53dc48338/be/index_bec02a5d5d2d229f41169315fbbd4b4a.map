{"version":3,"names":["generationStudio","state","window","generationState","createInitialState","wsManager","generationWebSocket","createConnectionManager","onOpen","setConnectionStatus","generationUI","toast","success","onMessage","messageInfo","handleWebSocketMessage","onClose","onError","_error","error","type","handleProgressUpdate","payload","handleGenerationComplete","handleGenerationError","handleQueueUpdate","handleSystemStatus","job","getJobById","jobId","updatedJob","generationProgress","updateJobProgress","updateActiveJob","removeActiveJob","addRecentResult","activeJobs","jobs","updateSystemStatus","status","init","loadData","urlParams","url","loadGenerationParams","Object","keys","length","updateParams","info","preferences","storage","loadPreferences","autoSaveParams","setupAutoSave","connect","setupKeyboardShortcuts","startPolling","systemResult","jobsResult","resultsResult","Promise","all","generationAPI","loadSystemStatus","loadActiveJobs","loadRecentResults","showHistory","data","recentResults","map","result","generationResults","formatResult","refreshData","startGeneration","validation","validatePrompt","params","prompt","isValid","errors","setGenerationStatus","addActiveJob","id","job_id","saveGenerationParams","cancelJob","clearQueue","queuedJobs","filter","confirmed","confirm","promises","showImageModal","showResultModal","hideImageModal","hideResultModal","reuseParameters","extractParameters","deleteResult","resultId","removeRecentResult","downloadResult","response","download","blob","filename","useRandomPrompt","randomPrompt","random","getPrompt","useRandomSeed","randomSeed","getSeed","seed","saveAsPreset","name","trim","preset","savePreset","loadPreset","toggleHistory","copyPrompt","clipboard","copyText","copyParameters","copyParams","getJobProgress","getProgressBarConfig","formatDuration","seconds","formatFileSize","bytes","formatDate","dateString","getStatistics","setInterval","set","keyboard","refreshResults","closeModal","pollInterval","isConnected","config","pollIntervalMs","stopPolling","clearInterval","destroy","keyboardCleanup","sortedActiveJobs","sortJobsByPriority","recentResultsDisplay","slice","systemHealth","isSystemHealthy","connectionStatus","getStatus","hasActiveJobs","hasRecentResults","canGenerate","isGenerating","module","exports"],"sources":["index.js"],"sourcesContent":["/**\n * Generation Studio - Main Component Module\n * \n * Integrates all generation studio modules into a unified Alpine.js component.\n */\n\n/**\n * Creates the main generation studio Alpine.js component\n */\nfunction generationStudio() {\n    // Initialize state\n    const state = window.generationState.createInitialState();\n    \n    // Initialize WebSocket connection manager\n    const wsManager = window.generationWebSocket.createConnectionManager({\n        onOpen: () => {\n            window.generationState.setConnectionStatus(state, true);\n            window.generationUI.toast.success('Connected to real-time updates');\n        },\n        \n        onMessage: (messageInfo) => {\n            handleWebSocketMessage(messageInfo);\n        },\n        \n        onClose: () => {\n            window.generationState.setConnectionStatus(state, false);\n        },\n        \n        onError: (_error) => {\n            window.generationUI.toast.error('Connection error: Real-time updates may be delayed');\n        }\n    });\n    \n    // Handle WebSocket messages\n    function handleWebSocketMessage(messageInfo) {\n        switch (messageInfo.type) {\n            case 'generation_progress':\n                handleProgressUpdate(messageInfo.payload);\n                break;\n            case 'generation_complete':\n                handleGenerationComplete(messageInfo.payload);\n                break;\n            case 'generation_error':\n                handleGenerationError(messageInfo.payload);\n                break;\n            case 'queue_update':\n                handleQueueUpdate(messageInfo.payload);\n                break;\n            case 'system_status':\n                handleSystemStatus(messageInfo.payload);\n                break;\n        }\n    }\n    \n    // Handle progress updates\n    function handleProgressUpdate(payload) {\n        const job = window.generationState.getJobById(state, payload.jobId);\n        if (job) {\n            const updatedJob = window.generationProgress.updateJobProgress(job, payload);\n            if (updatedJob) {\n                window.generationState.updateActiveJob(state, payload.jobId, updatedJob);\n            }\n        }\n    }\n    \n    // Handle generation completion\n    function handleGenerationComplete(payload) {\n        // Remove from active jobs\n        window.generationState.removeActiveJob(state, payload.jobId);\n        \n        // Add to recent results\n        window.generationState.addRecentResult(state, payload);\n        \n        window.generationUI.toast.success('Generation completed successfully');\n    }\n    \n    // Handle generation errors\n    function handleGenerationError(payload) {\n        // Remove from active jobs\n        window.generationState.removeActiveJob(state, payload.jobId);\n        \n        window.generationUI.toast.error(`Generation failed: ${payload.error}`);\n    }\n    \n    // Handle queue updates\n    function handleQueueUpdate(payload) {\n        state.activeJobs = payload.jobs || [];\n    }\n    \n    // Handle system status updates\n    function handleSystemStatus(payload) {\n        window.generationState.updateSystemStatus(state, payload.status);\n    }\n    \n    return {\n        // Expose state\n        ...state,\n        \n        // Initialization\n        async init() {\n            try {\n                // Load initial data\n                await this.loadData();\n                \n                // Load parameters from URL\n                const urlParams = window.generationUI.url.loadGenerationParams();\n                if (Object.keys(urlParams).length > 0) {\n                    window.generationState.updateParams(state, urlParams);\n                    window.generationUI.toast.info('Parameters loaded from URL');\n                }\n                \n                // Load user preferences\n                const preferences = window.generationUI.storage.loadPreferences();\n                if (preferences.autoSaveParams) {\n                    this.setupAutoSave();\n                }\n                \n                // Initialize WebSocket connection\n                wsManager.connect();\n                \n                // Setup keyboard shortcuts\n                this.setupKeyboardShortcuts();\n                \n                // Start polling as fallback\n                this.startPolling();\n                \n            } catch (error) {\n                window.generationUI.toast.error('Failed to initialize Generation Studio');\n            }\n        },\n        \n        // Data loading methods\n        async loadData() {\n            const [systemResult, jobsResult, resultsResult] = await Promise.all([\n                window.generationAPI.loadSystemStatus(),\n                window.generationAPI.loadActiveJobs(),\n                window.generationAPI.loadRecentResults(state.showHistory ? 50 : 10)\n            ]);\n            \n            if (systemResult.success) {\n                window.generationState.updateSystemStatus(state, systemResult.data);\n            }\n            \n            if (jobsResult.success) {\n                state.activeJobs = jobsResult.data;\n            }\n            \n            if (resultsResult.success) {\n                state.recentResults = resultsResult.data.map(result => \n                    window.generationResults.formatResult(result)\n                );\n            }\n        },\n        \n        async refreshData() {\n            await this.loadData();\n            window.generationUI.toast.success('Data refreshed');\n        },\n        \n        // Generation methods\n        async startGeneration() {\n            const validation = window.generationUI.validation.validatePrompt(state.params.prompt);\n            if (!validation.isValid) {\n                window.generationUI.toast.error(validation.errors[0]);\n                return;\n            }\n            \n            window.generationState.setGenerationStatus(state, true);\n            \n            try {\n                const result = await window.generationAPI.startGeneration(state.params);\n                \n                if (result.success) {\n                    // Add job to state\n                    window.generationState.addActiveJob(state, {\n                        id: result.data.job_id,\n                        ...state.params,\n                        status: result.data.status || 'queued'\n                    });\n                    \n                    window.generationUI.toast.success('Generation started successfully');\n                    \n                    // Save parameters to URL if auto-save is enabled\n                    const preferences = window.generationUI.storage.loadPreferences();\n                    if (preferences.autoSaveParams) {\n                        window.generationUI.url.saveGenerationParams(state.params);\n                    }\n                } else {\n                    window.generationUI.toast.error(result.error || 'Generation failed');\n                }\n            } catch (error) {\n                window.generationUI.toast.error('Error starting generation');\n            } finally {\n                window.generationState.setGenerationStatus(state, false);\n            }\n        },\n        \n        async cancelJob(jobId) {\n            try {\n                const result = await window.generationAPI.cancelJob(jobId);\n                \n                if (result.success) {\n                    window.generationState.removeActiveJob(state, jobId);\n                    window.generationUI.toast.success('Generation cancelled');\n                } else {\n                    window.generationUI.toast.error('Failed to cancel generation');\n                }\n            } catch (error) {\n                window.generationUI.toast.error('Error cancelling generation');\n            }\n        },\n        \n        async clearQueue() {\n            const queuedJobs = state.activeJobs.filter(job => job.status === 'queued');\n            \n            if (queuedJobs.length === 0) {\n                window.generationUI.toast.info('No queued jobs to clear');\n                return;\n            }\n            \n            const confirmed = confirm(`Clear ${queuedJobs.length} queued job(s)?`);\n            if (!confirmed) return;\n            \n            try {\n                const promises = queuedJobs.map(job => this.cancelJob(job.id));\n                await Promise.all(promises);\n                window.generationUI.toast.success(`Cleared ${queuedJobs.length} queued jobs`);\n            } catch (error) {\n                window.generationUI.toast.error('Error clearing queue');\n            }\n        },\n        \n        // Result management methods\n        showImageModal(result) {\n            window.generationState.showResultModal(state, result);\n        },\n        \n        hideImageModal() {\n            window.generationState.hideResultModal(state);\n        },\n        \n        reuseParameters(result) {\n            const params = window.generationResults.extractParameters(result);\n            if (params) {\n                window.generationState.updateParams(state, params);\n                window.generationUI.toast.success('Parameters loaded from result');\n            }\n        },\n        \n        async deleteResult(resultId) {\n            const confirmed = confirm('Are you sure you want to delete this result?');\n            if (!confirmed) return;\n            \n            try {\n                const result = await window.generationAPI.deleteResult(resultId);\n                \n                if (result.success) {\n                    window.generationState.removeRecentResult(state, resultId);\n                    window.generationUI.toast.success('Result deleted');\n                } else {\n                    window.generationUI.toast.error('Failed to delete result');\n                }\n            } catch (error) {\n                window.generationUI.toast.error('Error deleting result');\n            }\n        },\n        \n        async downloadResult(result) {\n            try {\n                const response = await window.generationAPI.downloadResult(result.id);\n                \n                if (response.success) {\n                    window.generationUI.download.blob(response.data.blob, response.data.filename);\n                    window.generationUI.toast.success('Download started');\n                } else {\n                    window.generationUI.toast.error('Download failed');\n                }\n            } catch (error) {\n                window.generationUI.toast.error('Error downloading result');\n            }\n        },\n        \n        // Quick action methods\n        useRandomPrompt() {\n            const randomPrompt = window.generationUI.random.getPrompt();\n            window.generationState.updateParams(state, { prompt: randomPrompt });\n            window.generationUI.toast.success('Random prompt generated');\n        },\n        \n        useRandomSeed() {\n            const randomSeed = window.generationUI.random.getSeed();\n            window.generationState.updateParams(state, { seed: randomSeed });\n            window.generationUI.toast.success('Random seed generated');\n        },\n        \n        saveAsPreset() {\n            const name = prompt('Enter a name for this preset:');\n            if (!name || !name.trim()) return;\n            \n            try {\n                const preset = window.generationUI.storage.savePreset(name.trim(), state.params);\n                window.generationUI.toast.success(`Preset \"${preset.name}\" saved`);\n            } catch (error) {\n                window.generationUI.toast.error('Failed to save preset');\n            }\n        },\n        \n        loadPreset(preset) {\n            if (!preset || !preset.params) return;\n            \n            window.generationState.updateParams(state, preset.params);\n            window.generationUI.toast.success(`Preset \"${preset.name}\" loaded`);\n        },\n        \n        // UI utility methods\n        toggleHistory() {\n            const showHistory = window.generationState.toggleHistory(state);\n            this.loadRecentResults(showHistory ? 50 : 10);\n        },\n        \n        async copyPrompt(prompt) {\n            const success = await window.generationUI.clipboard.copyText(prompt);\n            if (success) {\n                window.generationUI.toast.success('Prompt copied to clipboard');\n            } else {\n                window.generationUI.toast.error('Failed to copy prompt');\n            }\n        },\n        \n        async copyParameters(result) {\n            const params = window.generationResults.extractParameters(result);\n            const success = await window.generationUI.clipboard.copyParams(params);\n            if (success) {\n                window.generationUI.toast.success('Parameters copied to clipboard');\n            } else {\n                window.generationUI.toast.error('Failed to copy parameters');\n            }\n        },\n        \n        // Progress and status methods\n        getJobProgress(job) {\n            return window.generationProgress.getProgressBarConfig(job);\n        },\n        \n        formatDuration(seconds) {\n            return window.generationProgress.formatDuration(seconds);\n        },\n        \n        formatFileSize(bytes) {\n            return window.generationResults.formatFileSize(bytes);\n        },\n        \n        formatDate(dateString) {\n            return window.generationResults.formatDate(dateString);\n        },\n        \n        getStatistics() {\n            return window.generationState.getStatistics(state);\n        },\n        \n        // Setup methods\n        setupAutoSave() {\n            // Save parameters to localStorage periodically\n            setInterval(() => {\n                window.generationUI.storage.set('lastParams', state.params);\n            }, 30000); // Every 30 seconds\n        },\n        \n        setupKeyboardShortcuts() {\n            return window.generationUI.keyboard.init({\n                startGeneration: () => this.startGeneration(),\n                refreshResults: () => this.refreshData(),\n                savePreset: () => this.saveAsPreset(),\n                clearQueue: () => this.clearQueue(),\n                randomPrompt: () => this.useRandomPrompt(),\n                closeModal: () => this.hideImageModal()\n            });\n        },\n        \n        startPolling() {\n            if (state.pollInterval) return;\n            \n            state.pollInterval = setInterval(async () => {\n                if (state.activeJobs.length > 0 || !wsManager.isConnected()) {\n                    const result = await window.generationAPI.loadActiveJobs();\n                    if (result.success) {\n                        state.activeJobs = result.data;\n                    }\n                }\n            }, state.config.pollIntervalMs);\n        },\n        \n        stopPolling() {\n            if (state.pollInterval) {\n                clearInterval(state.pollInterval);\n                state.pollInterval = null;\n            }\n        },\n        \n        // Cleanup\n        destroy() {\n            this.stopPolling();\n            wsManager.destroy();\n            \n            if (this.keyboardCleanup) {\n                this.keyboardCleanup();\n            }\n        },\n        \n        // Alpine.js reactive getters\n        get sortedActiveJobs() {\n            return window.generationProgress.sortJobsByPriority(state.activeJobs);\n        },\n        \n        get recentResultsDisplay() {\n            return state.recentResults.slice(0, state.showHistory ? 50 : 10);\n        },\n        \n        get systemHealth() {\n            return window.generationState.isSystemHealthy(state);\n        },\n        \n        get connectionStatus() {\n            return wsManager.getStatus();\n        },\n        \n        get hasActiveJobs() {\n            return state.activeJobs.length > 0;\n        },\n        \n        get hasRecentResults() {\n            return state.recentResults.length > 0;\n        },\n        \n        get canGenerate() {\n            return !state.isGenerating && state.params.prompt.trim().length > 0;\n        }\n    };\n}\n\n// Export for use in templates\nif (typeof window !== 'undefined') {\n    window.generationStudio = generationStudio;\n}\n\n// Export for CommonJS testing environments\nif (typeof module !== 'undefined' && module.exports) {\n    module.exports = { generationStudio };\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAASA,gBAAgBA,CAAA,EAAG;EACxB;EACA,MAAMC,KAAK,GAAGC,MAAM,CAACC,eAAe,CAACC,kBAAkB,CAAC,CAAC;;EAEzD;EACA,MAAMC,SAAS,GAAGH,MAAM,CAACI,mBAAmB,CAACC,uBAAuB,CAAC;IACjEC,MAAM,EAAEA,CAAA,KAAM;MACVN,MAAM,CAACC,eAAe,CAACM,mBAAmB,CAACR,KAAK,EAAE,IAAI,CAAC;MACvDC,MAAM,CAACQ,YAAY,CAACC,KAAK,CAACC,OAAO,CAAC,gCAAgC,CAAC;IACvE,CAAC;IAEDC,SAAS,EAAGC,WAAW,IAAK;MACxBC,sBAAsB,CAACD,WAAW,CAAC;IACvC,CAAC;IAEDE,OAAO,EAAEA,CAAA,KAAM;MACXd,MAAM,CAACC,eAAe,CAACM,mBAAmB,CAACR,KAAK,EAAE,KAAK,CAAC;IAC5D,CAAC;IAEDgB,OAAO,EAAGC,MAAM,IAAK;MACjBhB,MAAM,CAACQ,YAAY,CAACC,KAAK,CAACQ,KAAK,CAAC,oDAAoD,CAAC;IACzF;EACJ,CAAC,CAAC;;EAEF;EACA,SAASJ,sBAAsBA,CAACD,WAAW,EAAE;IACzC,QAAQA,WAAW,CAACM,IAAI;MACpB,KAAK,qBAAqB;QACtBC,oBAAoB,CAACP,WAAW,CAACQ,OAAO,CAAC;QACzC;MACJ,KAAK,qBAAqB;QACtBC,wBAAwB,CAACT,WAAW,CAACQ,OAAO,CAAC;QAC7C;MACJ,KAAK,kBAAkB;QACnBE,qBAAqB,CAACV,WAAW,CAACQ,OAAO,CAAC;QAC1C;MACJ,KAAK,cAAc;QACfG,iBAAiB,CAACX,WAAW,CAACQ,OAAO,CAAC;QACtC;MACJ,KAAK,eAAe;QAChBI,kBAAkB,CAACZ,WAAW,CAACQ,OAAO,CAAC;QACvC;IACR;EACJ;;EAEA;EACA,SAASD,oBAAoBA,CAACC,OAAO,EAAE;IACnC,MAAMK,GAAG,GAAGzB,MAAM,CAACC,eAAe,CAACyB,UAAU,CAAC3B,KAAK,EAAEqB,OAAO,CAACO,KAAK,CAAC;IACnE,IAAIF,GAAG,EAAE;MACL,MAAMG,UAAU,GAAG5B,MAAM,CAAC6B,kBAAkB,CAACC,iBAAiB,CAACL,GAAG,EAAEL,OAAO,CAAC;MAC5E,IAAIQ,UAAU,EAAE;QACZ5B,MAAM,CAACC,eAAe,CAAC8B,eAAe,CAAChC,KAAK,EAAEqB,OAAO,CAACO,KAAK,EAAEC,UAAU,CAAC;MAC5E;IACJ;EACJ;;EAEA;EACA,SAASP,wBAAwBA,CAACD,OAAO,EAAE;IACvC;IACApB,MAAM,CAACC,eAAe,CAAC+B,eAAe,CAACjC,KAAK,EAAEqB,OAAO,CAACO,KAAK,CAAC;;IAE5D;IACA3B,MAAM,CAACC,eAAe,CAACgC,eAAe,CAAClC,KAAK,EAAEqB,OAAO,CAAC;IAEtDpB,MAAM,CAACQ,YAAY,CAACC,KAAK,CAACC,OAAO,CAAC,mCAAmC,CAAC;EAC1E;;EAEA;EACA,SAASY,qBAAqBA,CAACF,OAAO,EAAE;IACpC;IACApB,MAAM,CAACC,eAAe,CAAC+B,eAAe,CAACjC,KAAK,EAAEqB,OAAO,CAACO,KAAK,CAAC;IAE5D3B,MAAM,CAACQ,YAAY,CAACC,KAAK,CAACQ,KAAK,CAAC,sBAAsBG,OAAO,CAACH,KAAK,EAAE,CAAC;EAC1E;;EAEA;EACA,SAASM,iBAAiBA,CAACH,OAAO,EAAE;IAChCrB,KAAK,CAACmC,UAAU,GAAGd,OAAO,CAACe,IAAI,IAAI,EAAE;EACzC;;EAEA;EACA,SAASX,kBAAkBA,CAACJ,OAAO,EAAE;IACjCpB,MAAM,CAACC,eAAe,CAACmC,kBAAkB,CAACrC,KAAK,EAAEqB,OAAO,CAACiB,MAAM,CAAC;EACpE;EAEA,OAAO;IACH;IACA,GAAGtC,KAAK;IAER;IACA,MAAMuC,IAAIA,CAAA,EAAG;MACT,IAAI;QACA;QACA,MAAM,IAAI,CAACC,QAAQ,CAAC,CAAC;;QAErB;QACA,MAAMC,SAAS,GAAGxC,MAAM,CAACQ,YAAY,CAACiC,GAAG,CAACC,oBAAoB,CAAC,CAAC;QAChE,IAAIC,MAAM,CAACC,IAAI,CAACJ,SAAS,CAAC,CAACK,MAAM,GAAG,CAAC,EAAE;UACnC7C,MAAM,CAACC,eAAe,CAAC6C,YAAY,CAAC/C,KAAK,EAAEyC,SAAS,CAAC;UACrDxC,MAAM,CAACQ,YAAY,CAACC,KAAK,CAACsC,IAAI,CAAC,4BAA4B,CAAC;QAChE;;QAEA;QACA,MAAMC,WAAW,GAAGhD,MAAM,CAACQ,YAAY,CAACyC,OAAO,CAACC,eAAe,CAAC,CAAC;QACjE,IAAIF,WAAW,CAACG,cAAc,EAAE;UAC5B,IAAI,CAACC,aAAa,CAAC,CAAC;QACxB;;QAEA;QACAjD,SAAS,CAACkD,OAAO,CAAC,CAAC;;QAEnB;QACA,IAAI,CAACC,sBAAsB,CAAC,CAAC;;QAE7B;QACA,IAAI,CAACC,YAAY,CAAC,CAAC;MAEvB,CAAC,CAAC,OAAOtC,KAAK,EAAE;QACZjB,MAAM,CAACQ,YAAY,CAACC,KAAK,CAACQ,KAAK,CAAC,wCAAwC,CAAC;MAC7E;IACJ,CAAC;IAED;IACA,MAAMsB,QAAQA,CAAA,EAAG;MACb,MAAM,CAACiB,YAAY,EAAEC,UAAU,EAAEC,aAAa,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CAChE5D,MAAM,CAAC6D,aAAa,CAACC,gBAAgB,CAAC,CAAC,EACvC9D,MAAM,CAAC6D,aAAa,CAACE,cAAc,CAAC,CAAC,EACrC/D,MAAM,CAAC6D,aAAa,CAACG,iBAAiB,CAACjE,KAAK,CAACkE,WAAW,GAAG,EAAE,GAAG,EAAE,CAAC,CACtE,CAAC;MAEF,IAAIT,YAAY,CAAC9C,OAAO,EAAE;QACtBV,MAAM,CAACC,eAAe,CAACmC,kBAAkB,CAACrC,KAAK,EAAEyD,YAAY,CAACU,IAAI,CAAC;MACvE;MAEA,IAAIT,UAAU,CAAC/C,OAAO,EAAE;QACpBX,KAAK,CAACmC,UAAU,GAAGuB,UAAU,CAACS,IAAI;MACtC;MAEA,IAAIR,aAAa,CAAChD,OAAO,EAAE;QACvBX,KAAK,CAACoE,aAAa,GAAGT,aAAa,CAACQ,IAAI,CAACE,GAAG,CAACC,MAAM,IAC/CrE,MAAM,CAACsE,iBAAiB,CAACC,YAAY,CAACF,MAAM,CAChD,CAAC;MACL;IACJ,CAAC;IAED,MAAMG,WAAWA,CAAA,EAAG;MAChB,MAAM,IAAI,CAACjC,QAAQ,CAAC,CAAC;MACrBvC,MAAM,CAACQ,YAAY,CAACC,KAAK,CAACC,OAAO,CAAC,gBAAgB,CAAC;IACvD,CAAC;IAED;IACA,MAAM+D,eAAeA,CAAA,EAAG;MACpB,MAAMC,UAAU,GAAG1E,MAAM,CAACQ,YAAY,CAACkE,UAAU,CAACC,cAAc,CAAC5E,KAAK,CAAC6E,MAAM,CAACC,MAAM,CAAC;MACrF,IAAI,CAACH,UAAU,CAACI,OAAO,EAAE;QACrB9E,MAAM,CAACQ,YAAY,CAACC,KAAK,CAACQ,KAAK,CAACyD,UAAU,CAACK,MAAM,CAAC,CAAC,CAAC,CAAC;QACrD;MACJ;MAEA/E,MAAM,CAACC,eAAe,CAAC+E,mBAAmB,CAACjF,KAAK,EAAE,IAAI,CAAC;MAEvD,IAAI;QACA,MAAMsE,MAAM,GAAG,MAAMrE,MAAM,CAAC6D,aAAa,CAACY,eAAe,CAAC1E,KAAK,CAAC6E,MAAM,CAAC;QAEvE,IAAIP,MAAM,CAAC3D,OAAO,EAAE;UAChB;UACAV,MAAM,CAACC,eAAe,CAACgF,YAAY,CAAClF,KAAK,EAAE;YACvCmF,EAAE,EAAEb,MAAM,CAACH,IAAI,CAACiB,MAAM;YACtB,GAAGpF,KAAK,CAAC6E,MAAM;YACfvC,MAAM,EAAEgC,MAAM,CAACH,IAAI,CAAC7B,MAAM,IAAI;UAClC,CAAC,CAAC;UAEFrC,MAAM,CAACQ,YAAY,CAACC,KAAK,CAACC,OAAO,CAAC,iCAAiC,CAAC;;UAEpE;UACA,MAAMsC,WAAW,GAAGhD,MAAM,CAACQ,YAAY,CAACyC,OAAO,CAACC,eAAe,CAAC,CAAC;UACjE,IAAIF,WAAW,CAACG,cAAc,EAAE;YAC5BnD,MAAM,CAACQ,YAAY,CAACiC,GAAG,CAAC2C,oBAAoB,CAACrF,KAAK,CAAC6E,MAAM,CAAC;UAC9D;QACJ,CAAC,MAAM;UACH5E,MAAM,CAACQ,YAAY,CAACC,KAAK,CAACQ,KAAK,CAACoD,MAAM,CAACpD,KAAK,IAAI,mBAAmB,CAAC;QACxE;MACJ,CAAC,CAAC,OAAOA,KAAK,EAAE;QACZjB,MAAM,CAACQ,YAAY,CAACC,KAAK,CAACQ,KAAK,CAAC,2BAA2B,CAAC;MAChE,CAAC,SAAS;QACNjB,MAAM,CAACC,eAAe,CAAC+E,mBAAmB,CAACjF,KAAK,EAAE,KAAK,CAAC;MAC5D;IACJ,CAAC;IAED,MAAMsF,SAASA,CAAC1D,KAAK,EAAE;MACnB,IAAI;QACA,MAAM0C,MAAM,GAAG,MAAMrE,MAAM,CAAC6D,aAAa,CAACwB,SAAS,CAAC1D,KAAK,CAAC;QAE1D,IAAI0C,MAAM,CAAC3D,OAAO,EAAE;UAChBV,MAAM,CAACC,eAAe,CAAC+B,eAAe,CAACjC,KAAK,EAAE4B,KAAK,CAAC;UACpD3B,MAAM,CAACQ,YAAY,CAACC,KAAK,CAACC,OAAO,CAAC,sBAAsB,CAAC;QAC7D,CAAC,MAAM;UACHV,MAAM,CAACQ,YAAY,CAACC,KAAK,CAACQ,KAAK,CAAC,6BAA6B,CAAC;QAClE;MACJ,CAAC,CAAC,OAAOA,KAAK,EAAE;QACZjB,MAAM,CAACQ,YAAY,CAACC,KAAK,CAACQ,KAAK,CAAC,6BAA6B,CAAC;MAClE;IACJ,CAAC;IAED,MAAMqE,UAAUA,CAAA,EAAG;MACf,MAAMC,UAAU,GAAGxF,KAAK,CAACmC,UAAU,CAACsD,MAAM,CAAC/D,GAAG,IAAIA,GAAG,CAACY,MAAM,KAAK,QAAQ,CAAC;MAE1E,IAAIkD,UAAU,CAAC1C,MAAM,KAAK,CAAC,EAAE;QACzB7C,MAAM,CAACQ,YAAY,CAACC,KAAK,CAACsC,IAAI,CAAC,yBAAyB,CAAC;QACzD;MACJ;MAEA,MAAM0C,SAAS,GAAGC,OAAO,CAAC,SAASH,UAAU,CAAC1C,MAAM,iBAAiB,CAAC;MACtE,IAAI,CAAC4C,SAAS,EAAE;MAEhB,IAAI;QACA,MAAME,QAAQ,GAAGJ,UAAU,CAACnB,GAAG,CAAC3C,GAAG,IAAI,IAAI,CAAC4D,SAAS,CAAC5D,GAAG,CAACyD,EAAE,CAAC,CAAC;QAC9D,MAAMvB,OAAO,CAACC,GAAG,CAAC+B,QAAQ,CAAC;QAC3B3F,MAAM,CAACQ,YAAY,CAACC,KAAK,CAACC,OAAO,CAAC,WAAW6E,UAAU,CAAC1C,MAAM,cAAc,CAAC;MACjF,CAAC,CAAC,OAAO5B,KAAK,EAAE;QACZjB,MAAM,CAACQ,YAAY,CAACC,KAAK,CAACQ,KAAK,CAAC,sBAAsB,CAAC;MAC3D;IACJ,CAAC;IAED;IACA2E,cAAcA,CAACvB,MAAM,EAAE;MACnBrE,MAAM,CAACC,eAAe,CAAC4F,eAAe,CAAC9F,KAAK,EAAEsE,MAAM,CAAC;IACzD,CAAC;IAEDyB,cAAcA,CAAA,EAAG;MACb9F,MAAM,CAACC,eAAe,CAAC8F,eAAe,CAAChG,KAAK,CAAC;IACjD,CAAC;IAEDiG,eAAeA,CAAC3B,MAAM,EAAE;MACpB,MAAMO,MAAM,GAAG5E,MAAM,CAACsE,iBAAiB,CAAC2B,iBAAiB,CAAC5B,MAAM,CAAC;MACjE,IAAIO,MAAM,EAAE;QACR5E,MAAM,CAACC,eAAe,CAAC6C,YAAY,CAAC/C,KAAK,EAAE6E,MAAM,CAAC;QAClD5E,MAAM,CAACQ,YAAY,CAACC,KAAK,CAACC,OAAO,CAAC,+BAA+B,CAAC;MACtE;IACJ,CAAC;IAED,MAAMwF,YAAYA,CAACC,QAAQ,EAAE;MACzB,MAAMV,SAAS,GAAGC,OAAO,CAAC,8CAA8C,CAAC;MACzE,IAAI,CAACD,SAAS,EAAE;MAEhB,IAAI;QACA,MAAMpB,MAAM,GAAG,MAAMrE,MAAM,CAAC6D,aAAa,CAACqC,YAAY,CAACC,QAAQ,CAAC;QAEhE,IAAI9B,MAAM,CAAC3D,OAAO,EAAE;UAChBV,MAAM,CAACC,eAAe,CAACmG,kBAAkB,CAACrG,KAAK,EAAEoG,QAAQ,CAAC;UAC1DnG,MAAM,CAACQ,YAAY,CAACC,KAAK,CAACC,OAAO,CAAC,gBAAgB,CAAC;QACvD,CAAC,MAAM;UACHV,MAAM,CAACQ,YAAY,CAACC,KAAK,CAACQ,KAAK,CAAC,yBAAyB,CAAC;QAC9D;MACJ,CAAC,CAAC,OAAOA,KAAK,EAAE;QACZjB,MAAM,CAACQ,YAAY,CAACC,KAAK,CAACQ,KAAK,CAAC,uBAAuB,CAAC;MAC5D;IACJ,CAAC;IAED,MAAMoF,cAAcA,CAAChC,MAAM,EAAE;MACzB,IAAI;QACA,MAAMiC,QAAQ,GAAG,MAAMtG,MAAM,CAAC6D,aAAa,CAACwC,cAAc,CAAChC,MAAM,CAACa,EAAE,CAAC;QAErE,IAAIoB,QAAQ,CAAC5F,OAAO,EAAE;UAClBV,MAAM,CAACQ,YAAY,CAAC+F,QAAQ,CAACC,IAAI,CAACF,QAAQ,CAACpC,IAAI,CAACsC,IAAI,EAAEF,QAAQ,CAACpC,IAAI,CAACuC,QAAQ,CAAC;UAC7EzG,MAAM,CAACQ,YAAY,CAACC,KAAK,CAACC,OAAO,CAAC,kBAAkB,CAAC;QACzD,CAAC,MAAM;UACHV,MAAM,CAACQ,YAAY,CAACC,KAAK,CAACQ,KAAK,CAAC,iBAAiB,CAAC;QACtD;MACJ,CAAC,CAAC,OAAOA,KAAK,EAAE;QACZjB,MAAM,CAACQ,YAAY,CAACC,KAAK,CAACQ,KAAK,CAAC,0BAA0B,CAAC;MAC/D;IACJ,CAAC;IAED;IACAyF,eAAeA,CAAA,EAAG;MACd,MAAMC,YAAY,GAAG3G,MAAM,CAACQ,YAAY,CAACoG,MAAM,CAACC,SAAS,CAAC,CAAC;MAC3D7G,MAAM,CAACC,eAAe,CAAC6C,YAAY,CAAC/C,KAAK,EAAE;QAAE8E,MAAM,EAAE8B;MAAa,CAAC,CAAC;MACpE3G,MAAM,CAACQ,YAAY,CAACC,KAAK,CAACC,OAAO,CAAC,yBAAyB,CAAC;IAChE,CAAC;IAEDoG,aAAaA,CAAA,EAAG;MACZ,MAAMC,UAAU,GAAG/G,MAAM,CAACQ,YAAY,CAACoG,MAAM,CAACI,OAAO,CAAC,CAAC;MACvDhH,MAAM,CAACC,eAAe,CAAC6C,YAAY,CAAC/C,KAAK,EAAE;QAAEkH,IAAI,EAAEF;MAAW,CAAC,CAAC;MAChE/G,MAAM,CAACQ,YAAY,CAACC,KAAK,CAACC,OAAO,CAAC,uBAAuB,CAAC;IAC9D,CAAC;IAEDwG,YAAYA,CAAA,EAAG;MACX,MAAMC,IAAI,GAAGtC,MAAM,CAAC,+BAA+B,CAAC;MACpD,IAAI,CAACsC,IAAI,IAAI,CAACA,IAAI,CAACC,IAAI,CAAC,CAAC,EAAE;MAE3B,IAAI;QACA,MAAMC,MAAM,GAAGrH,MAAM,CAACQ,YAAY,CAACyC,OAAO,CAACqE,UAAU,CAACH,IAAI,CAACC,IAAI,CAAC,CAAC,EAAErH,KAAK,CAAC6E,MAAM,CAAC;QAChF5E,MAAM,CAACQ,YAAY,CAACC,KAAK,CAACC,OAAO,CAAC,WAAW2G,MAAM,CAACF,IAAI,SAAS,CAAC;MACtE,CAAC,CAAC,OAAOlG,KAAK,EAAE;QACZjB,MAAM,CAACQ,YAAY,CAACC,KAAK,CAACQ,KAAK,CAAC,uBAAuB,CAAC;MAC5D;IACJ,CAAC;IAEDsG,UAAUA,CAACF,MAAM,EAAE;MACf,IAAI,CAACA,MAAM,IAAI,CAACA,MAAM,CAACzC,MAAM,EAAE;MAE/B5E,MAAM,CAACC,eAAe,CAAC6C,YAAY,CAAC/C,KAAK,EAAEsH,MAAM,CAACzC,MAAM,CAAC;MACzD5E,MAAM,CAACQ,YAAY,CAACC,KAAK,CAACC,OAAO,CAAC,WAAW2G,MAAM,CAACF,IAAI,UAAU,CAAC;IACvE,CAAC;IAED;IACAK,aAAaA,CAAA,EAAG;MACZ,MAAMvD,WAAW,GAAGjE,MAAM,CAACC,eAAe,CAACuH,aAAa,CAACzH,KAAK,CAAC;MAC/D,IAAI,CAACiE,iBAAiB,CAACC,WAAW,GAAG,EAAE,GAAG,EAAE,CAAC;IACjD,CAAC;IAED,MAAMwD,UAAUA,CAAC5C,MAAM,EAAE;MACrB,MAAMnE,OAAO,GAAG,MAAMV,MAAM,CAACQ,YAAY,CAACkH,SAAS,CAACC,QAAQ,CAAC9C,MAAM,CAAC;MACpE,IAAInE,OAAO,EAAE;QACTV,MAAM,CAACQ,YAAY,CAACC,KAAK,CAACC,OAAO,CAAC,4BAA4B,CAAC;MACnE,CAAC,MAAM;QACHV,MAAM,CAACQ,YAAY,CAACC,KAAK,CAACQ,KAAK,CAAC,uBAAuB,CAAC;MAC5D;IACJ,CAAC;IAED,MAAM2G,cAAcA,CAACvD,MAAM,EAAE;MACzB,MAAMO,MAAM,GAAG5E,MAAM,CAACsE,iBAAiB,CAAC2B,iBAAiB,CAAC5B,MAAM,CAAC;MACjE,MAAM3D,OAAO,GAAG,MAAMV,MAAM,CAACQ,YAAY,CAACkH,SAAS,CAACG,UAAU,CAACjD,MAAM,CAAC;MACtE,IAAIlE,OAAO,EAAE;QACTV,MAAM,CAACQ,YAAY,CAACC,KAAK,CAACC,OAAO,CAAC,gCAAgC,CAAC;MACvE,CAAC,MAAM;QACHV,MAAM,CAACQ,YAAY,CAACC,KAAK,CAACQ,KAAK,CAAC,2BAA2B,CAAC;MAChE;IACJ,CAAC;IAED;IACA6G,cAAcA,CAACrG,GAAG,EAAE;MAChB,OAAOzB,MAAM,CAAC6B,kBAAkB,CAACkG,oBAAoB,CAACtG,GAAG,CAAC;IAC9D,CAAC;IAEDuG,cAAcA,CAACC,OAAO,EAAE;MACpB,OAAOjI,MAAM,CAAC6B,kBAAkB,CAACmG,cAAc,CAACC,OAAO,CAAC;IAC5D,CAAC;IAEDC,cAAcA,CAACC,KAAK,EAAE;MAClB,OAAOnI,MAAM,CAACsE,iBAAiB,CAAC4D,cAAc,CAACC,KAAK,CAAC;IACzD,CAAC;IAEDC,UAAUA,CAACC,UAAU,EAAE;MACnB,OAAOrI,MAAM,CAACsE,iBAAiB,CAAC8D,UAAU,CAACC,UAAU,CAAC;IAC1D,CAAC;IAEDC,aAAaA,CAAA,EAAG;MACZ,OAAOtI,MAAM,CAACC,eAAe,CAACqI,aAAa,CAACvI,KAAK,CAAC;IACtD,CAAC;IAED;IACAqD,aAAaA,CAAA,EAAG;MACZ;MACAmF,WAAW,CAAC,MAAM;QACdvI,MAAM,CAACQ,YAAY,CAACyC,OAAO,CAACuF,GAAG,CAAC,YAAY,EAAEzI,KAAK,CAAC6E,MAAM,CAAC;MAC/D,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;IACf,CAAC;IAEDtB,sBAAsBA,CAAA,EAAG;MACrB,OAAOtD,MAAM,CAACQ,YAAY,CAACiI,QAAQ,CAACnG,IAAI,CAAC;QACrCmC,eAAe,EAAEA,CAAA,KAAM,IAAI,CAACA,eAAe,CAAC,CAAC;QAC7CiE,cAAc,EAAEA,CAAA,KAAM,IAAI,CAAClE,WAAW,CAAC,CAAC;QACxC8C,UAAU,EAAEA,CAAA,KAAM,IAAI,CAACJ,YAAY,CAAC,CAAC;QACrC5B,UAAU,EAAEA,CAAA,KAAM,IAAI,CAACA,UAAU,CAAC,CAAC;QACnCqB,YAAY,EAAEA,CAAA,KAAM,IAAI,CAACD,eAAe,CAAC,CAAC;QAC1CiC,UAAU,EAAEA,CAAA,KAAM,IAAI,CAAC7C,cAAc,CAAC;MAC1C,CAAC,CAAC;IACN,CAAC;IAEDvC,YAAYA,CAAA,EAAG;MACX,IAAIxD,KAAK,CAAC6I,YAAY,EAAE;MAExB7I,KAAK,CAAC6I,YAAY,GAAGL,WAAW,CAAC,YAAY;QACzC,IAAIxI,KAAK,CAACmC,UAAU,CAACW,MAAM,GAAG,CAAC,IAAI,CAAC1C,SAAS,CAAC0I,WAAW,CAAC,CAAC,EAAE;UACzD,MAAMxE,MAAM,GAAG,MAAMrE,MAAM,CAAC6D,aAAa,CAACE,cAAc,CAAC,CAAC;UAC1D,IAAIM,MAAM,CAAC3D,OAAO,EAAE;YAChBX,KAAK,CAACmC,UAAU,GAAGmC,MAAM,CAACH,IAAI;UAClC;QACJ;MACJ,CAAC,EAAEnE,KAAK,CAAC+I,MAAM,CAACC,cAAc,CAAC;IACnC,CAAC;IAEDC,WAAWA,CAAA,EAAG;MACV,IAAIjJ,KAAK,CAAC6I,YAAY,EAAE;QACpBK,aAAa,CAAClJ,KAAK,CAAC6I,YAAY,CAAC;QACjC7I,KAAK,CAAC6I,YAAY,GAAG,IAAI;MAC7B;IACJ,CAAC;IAED;IACAM,OAAOA,CAAA,EAAG;MACN,IAAI,CAACF,WAAW,CAAC,CAAC;MAClB7I,SAAS,CAAC+I,OAAO,CAAC,CAAC;MAEnB,IAAI,IAAI,CAACC,eAAe,EAAE;QACtB,IAAI,CAACA,eAAe,CAAC,CAAC;MAC1B;IACJ,CAAC;IAED;IACA,IAAIC,gBAAgBA,CAAA,EAAG;MACnB,OAAOpJ,MAAM,CAAC6B,kBAAkB,CAACwH,kBAAkB,CAACtJ,KAAK,CAACmC,UAAU,CAAC;IACzE,CAAC;IAED,IAAIoH,oBAAoBA,CAAA,EAAG;MACvB,OAAOvJ,KAAK,CAACoE,aAAa,CAACoF,KAAK,CAAC,CAAC,EAAExJ,KAAK,CAACkE,WAAW,GAAG,EAAE,GAAG,EAAE,CAAC;IACpE,CAAC;IAED,IAAIuF,YAAYA,CAAA,EAAG;MACf,OAAOxJ,MAAM,CAACC,eAAe,CAACwJ,eAAe,CAAC1J,KAAK,CAAC;IACxD,CAAC;IAED,IAAI2J,gBAAgBA,CAAA,EAAG;MACnB,OAAOvJ,SAAS,CAACwJ,SAAS,CAAC,CAAC;IAChC,CAAC;IAED,IAAIC,aAAaA,CAAA,EAAG;MAChB,OAAO7J,KAAK,CAACmC,UAAU,CAACW,MAAM,GAAG,CAAC;IACtC,CAAC;IAED,IAAIgH,gBAAgBA,CAAA,EAAG;MACnB,OAAO9J,KAAK,CAACoE,aAAa,CAACtB,MAAM,GAAG,CAAC;IACzC,CAAC;IAED,IAAIiH,WAAWA,CAAA,EAAG;MACd,OAAO,CAAC/J,KAAK,CAACgK,YAAY,IAAIhK,KAAK,CAAC6E,MAAM,CAACC,MAAM,CAACuC,IAAI,CAAC,CAAC,CAACvE,MAAM,GAAG,CAAC;IACvE;EACJ,CAAC;AACL;;AAEA;AACA,IAAI,OAAO7C,MAAM,KAAK,WAAW,EAAE;EAC/BA,MAAM,CAACF,gBAAgB,GAAGA,gBAAgB;AAC9C;;AAEA;AACA,IAAI,OAAOkK,MAAM,KAAK,WAAW,IAAIA,MAAM,CAACC,OAAO,EAAE;EACjDD,MAAM,CAACC,OAAO,GAAG;IAAEnK;EAAiB,CAAC;AACzC","ignoreList":[]}