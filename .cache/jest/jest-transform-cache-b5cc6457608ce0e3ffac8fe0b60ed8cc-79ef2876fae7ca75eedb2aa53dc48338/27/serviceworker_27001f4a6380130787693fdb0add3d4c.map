{"version":3,"names":["cov_2hb861dfrq","actualCoverage","pwaServiceWorker","s","register","swPath","b","scope","f","navigator","Error","registration","serviceWorker","window","DevLogger","debug","error","message","setupEventListeners","callbacks","handleUpdateFound","newWorker","installing","handleStateChange","state","controller","onUpdateAvailable","addEventListener","handleControllerChange","onControllerChange","location","reload","removeEventListener","checkForUpdates","update","activateWaiting","waiting","postMessage","type","getState","hasUpdate","active","Boolean","updateViaCache","unregister","result","postMessageWithResponse","timeout","Promise","resolve","reject","messageChannel","MessageChannel","timeoutId","setTimeout","port1","onmessage","event","clearTimeout","data","port2","getAllRegistrations","getRegistrations","isSupported","getCapabilities","pushManager","notification","backgroundSync","ServiceWorkerRegistration","prototype","backgroundFetch","periodicBackgroundSync","handleError","context","errorMessage","dispatchEvent","CustomEvent","detail","validateScript","response","fetch","cache","ok","getPerformanceMetrics","metrics","registrationTime","scriptURL","Date","now","performance","getEntriesByType","navigationEntries","length","entry","pageLoadTime","loadEventEnd","loadEventStart","domContentLoadedTime","domContentLoadedEventEnd","domContentLoadedEventStart","module","exports"],"sources":["service-worker.js"],"sourcesContent":["/**\n * PWA Manager - Service Worker Module\n * \n * Handles service worker registration, lifecycle management, and updates.\n */\n\n/**\n * Service Worker management operations\n */\nconst pwaServiceWorker = {\n    /**\n     * Registers the service worker\n     */\n    async register(swPath = '/sw.js', scope = '/') {\n        if (!('serviceWorker' in navigator)) {\n            throw new Error('Service Worker not supported');\n        }\n        \n        try {\n            const registration = await navigator.serviceWorker.register(swPath, { scope });\n            \n            if (window.DevLogger?.debug) {\n                window.DevLogger.debug('[PWA] Service Worker registered:', registration);\n            }\n            \n            return registration;\n            \n        } catch (error) {\n            if (window.DevLogger?.debug) {\n                window.DevLogger.debug('[PWA] Service Worker registration failed:', error);\n            }\n            throw new Error(`Service Worker registration failed: ${error.message}`);\n        }\n    },\n    \n    /**\n     * Sets up service worker event listeners\n     */\n    setupEventListeners(registration, callbacks = {}) {\n        if (!registration) return () => {};\n        \n        // Handle updates\n        const handleUpdateFound = () => {\n            const newWorker = registration.installing;\n            if (!newWorker) return;\n            \n            const handleStateChange = () => {\n                if (newWorker.state === 'installed' && navigator.serviceWorker.controller) {\n                    if (callbacks.onUpdateAvailable) {\n                        callbacks.onUpdateAvailable(newWorker);\n                    }\n                }\n            };\n            \n            newWorker.addEventListener('statechange', handleStateChange);\n        };\n        \n        // Handle controller changes\n        const handleControllerChange = () => {\n            if (callbacks.onControllerChange) {\n                callbacks.onControllerChange();\n            } else {\n                window.location.reload();\n            }\n        };\n        \n        registration.addEventListener('updatefound', handleUpdateFound);\n        navigator.serviceWorker.addEventListener('controllerchange', handleControllerChange);\n        \n        // Return cleanup function\n        return () => {\n            registration.removeEventListener('updatefound', handleUpdateFound);\n            navigator.serviceWorker.removeEventListener('controllerchange', handleControllerChange);\n        };\n    },\n    \n    /**\n     * Checks for service worker updates\n     */\n    async checkForUpdates(registration) {\n        if (!registration) return false;\n        \n        try {\n            await registration.update();\n            return true;\n        } catch (error) {\n            if (window.DevLogger?.debug) {\n                window.DevLogger.debug('[PWA] Update check failed:', error);\n            }\n            return false;\n        }\n    },\n    \n    /**\n     * Activates a waiting service worker\n     */\n    activateWaiting(registration) {\n        if (registration?.waiting) {\n            registration.waiting.postMessage({ type: 'SKIP_WAITING' });\n            return true;\n        }\n        return false;\n    },\n    \n    /**\n     * Gets the current service worker state\n     */\n    getState(registration) {\n        if (!registration) {\n            return { state: 'not_registered', hasUpdate: false };\n        }\n        \n        return {\n            state: registration.active ? 'active' : 'inactive',\n            hasUpdate: Boolean(registration.waiting),\n            installing: Boolean(registration.installing),\n            scope: registration.scope,\n            updateViaCache: registration.updateViaCache\n        };\n    },\n    \n    /**\n     * Unregisters the service worker\n     */\n    async unregister(registration) {\n        if (!registration) return false;\n        \n        try {\n            const result = await registration.unregister();\n            if (window.DevLogger?.debug) {\n                window.DevLogger.debug('[PWA] Service Worker unregistered:', result);\n            }\n            return result;\n        } catch (error) {\n            if (window.DevLogger?.debug) {\n                window.DevLogger.debug('[PWA] Service Worker unregistration failed:', error);\n            }\n            return false;\n        }\n    },\n    \n    /**\n     * Posts a message to the service worker\n     */\n    postMessage(registration, message) {\n        if (registration?.active) {\n            registration.active.postMessage(message);\n            return true;\n        }\n        return false;\n    },\n    \n    /**\n     * Posts a message to service worker with response\n     */\n    postMessageWithResponse(registration, message, timeout = 5000) {\n        return new Promise((resolve, reject) => {\n            if (!registration?.active) {\n                reject(new Error('No active service worker'));\n                return;\n            }\n            \n            const messageChannel = new MessageChannel();\n            const timeoutId = setTimeout(() => {\n                reject(new Error('Service Worker response timeout'));\n            }, timeout);\n            \n            messageChannel.port1.onmessage = (event) => {\n                clearTimeout(timeoutId);\n                resolve(event.data);\n            };\n            \n            try {\n                registration.active.postMessage(message, [messageChannel.port2]);\n            } catch (error) {\n                clearTimeout(timeoutId);\n                reject(error);\n            }\n        });\n    },\n    \n    /**\n     * Gets all service worker registrations\n     */\n    async getAllRegistrations() {\n        if (!('serviceWorker' in navigator)) return [];\n        \n        try {\n            return await navigator.serviceWorker.getRegistrations();\n        } catch (error) {\n            return [];\n        }\n    },\n    \n    /**\n     * Checks if service worker is supported\n     */\n    isSupported() {\n        return 'serviceWorker' in navigator;\n    },\n    \n    /**\n     * Gets service worker capabilities\n     */\n    getCapabilities() {\n        return {\n            serviceWorker: 'serviceWorker' in navigator,\n            pushManager: 'PushManager' in window,\n            notification: 'Notification' in window,\n            backgroundSync: 'serviceWorker' in navigator && 'sync' in window.ServiceWorkerRegistration.prototype,\n            backgroundFetch: 'serviceWorker' in navigator && 'BackgroundFetch' in window,\n            periodicBackgroundSync: 'serviceWorker' in navigator && 'periodicSync' in window.ServiceWorkerRegistration.prototype\n        };\n    },\n    \n    /**\n     * Handles service worker errors\n     */\n    handleError(error, context = 'unknown') {\n        const errorMessage = `Service Worker error in ${context}: ${error.message}`;\n        \n        if (window.DevLogger?.error) {\n            window.DevLogger.error('[PWA]', errorMessage, error);\n        }\n        \n        // Could dispatch custom event for error handling\n        window.dispatchEvent(new CustomEvent('sw-error', {\n            detail: { error, context, message: errorMessage }\n        }));\n        \n        return errorMessage;\n    },\n    \n    /**\n     * Validates service worker script\n     */\n    async validateScript(swPath) {\n        try {\n            const response = await fetch(swPath, { cache: 'no-cache' });\n            return response.ok;\n        } catch (error) {\n            return false;\n        }\n    },\n    \n    /**\n     * Gets service worker performance metrics\n     */\n    getPerformanceMetrics(registration) {\n        if (!registration) return null;\n        \n        const metrics = {\n            registrationTime: registration.installing?.scriptURL ? Date.now() : null,\n            scope: registration.scope,\n            updateViaCache: registration.updateViaCache\n        };\n        \n        // Add navigation API timing if available\n        if (window.performance?.getEntriesByType) {\n            const navigationEntries = window.performance.getEntriesByType('navigation');\n            if (navigationEntries.length > 0) {\n                const entry = navigationEntries[0];\n                metrics.pageLoadTime = entry.loadEventEnd - entry.loadEventStart;\n                metrics.domContentLoadedTime = entry.domContentLoadedEventEnd - entry.domContentLoadedEventStart;\n            }\n        }\n        \n        return metrics;\n    }\n};\n\n// Export for use in other modules\nif (typeof module !== 'undefined' && module.exports) {\n    module.exports = { pwaServiceWorker };\n} else if (typeof window !== 'undefined') {\n    window.pwaServiceWorker = pwaServiceWorker;\n}\n"],"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","ignoreList":[]}