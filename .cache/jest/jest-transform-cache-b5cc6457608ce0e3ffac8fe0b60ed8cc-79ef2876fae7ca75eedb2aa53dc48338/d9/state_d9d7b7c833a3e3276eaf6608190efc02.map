{"version":3,"names":["cov_2d4mzsrzo7","actualCoverage","createImportExportState","f","s","activeTab","exportConfig","loras","lora_files","lora_metadata","lora_embeddings","generations","generation_range","date_from","date_to","user_data","system_config","analytics","format","compression","split_archives","max_size_mb","encrypt","password","importConfig","mode","conflict_resolution","validate","backup_before","migrationConfig","from_version","to_version","source_platform","source_path","isExporting","isImporting","isMigrating","showProgress","progressValue","currentStep","progressMessages","estimatedSize","estimatedTime","importFiles","importPreview","hasEncryptedFiles","migrationPreview","showToast","toastMessage","toastType","importExportState","updateExportConfig","state","updates","Object","assign","updateImportConfig","updateMigrationConfig","setOperationState","operation","isActive","operationKey","charAt","toUpperCase","slice","b","forEach","key","updateProgress","value","step","message","undefined","push","id","Date","now","text","toLocaleTimeString","setProgressVisibility","visible","setImportFiles","files","some","file","name","includes","removeImportFile","fileToRemove","filter","length","setImportPreview","preview","setEstimates","size","time","type","hideToast","setActiveTab","tab","module","exports","window"],"sources":["state.js"],"sourcesContent":["/**\n * Import/Export Component - State Management Module\n * \n * Handles all state-related functionality for the import/export component\n * including configuration management and UI state.\n */\n\n/**\n * Creates the initial state for import/export component\n */\nfunction createImportExportState() {\n    return {\n        // Tab State\n        activeTab: 'export',\n        \n        // Export Configuration\n        exportConfig: {\n            loras: true,\n            lora_files: true,\n            lora_metadata: true,\n            lora_embeddings: false,\n            generations: false,\n            generation_range: 'all',\n            date_from: '',\n            date_to: '',\n            user_data: false,\n            system_config: false,\n            analytics: false,\n            format: 'zip',\n            compression: 'balanced',\n            split_archives: false,\n            max_size_mb: 1024,\n            encrypt: false,\n            password: ''\n        },\n        \n        // Import Configuration\n        importConfig: {\n            mode: 'merge',\n            conflict_resolution: 'ask',\n            validate: true,\n            backup_before: true,\n            password: ''\n        },\n        \n        // Migration Configuration\n        migrationConfig: {\n            from_version: '2.0',\n            to_version: '2.1',\n            source_platform: 'automatic1111',\n            source_path: ''\n        },\n        \n        // Operation State\n        isExporting: false,\n        isImporting: false,\n        isMigrating: false,\n        \n        // Progress Tracking\n        showProgress: false,\n        progressValue: 0,\n        currentStep: '',\n        progressMessages: [],\n        \n        // Estimation State\n        estimatedSize: '0 MB',\n        estimatedTime: '0 minutes',\n        \n        // Import State\n        importFiles: [],\n        importPreview: [],\n        hasEncryptedFiles: false,\n        \n        // Migration State\n        migrationPreview: [],\n        \n        // UI State\n        showToast: false,\n        toastMessage: '',\n        toastType: 'info'\n    };\n}\n\n/**\n * State mutation methods\n */\nconst importExportState = {\n    /**\n     * Updates export configuration\n     */\n    updateExportConfig(state, updates) {\n        Object.assign(state.exportConfig, updates);\n        return state;\n    },\n    \n    /**\n     * Updates import configuration\n     */\n    updateImportConfig(state, updates) {\n        Object.assign(state.importConfig, updates);\n        return state;\n    },\n    \n    /**\n     * Updates migration configuration\n     */\n    updateMigrationConfig(state, updates) {\n        Object.assign(state.migrationConfig, updates);\n        return state;\n    },\n    \n    /**\n     * Sets operation state\n     */\n    setOperationState(state, { operation, isActive }) {\n        const operationKey = `is${operation.charAt(0).toUpperCase() + operation.slice(1)}`;\n        state[operationKey] = isActive;\n        \n        if (isActive) {\n            // Reset other operations\n            ['isExporting', 'isImporting', 'isMigrating'].forEach(key => {\n                if (key !== operationKey) {\n                    state[key] = false;\n                }\n            });\n        }\n        \n        return state;\n    },\n    \n    /**\n     * Updates progress state\n     */\n    updateProgress(state, { value, step, message }) {\n        if (value !== undefined) state.progressValue = value;\n        if (step !== undefined) state.currentStep = step;\n        if (message !== undefined) {\n            state.progressMessages.push({\n                id: Date.now(),\n                text: `[${new Date().toLocaleTimeString()}] ${message}`\n            });\n        }\n        return state;\n    },\n    \n    /**\n     * Shows/hides progress dialog\n     */\n    setProgressVisibility(state, visible) {\n        state.showProgress = visible;\n        if (!visible) {\n            state.progressValue = 0;\n            state.currentStep = '';\n            state.progressMessages = [];\n        }\n        return state;\n    },\n    \n    /**\n     * Updates import files\n     */\n    setImportFiles(state, files) {\n        state.importFiles = [...files];\n        state.hasEncryptedFiles = files.some(file => \n            file.name.includes('encrypted') || file.name.includes('password')\n        );\n        return state;\n    },\n    \n    /**\n     * Removes an import file\n     */\n    removeImportFile(state, fileToRemove) {\n        state.importFiles = state.importFiles.filter(file => file !== fileToRemove);\n        if (state.importFiles.length === 0) {\n            state.importPreview = [];\n            state.hasEncryptedFiles = false;\n        }\n        return state;\n    },\n    \n    /**\n     * Sets import preview data\n     */\n    setImportPreview(state, preview) {\n        state.importPreview = [...preview];\n        return state;\n    },\n    \n    /**\n     * Updates size and time estimates\n     */\n    setEstimates(state, { size, time }) {\n        if (size !== undefined) state.estimatedSize = size;\n        if (time !== undefined) state.estimatedTime = time;\n        return state;\n    },\n    \n    /**\n     * Shows toast message\n     */\n    showToast(state, { message, type = 'info' }) {\n        state.toastMessage = message;\n        state.toastType = type;\n        state.showToast = true;\n        return state;\n    },\n    \n    /**\n     * Hides toast message\n     */\n    hideToast(state) {\n        state.showToast = false;\n        return state;\n    },\n    \n    /**\n     * Switches active tab\n     */\n    setActiveTab(state, tab) {\n        state.activeTab = tab;\n        return state;\n    }\n};\n\n// Export for use in other modules\nif (typeof module !== 'undefined' && module.exports) {\n    module.exports = { createImportExportState, importExportState };\n} else if (typeof window !== 'undefined') {\n    window.createImportExportState = createImportExportState;\n    window.importExportState = importExportState;\n}\n"],"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","ignoreList":[]}