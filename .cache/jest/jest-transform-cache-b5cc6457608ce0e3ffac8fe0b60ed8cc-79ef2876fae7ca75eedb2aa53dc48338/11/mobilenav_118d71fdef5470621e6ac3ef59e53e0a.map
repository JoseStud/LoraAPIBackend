{"version":3,"names":["cov_15jbxqap8m","actualCoverage","mobileNav","f","s","isOpen","init","document","addEventListener","e","b","key","closeMenu","window","setTimeout","innerWidth","$watch","body","style","overflow","toggleMenu","openMenu","MobileTouch","constructor","touchStartX","touchStartY","touchThreshold","isScrolling","handleTouchStart","bind","passive","handleTouchMove","handleTouchEnd","initPullToRefresh","initHapticFeedback","touches","clientX","clientY","touchX","touchY","diffX","diffY","Math","abs","Alpine","mobileNavComponent","$data","startY","currentY","isPulling","refreshTriggered","pullThreshold","scrollY","pullDistance","preventDefault","indicator","querySelector","classList","add","vibrate","remove","triggerRefresh","addHapticToElements","selector","intensity","target","matches","duration","navigator","refreshEvent","CustomEvent","detail","timestamp","Date","now","dispatchEvent","showRefreshLoading","innerHTML","MobilePerformance","initLazyLoading","optimizeAnimations","fixViewportHeight","preloadCriticalResources","imageObserver","IntersectionObserver","entries","observer","forEach","entry","isIntersecting","img","src","dataset","unobserve","querySelectorAll","observe","hardwareConcurrency","documentElement","animations","el","hidden","animationPlayState","setVH","vh","innerHeight","setProperty","criticalImages","link","createElement","rel","as","href","head","appendChild","MobileAccessibility","initFocusManagement","initScreenReaderSupport","initKeyboardNavigation","firstLink","focus","mobileMenu","focusableElements","firstElement","lastElement","length","shiftKey","activeElement","liveRegion","setAttribute","className","id","mobileAnnounce","message","textContent","altKey","module","exports"],"sources":["mobile-nav.js"],"sourcesContent":["/**\n * Mobile Navigation Component\n * Handles mobile menu toggle, touch gestures, and responsive behavior\n */\n\nfunction mobileNav() {\n    return {\n        isOpen: false,\n        \n        init() {\n            // Handle escape key\n            document.addEventListener('keydown', (e) => {\n                if (e.key === 'Escape' && this.isOpen) {\n                    this.closeMenu();\n                }\n            });\n            \n            // Handle orientation change\n            window.addEventListener('orientationchange', () => {\n                setTimeout(() => {\n                    this.closeMenu();\n                }, 200);\n            });\n            \n            // Handle window resize\n            window.addEventListener('resize', () => {\n                if (window.innerWidth >= 1024) { // lg breakpoint\n                    this.closeMenu();\n                }\n            });\n            \n            // Prevent body scroll when menu is open\n            this.$watch('isOpen', (isOpen) => {\n                if (isOpen) {\n                    document.body.style.overflow = 'hidden';\n                } else {\n                    document.body.style.overflow = '';\n                }\n            });\n        },\n        \n        toggleMenu() {\n            this.isOpen = !this.isOpen;\n        },\n        \n        closeMenu() {\n            this.isOpen = false;\n        },\n        \n        openMenu() {\n            this.isOpen = true;\n        }\n    };\n}\n\n/**\n * Mobile Touch Utilities\n */\nclass MobileTouch {\n    constructor() {\n        this.touchStartX = 0;\n        this.touchStartY = 0;\n        this.touchThreshold = 50;\n        this.isScrolling = false;\n        \n        this.init();\n    }\n    \n    init() {\n        // Add touch event listeners for swipe gestures\n        document.addEventListener('touchstart', this.handleTouchStart.bind(this), { passive: true });\n        document.addEventListener('touchmove', this.handleTouchMove.bind(this), { passive: false });\n        document.addEventListener('touchend', this.handleTouchEnd.bind(this), { passive: true });\n        \n        // Add pull-to-refresh functionality\n        this.initPullToRefresh();\n        \n        // Add haptic feedback for supported devices\n        this.initHapticFeedback();\n    }\n    \n    handleTouchStart(e) {\n        this.touchStartX = e.touches[0].clientX;\n        this.touchStartY = e.touches[0].clientY;\n        this.isScrolling = false;\n    }\n    \n    handleTouchMove(e) {\n        if (!this.touchStartX || !this.touchStartY) return;\n        \n        const touchX = e.touches[0].clientX;\n        const touchY = e.touches[0].clientY;\n        \n        const diffX = this.touchStartX - touchX;\n        const diffY = this.touchStartY - touchY;\n        \n        // Determine if this is a scroll or swipe\n        if (Math.abs(diffY) > Math.abs(diffX)) {\n            this.isScrolling = true;\n        }\n        \n        // Handle swipe to open navigation\n        if (!this.isScrolling && diffX < -this.touchThreshold && this.touchStartX < 50) {\n            // Swipe right from left edge\n            if (typeof Alpine !== 'undefined') {\n                const mobileNavComponent = Alpine.$data(document.body);\n                if (mobileNavComponent && mobileNavComponent.openMenu) {\n                    mobileNavComponent.openMenu();\n                }\n            }\n        }\n    }\n    \n    handleTouchEnd(e) {\n        this.touchStartX = 0;\n        this.touchStartY = 0;\n        this.isScrolling = false;\n    }\n    \n    initPullToRefresh() {\n        let startY = 0;\n        let currentY = 0;\n        let isPulling = false;\n        let refreshTriggered = false;\n        \n        const pullThreshold = 80;\n        \n        document.addEventListener('touchstart', (e) => {\n            if (window.scrollY === 0) {\n                startY = e.touches[0].clientY;\n                isPulling = true;\n                refreshTriggered = false;\n            }\n        }, { passive: true });\n        \n        document.addEventListener('touchmove', (e) => {\n            if (!isPulling) return;\n            \n            currentY = e.touches[0].clientY;\n            const pullDistance = currentY - startY;\n            \n            if (pullDistance > 0 && window.scrollY === 0) {\n                e.preventDefault();\n                \n                const indicator = document.querySelector('.pull-refresh-indicator');\n                if (indicator) {\n                    if (pullDistance > pullThreshold && !refreshTriggered) {\n                        indicator.classList.add('active');\n                        this.vibrate(50); // Haptic feedback\n                        refreshTriggered = true;\n                    } else if (pullDistance <= pullThreshold && refreshTriggered) {\n                        indicator.classList.remove('active');\n                        refreshTriggered = false;\n                    }\n                }\n            }\n        }, { passive: false });\n        \n        document.addEventListener('touchend', () => {\n            if (isPulling && refreshTriggered) {\n                this.triggerRefresh();\n            }\n            \n            isPulling = false;\n            refreshTriggered = false;\n            \n            const indicator = document.querySelector('.pull-refresh-indicator');\n            if (indicator) {\n                indicator.classList.remove('active');\n            }\n        }, { passive: true });\n    }\n    \n    initHapticFeedback() {\n        // Add haptic feedback to buttons and interactive elements\n        const addHapticToElements = (selector, intensity = 'light') => {\n            document.addEventListener('click', (e) => {\n                if (e.target.matches(selector)) {\n                    this.vibrate(intensity === 'light' ? 10 : intensity === 'medium' ? 20 : 50);\n                }\n            });\n        };\n        \n        addHapticToElements('.btn', 'light');\n        addHapticToElements('.mobile-nav-link', 'light');\n        addHapticToElements('.card-interactive', 'light');\n        addHapticToElements('.mobile-fab', 'medium');\n    }\n    \n    vibrate(duration) {\n        if ('vibrate' in navigator) {\n            navigator.vibrate(duration);\n        }\n    }\n    \n    triggerRefresh() {\n        // Dispatch custom refresh event\n        const refreshEvent = new CustomEvent('pullRefresh', {\n            detail: { timestamp: Date.now() }\n        });\n        document.dispatchEvent(refreshEvent);\n        \n        // Show loading state\n        this.showRefreshLoading();\n    }\n    \n    showRefreshLoading() {\n        const indicator = document.querySelector('.pull-refresh-indicator');\n        if (indicator) {\n            indicator.innerHTML = `\n                <svg class=\"animate-spin h-5 w-5 text-blue-500\" fill=\"none\" viewBox=\"0 0 24 24\">\n                    <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n                    <path class=\"opacity-75\" fill=\"currentColor\" d=\"m 12 2 a 10,10 0 0,1 10,10 h -4 a 6,6 0 0,0 -6,-6 z\"></path>\n                </svg>\n            `;\n            \n            // Hide after 2 seconds\n            setTimeout(() => {\n                indicator.innerHTML = `\n                    <svg class=\"h-5 w-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 14l-7 7m0 0l-7-7m7 7V3\"></path>\n                    </svg>\n                `;\n            }, 2000);\n        }\n    }\n}\n\n/**\n * Mobile Performance Optimizations\n */\nclass MobilePerformance {\n    constructor() {\n        this.init();\n    }\n    \n    init() {\n        // Lazy load images\n        this.initLazyLoading();\n        \n        // Optimize animations for mobile\n        this.optimizeAnimations();\n        \n        // Add viewport height fix for mobile browsers\n        this.fixViewportHeight();\n        \n        // Preload critical resources\n        this.preloadCriticalResources();\n    }\n    \n    initLazyLoading() {\n        if ('IntersectionObserver' in window) {\n            const imageObserver = new IntersectionObserver((entries, observer) => {\n                entries.forEach(entry => {\n                    if (entry.isIntersecting) {\n                        const img = entry.target;\n                        img.src = img.dataset.src;\n                        img.classList.remove('lazy');\n                        observer.unobserve(img);\n                    }\n                });\n            });\n            \n            document.querySelectorAll('img[data-src]').forEach(img => {\n                imageObserver.observe(img);\n            });\n        }\n    }\n    \n    optimizeAnimations() {\n        // Reduce animations on low-end devices\n        if (navigator.hardwareConcurrency && navigator.hardwareConcurrency < 4) {\n            document.documentElement.classList.add('reduce-motion');\n        }\n        \n        // Pause animations when page is not visible\n        document.addEventListener('visibilitychange', () => {\n            const animations = document.querySelectorAll('.animate-spin, .animate-pulse');\n            animations.forEach(el => {\n                if (document.hidden) {\n                    el.style.animationPlayState = 'paused';\n                } else {\n                    el.style.animationPlayState = 'running';\n                }\n            });\n        });\n    }\n    \n    fixViewportHeight() {\n        // Fix for mobile browsers where 100vh includes the address bar\n        const setVH = () => {\n            const vh = window.innerHeight * 0.01;\n            document.documentElement.style.setProperty('--vh', `${vh}px`);\n        };\n        \n        setVH();\n        window.addEventListener('resize', setVH);\n        window.addEventListener('orientationchange', () => {\n            setTimeout(setVH, 100);\n        });\n    }\n    \n    preloadCriticalResources() {\n        // Preload critical images and fonts\n        const criticalImages = [\n            '/static/images/logo.svg',\n            '/static/images/placeholder.jpg'\n        ];\n        \n        criticalImages.forEach(src => {\n            const link = document.createElement('link');\n            link.rel = 'preload';\n            link.as = 'image';\n            link.href = src;\n            document.head.appendChild(link);\n        });\n    }\n}\n\n/**\n * Mobile Accessibility Enhancements\n */\nclass MobileAccessibility {\n    constructor() {\n        this.init();\n    }\n    \n    init() {\n        // Add focus management\n        this.initFocusManagement();\n        \n        // Add screen reader announcements\n        this.initScreenReaderSupport();\n        \n        // Add keyboard navigation for mobile\n        this.initKeyboardNavigation();\n    }\n    \n    initFocusManagement() {\n        // Focus management for mobile menu\n        document.addEventListener('alpineStore:mobileNav:opened', () => {\n            const firstLink = document.querySelector('.mobile-nav-link');\n            if (firstLink) {\n                firstLink.focus();\n            }\n        });\n        \n        // Trap focus in mobile menu\n        document.addEventListener('keydown', (e) => {\n            if (e.key === 'Tab') {\n                const mobileMenu = document.querySelector('.mobile-nav-menu.open');\n                if (mobileMenu) {\n                    const focusableElements = mobileMenu.querySelectorAll(\n                        'a, button, input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n                    );\n                    \n                    const firstElement = focusableElements[0];\n                    const lastElement = focusableElements[focusableElements.length - 1];\n                    \n                    if (e.shiftKey && document.activeElement === firstElement) {\n                        e.preventDefault();\n                        lastElement.focus();\n                    } else if (!e.shiftKey && document.activeElement === lastElement) {\n                        e.preventDefault();\n                        firstElement.focus();\n                    }\n                }\n            }\n        });\n    }\n    \n    initScreenReaderSupport() {\n        // Add ARIA live region for announcements\n        const liveRegion = document.createElement('div');\n        liveRegion.setAttribute('aria-live', 'polite');\n        liveRegion.setAttribute('aria-atomic', 'true');\n        liveRegion.className = 'sr-only';\n        liveRegion.id = 'mobile-announcements';\n        document.body.appendChild(liveRegion);\n        \n        // Function to make announcements\n        window.mobileAnnounce = (message) => {\n            liveRegion.textContent = message;\n            setTimeout(() => {\n                liveRegion.textContent = '';\n            }, 1000);\n        };\n    }\n    \n    initKeyboardNavigation() {\n        // Add keyboard shortcuts for mobile\n        document.addEventListener('keydown', (e) => {\n            // Alt + M to toggle mobile menu\n            if (e.altKey && e.key === 'm') {\n                e.preventDefault();\n                const mobileNavComponent = Alpine.$data(document.body);\n                if (mobileNavComponent && mobileNavComponent.toggleMenu) {\n                    mobileNavComponent.toggleMenu();\n                }\n            }\n        });\n    }\n}\n\n// Initialize mobile enhancements when DOM is loaded\ndocument.addEventListener('DOMContentLoaded', () => {\n    new MobileTouch();\n    new MobilePerformance();\n    new MobileAccessibility();\n});\n\n// Export for use in other modules\nif (typeof module !== 'undefined' && module.exports) {\n    module.exports = { mobileNav, MobileTouch, MobilePerformance, MobileAccessibility };\n}\n"],"mappingseY;IAAAA,cAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,cAAA;AAfZ;AACA;AACA;AACA;;AAEA,SAASE,SAASA,CAAA,EAAG;EAAA;EAAAF,cAAA,GAAAG,CAAA;EAAAH,cAAA,GAAAI,CAAA;EACjB,OAAO;IACHC,MAAM,EAAE,KAAK;IAEbC,IAAIA,CAAA,EAAG;MAAA;MAAAN,cAAA,GAAAG,CAAA;MAAAH,cAAA,GAAAI,CAAA;MACH;MACAG,QAAQ,CAACC,gBAAgB,CAAC,SAAS,EAAGC,CAAC,IAAK;QAAA;QAAAT,cAAA,GAAAG,CAAA;QAAAH,cAAA,GAAAI,CAAA;QACxC;QAAI;QAAA,CAAAJ,cAAA,GAAAU,CAAA,UAAAD,CAAC,CAACE,GAAG,KAAK,QAAQ;QAAA;QAAA,CAAAX,cAAA,GAAAU,CAAA,UAAI,IAAI,CAACL,MAAM,GAAE;UAAA;UAAAL,cAAA,GAAAU,CAAA;UAAAV,cAAA,GAAAI,CAAA;UACnC,IAAI,CAACQ,SAAS,CAAC,CAAC;QACpB,CAAC;QAAA;QAAA;UAAAZ,cAAA,GAAAU,CAAA;QAAA;MACL,CAAC,CAAC;;MAEF;MAAA;MAAAV,cAAA,GAAAI,CAAA;MACAS,MAAM,CAACL,gBAAgB,CAAC,mBAAmB,EAAE,MAAM;QAAA;QAAAR,cAAA,GAAAG,CAAA;QAAAH,cAAA,GAAAI,CAAA;QAC/CU,UAAU,CAAC,MAAM;UAAA;UAAAd,cAAA,GAAAG,CAAA;UAAAH,cAAA,GAAAI,CAAA;UACb,IAAI,CAACQ,SAAS,CAAC,CAAC;QACpB,CAAC,EAAE,GAAG,CAAC;MACX,CAAC,CAAC;;MAEF;MAAA;MAAAZ,cAAA,GAAAI,CAAA;MACAS,MAAM,CAACL,gBAAgB,CAAC,QAAQ,EAAE,MAAM;QAAA;QAAAR,cAAA,GAAAG,CAAA;QAAAH,cAAA,GAAAI,CAAA;QACpC,IAAIS,MAAM,CAACE,UAAU,IAAI,IAAI,EAAE;UAAA;UAAAf,cAAA,GAAAU,CAAA;UAAAV,cAAA,GAAAI,CAAA;UAAE;UAC7B,IAAI,CAACQ,SAAS,CAAC,CAAC;QACpB,CAAC;QAAA;QAAA;UAAAZ,cAAA,GAAAU,CAAA;QAAA;MACL,CAAC,CAAC;;MAEF;MAAA;MAAAV,cAAA,GAAAI,CAAA;MACA,IAAI,CAACY,MAAM,CAAC,QAAQ,EAAGX,MAAM,IAAK;QAAA;QAAAL,cAAA,GAAAG,CAAA;QAAAH,cAAA,GAAAI,CAAA;QAC9B,IAAIC,MAAM,EAAE;UAAA;UAAAL,cAAA,GAAAU,CAAA;UAAAV,cAAA,GAAAI,CAAA;UACRG,QAAQ,CAACU,IAAI,CAACC,KAAK,CAACC,QAAQ,GAAG,QAAQ;QAC3C,CAAC,MAAM;UAAA;UAAAnB,cAAA,GAAAU,CAAA;UAAAV,cAAA,GAAAI,CAAA;UACHG,QAAQ,CAACU,IAAI,CAACC,KAAK,CAACC,QAAQ,GAAG,EAAE;QACrC;MACJ,CAAC,CAAC;IACN,CAAC;IAEDC,UAAUA,CAAA,EAAG;MAAA;MAAApB,cAAA,GAAAG,CAAA;MAAAH,cAAA,GAAAI,CAAA;MACT,IAAI,CAACC,MAAM,GAAG,CAAC,IAAI,CAACA,MAAM;IAC9B,CAAC;IAEDO,SAASA,CAAA,EAAG;MAAA;MAAAZ,cAAA,GAAAG,CAAA;MAAAH,cAAA,GAAAI,CAAA;MACR,IAAI,CAACC,MAAM,GAAG,KAAK;IACvB,CAAC;IAEDgB,QAAQA,CAAA,EAAG;MAAA;MAAArB,cAAA,GAAAG,CAAA;MAAAH,cAAA,GAAAI,CAAA;MACP,IAAI,CAACC,MAAM,GAAG,IAAI;IACtB;EACJ,CAAC;AACL;;AAEA;AACA;AACA;AACA,MAAMiB,WAAW,CAAC;EACdC,WAAWA,CAAA,EAAG;IAAA;IAAAvB,cAAA,GAAAG,CAAA;IAAAH,cAAA,GAAAI,CAAA;IACV,IAAI,CAACoB,WAAW,GAAG,CAAC;IAAC;IAAAxB,cAAA,GAAAI,CAAA;IACrB,IAAI,CAACqB,WAAW,GAAG,CAAC;IAAC;IAAAzB,cAAA,GAAAI,CAAA;IACrB,IAAI,CAACsB,cAAc,GAAG,EAAE;IAAC;IAAA1B,cAAA,GAAAI,CAAA;IACzB,IAAI,CAACuB,WAAW,GAAG,KAAK;IAAC;IAAA3B,cAAA,GAAAI,CAAA;IAEzB,IAAI,CAACE,IAAI,CAAC,CAAC;EACf;EAEAA,IAAIA,CAAA,EAAG;IAAA;IAAAN,cAAA,GAAAG,CAAA;IAAAH,cAAA,GAAAI,CAAA;IACH;IACAG,QAAQ,CAACC,gBAAgB,CAAC,YAAY,EAAE,IAAI,CAACoB,gBAAgB,CAACC,IAAI,CAAC,IAAI,CAAC,EAAE;MAAEC,OAAO,EAAE;IAAK,CAAC,CAAC;IAAC;IAAA9B,cAAA,GAAAI,CAAA;IAC7FG,QAAQ,CAACC,gBAAgB,CAAC,WAAW,EAAE,IAAI,CAACuB,eAAe,CAACF,IAAI,CAAC,IAAI,CAAC,EAAE;MAAEC,OAAO,EAAE;IAAM,CAAC,CAAC;IAAC;IAAA9B,cAAA,GAAAI,CAAA;IAC5FG,QAAQ,CAACC,gBAAgB,CAAC,UAAU,EAAE,IAAI,CAACwB,cAAc,CAACH,IAAI,CAAC,IAAI,CAAC,EAAE;MAAEC,OAAO,EAAE;IAAK,CAAC,CAAC;;IAExF;IAAA;IAAA9B,cAAA,GAAAI,CAAA;IACA,IAAI,CAAC6B,iBAAiB,CAAC,CAAC;;IAExB;IAAA;IAAAjC,cAAA,GAAAI,CAAA;IACA,IAAI,CAAC8B,kBAAkB,CAAC,CAAC;EAC7B;EAEAN,gBAAgBA,CAACnB,CAAC,EAAE;IAAA;IAAAT,cAAA,GAAAG,CAAA;IAAAH,cAAA,GAAAI,CAAA;IAChB,IAAI,CAACoB,WAAW,GAAGf,CAAC,CAAC0B,OAAO,CAAC,CAAC,CAAC,CAACC,OAAO;IAAC;IAAApC,cAAA,GAAAI,CAAA;IACxC,IAAI,CAACqB,WAAW,GAAGhB,CAAC,CAAC0B,OAAO,CAAC,CAAC,CAAC,CAACE,OAAO;IAAC;IAAArC,cAAA,GAAAI,CAAA;IACxC,IAAI,CAACuB,WAAW,GAAG,KAAK;EAC5B;EAEAI,eAAeA,CAACtB,CAAC,EAAE;IAAA;IAAAT,cAAA,GAAAG,CAAA;IAAAH,cAAA,GAAAI,CAAA;IACf;IAAI;IAAA,CAAAJ,cAAA,GAAAU,CAAA,WAAC,IAAI,CAACc,WAAW;IAAA;IAAA,CAAAxB,cAAA,GAAAU,CAAA,UAAI,CAAC,IAAI,CAACe,WAAW,GAAE;MAAA;MAAAzB,cAAA,GAAAU,CAAA;MAAAV,cAAA,GAAAI,CAAA;MAAA;IAAM,CAAC;IAAA;IAAA;MAAAJ,cAAA,GAAAU,CAAA;IAAA;IAEnD,MAAM4B,MAAM;IAAA;IAAA,CAAAtC,cAAA,GAAAI,CAAA,QAAGK,CAAC,CAAC0B,OAAO,CAAC,CAAC,CAAC,CAACC,OAAO;IACnC,MAAMG,MAAM;IAAA;IAAA,CAAAvC,cAAA,GAAAI,CAAA,QAAGK,CAAC,CAAC0B,OAAO,CAAC,CAAC,CAAC,CAACE,OAAO;IAEnC,MAAMG,KAAK;IAAA;IAAA,CAAAxC,cAAA,GAAAI,CAAA,QAAG,IAAI,CAACoB,WAAW,GAAGc,MAAM;IACvC,MAAMG,KAAK;IAAA;IAAA,CAAAzC,cAAA,GAAAI,CAAA,QAAG,IAAI,CAACqB,WAAW,GAAGc,MAAM;;IAEvC;IAAA;IAAAvC,cAAA,GAAAI,CAAA;IACA,IAAIsC,IAAI,CAACC,GAAG,CAACF,KAAK,CAAC,GAAGC,IAAI,CAACC,GAAG,CAACH,KAAK,CAAC,EAAE;MAAA;MAAAxC,cAAA,GAAAU,CAAA;MAAAV,cAAA,GAAAI,CAAA;MACnC,IAAI,CAACuB,WAAW,GAAG,IAAI;IAC3B,CAAC;IAAA;IAAA;MAAA3B,cAAA,GAAAU,CAAA;IAAA;;IAED;IAAAV,cAAA,GAAAI,CAAA;IACA;IAAI;IAAA,CAAAJ,cAAA,GAAAU,CAAA,WAAC,IAAI,CAACiB,WAAW;IAAA;IAAA,CAAA3B,cAAA,GAAAU,CAAA,UAAI8B,KAAK,GAAG,CAAC,IAAI,CAACd,cAAc;IAAA;IAAA,CAAA1B,cAAA,GAAAU,CAAA,UAAI,IAAI,CAACc,WAAW,GAAG,EAAE,GAAE;MAAA;MAAAxB,cAAA,GAAAU,CAAA;MAAAV,cAAA,GAAAI,CAAA;MAC5E;MACA,IAAI,OAAOwC,MAAM,KAAK,WAAW,EAAE;QAAA;QAAA5C,cAAA,GAAAU,CAAA;QAC/B,MAAMmC,kBAAkB;QAAA;QAAA,CAAA7C,cAAA,GAAAI,CAAA,QAAGwC,MAAM,CAACE,KAAK,CAACvC,QAAQ,CAACU,IAAI,CAAC;QAAC;QAAAjB,cAAA,GAAAI,CAAA;QACvD;QAAI;QAAA,CAAAJ,cAAA,GAAAU,CAAA,WAAAmC,kBAAkB;QAAA;QAAA,CAAA7C,cAAA,GAAAU,CAAA,WAAImC,kBAAkB,CAACxB,QAAQ,GAAE;UAAA;UAAArB,cAAA,GAAAU,CAAA;UAAAV,cAAA,GAAAI,CAAA;UACnDyC,kBAAkB,CAACxB,QAAQ,CAAC,CAAC;QACjC,CAAC;QAAA;QAAA;UAAArB,cAAA,GAAAU,CAAA;QAAA;MACL,CAAC;MAAA;MAAA;QAAAV,cAAA,GAAAU,CAAA;MAAA;IACL,CAAC;IAAA;IAAA;MAAAV,cAAA,GAAAU,CAAA;IAAA;EACL;EAEAsB,cAAcA,CAACvB,CAAC,EAAE;IAAA;IAAAT,cAAA,GAAAG,CAAA;IAAAH,cAAA,GAAAI,CAAA;IACd,IAAI,CAACoB,WAAW,GAAG,CAAC;IAAC;IAAAxB,cAAA,GAAAI,CAAA;IACrB,IAAI,CAACqB,WAAW,GAAG,CAAC;IAAC;IAAAzB,cAAA,GAAAI,CAAA;IACrB,IAAI,CAACuB,WAAW,GAAG,KAAK;EAC5B;EAEAM,iBAAiBA,CAAA,EAAG;IAAA;IAAAjC,cAAA,GAAAG,CAAA;IAChB,IAAI4C,MAAM;IAAA;IAAA,CAAA/C,cAAA,GAAAI,CAAA,QAAG,CAAC;IACd,IAAI4C,QAAQ;IAAA;IAAA,CAAAhD,cAAA,GAAAI,CAAA,QAAG,CAAC;IAChB,IAAI6C,SAAS;IAAA;IAAA,CAAAjD,cAAA,GAAAI,CAAA,QAAG,KAAK;IACrB,IAAI8C,gBAAgB;IAAA;IAAA,CAAAlD,cAAA,GAAAI,CAAA,QAAG,KAAK;IAE5B,MAAM+C,aAAa;IAAA;IAAA,CAAAnD,cAAA,GAAAI,CAAA,QAAG,EAAE;IAAC;IAAAJ,cAAA,GAAAI,CAAA;IAEzBG,QAAQ,CAACC,gBAAgB,CAAC,YAAY,EAAGC,CAAC,IAAK;MAAA;MAAAT,cAAA,GAAAG,CAAA;MAAAH,cAAA,GAAAI,CAAA;MAC3C,IAAIS,MAAM,CAACuC,OAAO,KAAK,CAAC,EAAE;QAAA;QAAApD,cAAA,GAAAU,CAAA;QAAAV,cAAA,GAAAI,CAAA;QACtB2C,MAAM,GAAGtC,CAAC,CAAC0B,OAAO,CAAC,CAAC,CAAC,CAACE,OAAO;QAAC;QAAArC,cAAA,GAAAI,CAAA;QAC9B6C,SAAS,GAAG,IAAI;QAAC;QAAAjD,cAAA,GAAAI,CAAA;QACjB8C,gBAAgB,GAAG,KAAK;MAC5B,CAAC;MAAA;MAAA;QAAAlD,cAAA,GAAAU,CAAA;MAAA;IACL,CAAC,EAAE;MAAEoB,OAAO,EAAE;IAAK,CAAC,CAAC;IAAC;IAAA9B,cAAA,GAAAI,CAAA;IAEtBG,QAAQ,CAACC,gBAAgB,CAAC,WAAW,EAAGC,CAAC,IAAK;MAAA;MAAAT,cAAA,GAAAG,CAAA;MAAAH,cAAA,GAAAI,CAAA;MAC1C,IAAI,CAAC6C,SAAS,EAAE;QAAA;QAAAjD,cAAA,GAAAU,CAAA;QAAAV,cAAA,GAAAI,CAAA;QAAA;MAAM,CAAC;MAAA;MAAA;QAAAJ,cAAA,GAAAU,CAAA;MAAA;MAAAV,cAAA,GAAAI,CAAA;MAEvB4C,QAAQ,GAAGvC,CAAC,CAAC0B,OAAO,CAAC,CAAC,CAAC,CAACE,OAAO;MAC/B,MAAMgB,YAAY;MAAA;MAAA,CAAArD,cAAA,GAAAI,CAAA,QAAG4C,QAAQ,GAAGD,MAAM;MAAC;MAAA/C,cAAA,GAAAI,CAAA;MAEvC;MAAI;MAAA,CAAAJ,cAAA,GAAAU,CAAA,WAAA2C,YAAY,GAAG,CAAC;MAAA;MAAA,CAAArD,cAAA,GAAAU,CAAA,WAAIG,MAAM,CAACuC,OAAO,KAAK,CAAC,GAAE;QAAA;QAAApD,cAAA,GAAAU,CAAA;QAAAV,cAAA,GAAAI,CAAA;QAC1CK,CAAC,CAAC6C,cAAc,CAAC,CAAC;QAElB,MAAMC,SAAS;QAAA;QAAA,CAAAvD,cAAA,GAAAI,CAAA,QAAGG,QAAQ,CAACiD,aAAa,CAAC,yBAAyB,CAAC;QAAC;QAAAxD,cAAA,GAAAI,CAAA;QACpE,IAAImD,SAAS,EAAE;UAAA;UAAAvD,cAAA,GAAAU,CAAA;UAAAV,cAAA,GAAAI,CAAA;UACX;UAAI;UAAA,CAAAJ,cAAA,GAAAU,CAAA,WAAA2C,YAAY,GAAGF,aAAa;UAAA;UAAA,CAAAnD,cAAA,GAAAU,CAAA,WAAI,CAACwC,gBAAgB,GAAE;YAAA;YAAAlD,cAAA,GAAAU,CAAA;YAAAV,cAAA,GAAAI,CAAA;YACnDmD,SAAS,CAACE,SAAS,CAACC,GAAG,CAAC,QAAQ,CAAC;YAAC;YAAA1D,cAAA,GAAAI,CAAA;YAClC,IAAI,CAACuD,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;YAAA;YAAA3D,cAAA,GAAAI,CAAA;YAClB8C,gBAAgB,GAAG,IAAI;UAC3B,CAAC,MAAM;YAAA;YAAAlD,cAAA,GAAAU,CAAA;YAAAV,cAAA,GAAAI,CAAA;YAAA;YAAI;YAAA,CAAAJ,cAAA,GAAAU,CAAA,WAAA2C,YAAY,IAAIF,aAAa;YAAA;YAAA,CAAAnD,cAAA,GAAAU,CAAA,WAAIwC,gBAAgB,GAAE;cAAA;cAAAlD,cAAA,GAAAU,CAAA;cAAAV,cAAA,GAAAI,CAAA;cAC1DmD,SAAS,CAACE,SAAS,CAACG,MAAM,CAAC,QAAQ,CAAC;cAAC;cAAA5D,cAAA,GAAAI,CAAA;cACrC8C,gBAAgB,GAAG,KAAK;YAC5B,CAAC;YAAA;YAAA;cAAAlD,cAAA,GAAAU,CAAA;YAAA;UAAD;QACJ,CAAC;QAAA;QAAA;UAAAV,cAAA,GAAAU,CAAA;QAAA;MACL,CAAC;MAAA;MAAA;QAAAV,cAAA,GAAAU,CAAA;MAAA;IACL,CAAC,EAAE;MAAEoB,OAAO,EAAE;IAAM,CAAC,CAAC;IAAC;IAAA9B,cAAA,GAAAI,CAAA;IAEvBG,QAAQ,CAACC,gBAAgB,CAAC,UAAU,EAAE,MAAM;MAAA;MAAAR,cAAA,GAAAG,CAAA;MAAAH,cAAA,GAAAI,CAAA;MACxC;MAAI;MAAA,CAAAJ,cAAA,GAAAU,CAAA,WAAAuC,SAAS;MAAA;MAAA,CAAAjD,cAAA,GAAAU,CAAA,WAAIwC,gBAAgB,GAAE;QAAA;QAAAlD,cAAA,GAAAU,CAAA;QAAAV,cAAA,GAAAI,CAAA;QAC/B,IAAI,CAACyD,cAAc,CAAC,CAAC;MACzB,CAAC;MAAA;MAAA;QAAA7D,cAAA,GAAAU,CAAA;MAAA;MAAAV,cAAA,GAAAI,CAAA;MAED6C,SAAS,GAAG,KAAK;MAAC;MAAAjD,cAAA,GAAAI,CAAA;MAClB8C,gBAAgB,GAAG,KAAK;MAExB,MAAMK,SAAS;MAAA;MAAA,CAAAvD,cAAA,GAAAI,CAAA,QAAGG,QAAQ,CAACiD,aAAa,CAAC,yBAAyB,CAAC;MAAC;MAAAxD,cAAA,GAAAI,CAAA;MACpE,IAAImD,SAAS,EAAE;QAAA;QAAAvD,cAAA,GAAAU,CAAA;QAAAV,cAAA,GAAAI,CAAA;QACXmD,SAAS,CAACE,SAAS,CAACG,MAAM,CAAC,QAAQ,CAAC;MACxC,CAAC;MAAA;MAAA;QAAA5D,cAAA,GAAAU,CAAA;MAAA;IACL,CAAC,EAAE;MAAEoB,OAAO,EAAE;IAAK,CAAC,CAAC;EACzB;EAEAI,kBAAkBA,CAAA,EAAG;IAAA;IAAAlC,cAAA,GAAAG,CAAA;IAAAH,cAAA,GAAAI,CAAA;IACjB;IACA,MAAM0D,mBAAmB,GAAGA,CAACC,QAAQ,EAAEC,SAAS;IAAA;IAAA,CAAAhE,cAAA,GAAAU,CAAA,WAAG,OAAO,MAAK;MAAA;MAAAV,cAAA,GAAAG,CAAA;MAAAH,cAAA,GAAAI,CAAA;MAC3DG,QAAQ,CAACC,gBAAgB,CAAC,OAAO,EAAGC,CAAC,IAAK;QAAA;QAAAT,cAAA,GAAAG,CAAA;QAAAH,cAAA,GAAAI,CAAA;QACtC,IAAIK,CAAC,CAACwD,MAAM,CAACC,OAAO,CAACH,QAAQ,CAAC,EAAE;UAAA;UAAA/D,cAAA,GAAAU,CAAA;UAAAV,cAAA,GAAAI,CAAA;UAC5B,IAAI,CAACuD,OAAO,CAACK,SAAS,KAAK,OAAO;UAAA;UAAA,CAAAhE,cAAA,GAAAU,CAAA,WAAG,EAAE;UAAA;UAAA,CAAAV,cAAA,GAAAU,CAAA,WAAGsD,SAAS,KAAK,QAAQ;UAAA;UAAA,CAAAhE,cAAA,GAAAU,CAAA,WAAG,EAAE;UAAA;UAAA,CAAAV,cAAA,GAAAU,CAAA,WAAG,EAAE,GAAC;QAC/E,CAAC;QAAA;QAAA;UAAAV,cAAA,GAAAU,CAAA;QAAA;MACL,CAAC,CAAC;IACN,CAAC;IAAC;IAAAV,cAAA,GAAAI,CAAA;IAEF0D,mBAAmB,CAAC,MAAM,EAAE,OAAO,CAAC;IAAC;IAAA9D,cAAA,GAAAI,CAAA;IACrC0D,mBAAmB,CAAC,kBAAkB,EAAE,OAAO,CAAC;IAAC;IAAA9D,cAAA,GAAAI,CAAA;IACjD0D,mBAAmB,CAAC,mBAAmB,EAAE,OAAO,CAAC;IAAC;IAAA9D,cAAA,GAAAI,CAAA;IAClD0D,mBAAmB,CAAC,aAAa,EAAE,QAAQ,CAAC;EAChD;EAEAH,OAAOA,CAACQ,QAAQ,EAAE;IAAA;IAAAnE,cAAA,GAAAG,CAAA;IAAAH,cAAA,GAAAI,CAAA;IACd,IAAI,SAAS,IAAIgE,SAAS,EAAE;MAAA;MAAApE,cAAA,GAAAU,CAAA;MAAAV,cAAA,GAAAI,CAAA;MACxBgE,SAAS,CAACT,OAAO,CAACQ,QAAQ,CAAC;IAC/B,CAAC;IAAA;IAAA;MAAAnE,cAAA,GAAAU,CAAA;IAAA;EACL;EAEAmD,cAAcA,CAAA,EAAG;IAAA;IAAA7D,cAAA,GAAAG,CAAA;IACb;IACA,MAAMkE,YAAY;IAAA;IAAA,CAAArE,cAAA,GAAAI,CAAA,QAAG,IAAIkE,WAAW,CAAC,aAAa,EAAE;MAChDC,MAAM,EAAE;QAAEC,SAAS,EAAEC,IAAI,CAACC,GAAG,CAAC;MAAE;IACpC,CAAC,CAAC;IAAC;IAAA1E,cAAA,GAAAI,CAAA;IACHG,QAAQ,CAACoE,aAAa,CAACN,YAAY,CAAC;;IAEpC;IAAA;IAAArE,cAAA,GAAAI,CAAA;IACA,IAAI,CAACwE,kBAAkB,CAAC,CAAC;EAC7B;EAEAA,kBAAkBA,CAAA,EAAG;IAAA;IAAA5E,cAAA,GAAAG,CAAA;IACjB,MAAMoD,SAAS;IAAA;IAAA,CAAAvD,cAAA,GAAAI,CAAA,QAAGG,QAAQ,CAACiD,aAAa,CAAC,yBAAyB,CAAC;IAAC;IAAAxD,cAAA,GAAAI,CAAA;IACpE,IAAImD,SAAS,EAAE;MAAA;MAAAvD,cAAA,GAAAU,CAAA;MAAAV,cAAA,GAAAI,CAAA;MACXmD,SAAS,CAACsB,SAAS,GAAG;AAClC;AACA;AACA;AACA;AACA,aAAa;;MAED;MAAA;MAAA7E,cAAA,GAAAI,CAAA;MACAU,UAAU,CAAC,MAAM;QAAA;QAAAd,cAAA,GAAAG,CAAA;QAAAH,cAAA,GAAAI,CAAA;QACbmD,SAAS,CAACsB,SAAS,GAAG;AACtC;AACA;AACA;AACA,iBAAiB;MACL,CAAC,EAAE,IAAI,CAAC;IACZ,CAAC;IAAA;IAAA;MAAA7E,cAAA,GAAAU,CAAA;IAAA;EACL;AACJ;;AAEA;AACA;AACA;AACA,MAAMoE,iBAAiB,CAAC;EACpBvD,WAAWA,CAAA,EAAG;IAAA;IAAAvB,cAAA,GAAAG,CAAA;IAAAH,cAAA,GAAAI,CAAA;IACV,IAAI,CAACE,IAAI,CAAC,CAAC;EACf;EAEAA,IAAIA,CAAA,EAAG;IAAA;IAAAN,cAAA,GAAAG,CAAA;IAAAH,cAAA,GAAAI,CAAA;IACH;IACA,IAAI,CAAC2E,eAAe,CAAC,CAAC;;IAEtB;IAAA;IAAA/E,cAAA,GAAAI,CAAA;IACA,IAAI,CAAC4E,kBAAkB,CAAC,CAAC;;IAEzB;IAAA;IAAAhF,cAAA,GAAAI,CAAA;IACA,IAAI,CAAC6E,iBAAiB,CAAC,CAAC;;IAExB;IAAA;IAAAjF,cAAA,GAAAI,CAAA;IACA,IAAI,CAAC8E,wBAAwB,CAAC,CAAC;EACnC;EAEAH,eAAeA,CAAA,EAAG;IAAA;IAAA/E,cAAA,GAAAG,CAAA;IAAAH,cAAA,GAAAI,CAAA;IACd,IAAI,sBAAsB,IAAIS,MAAM,EAAE;MAAA;MAAAb,cAAA,GAAAU,CAAA;MAClC,MAAMyE,aAAa;MAAA;MAAA,CAAAnF,cAAA,GAAAI,CAAA,SAAG,IAAIgF,oBAAoB,CAAC,CAACC,OAAO,EAAEC,QAAQ,KAAK;QAAA;QAAAtF,cAAA,GAAAG,CAAA;QAAAH,cAAA,GAAAI,CAAA;QAClEiF,OAAO,CAACE,OAAO,CAACC,KAAK,IAAI;UAAA;UAAAxF,cAAA,GAAAG,CAAA;UAAAH,cAAA,GAAAI,CAAA;UACrB,IAAIoF,KAAK,CAACC,cAAc,EAAE;YAAA;YAAAzF,cAAA,GAAAU,CAAA;YACtB,MAAMgF,GAAG;YAAA;YAAA,CAAA1F,cAAA,GAAAI,CAAA,SAAGoF,KAAK,CAACvB,MAAM;YAAC;YAAAjE,cAAA,GAAAI,CAAA;YACzBsF,GAAG,CAACC,GAAG,GAAGD,GAAG,CAACE,OAAO,CAACD,GAAG;YAAC;YAAA3F,cAAA,GAAAI,CAAA;YAC1BsF,GAAG,CAACjC,SAAS,CAACG,MAAM,CAAC,MAAM,CAAC;YAAC;YAAA5D,cAAA,GAAAI,CAAA;YAC7BkF,QAAQ,CAACO,SAAS,CAACH,GAAG,CAAC;UAC3B,CAAC;UAAA;UAAA;YAAA1F,cAAA,GAAAU,CAAA;UAAA;QACL,CAAC,CAAC;MACN,CAAC,CAAC;MAAC;MAAAV,cAAA,GAAAI,CAAA;MAEHG,QAAQ,CAACuF,gBAAgB,CAAC,eAAe,CAAC,CAACP,OAAO,CAACG,GAAG,IAAI;QAAA;QAAA1F,cAAA,GAAAG,CAAA;QAAAH,cAAA,GAAAI,CAAA;QACtD+E,aAAa,CAACY,OAAO,CAACL,GAAG,CAAC;MAC9B,CAAC,CAAC;IACN,CAAC;IAAA;IAAA;MAAA1F,cAAA,GAAAU,CAAA;IAAA;EACL;EAEAsE,kBAAkBA,CAAA,EAAG;IAAA;IAAAhF,cAAA,GAAAG,CAAA;IAAAH,cAAA,GAAAI,CAAA;IACjB;IACA;IAAI;IAAA,CAAAJ,cAAA,GAAAU,CAAA,WAAA0D,SAAS,CAAC4B,mBAAmB;IAAA;IAAA,CAAAhG,cAAA,GAAAU,CAAA,WAAI0D,SAAS,CAAC4B,mBAAmB,GAAG,CAAC,GAAE;MAAA;MAAAhG,cAAA,GAAAU,CAAA;MAAAV,cAAA,GAAAI,CAAA;MACpEG,QAAQ,CAAC0F,eAAe,CAACxC,SAAS,CAACC,GAAG,CAAC,eAAe,CAAC;IAC3D,CAAC;IAAA;IAAA;MAAA1D,cAAA,GAAAU,CAAA;IAAA;;IAED;IAAAV,cAAA,GAAAI,CAAA;IACAG,QAAQ,CAACC,gBAAgB,CAAC,kBAAkB,EAAE,MAAM;MAAA;MAAAR,cAAA,GAAAG,CAAA;MAChD,MAAM+F,UAAU;MAAA;MAAA,CAAAlG,cAAA,GAAAI,CAAA,SAAGG,QAAQ,CAACuF,gBAAgB,CAAC,+BAA+B,CAAC;MAAC;MAAA9F,cAAA,GAAAI,CAAA;MAC9E8F,UAAU,CAACX,OAAO,CAACY,EAAE,IAAI;QAAA;QAAAnG,cAAA,GAAAG,CAAA;QAAAH,cAAA,GAAAI,CAAA;QACrB,IAAIG,QAAQ,CAAC6F,MAAM,EAAE;UAAA;UAAApG,cAAA,GAAAU,CAAA;UAAAV,cAAA,GAAAI,CAAA;UACjB+F,EAAE,CAACjF,KAAK,CAACmF,kBAAkB,GAAG,QAAQ;QAC1C,CAAC,MAAM;UAAA;UAAArG,cAAA,GAAAU,CAAA;UAAAV,cAAA,GAAAI,CAAA;UACH+F,EAAE,CAACjF,KAAK,CAACmF,kBAAkB,GAAG,SAAS;QAC3C;MACJ,CAAC,CAAC;IACN,CAAC,CAAC;EACN;EAEApB,iBAAiBA,CAAA,EAAG;IAAA;IAAAjF,cAAA,GAAAG,CAAA;IAAAH,cAAA,GAAAI,CAAA;IAChB;IACA,MAAMkG,KAAK,GAAGA,CAAA,KAAM;MAAA;MAAAtG,cAAA,GAAAG,CAAA;MAChB,MAAMoG,EAAE;MAAA;MAAA,CAAAvG,cAAA,GAAAI,CAAA,SAAGS,MAAM,CAAC2F,WAAW,GAAG,IAAI;MAAC;MAAAxG,cAAA,GAAAI,CAAA;MACrCG,QAAQ,CAAC0F,eAAe,CAAC/E,KAAK,CAACuF,WAAW,CAAC,MAAM,EAAE,GAAGF,EAAE,IAAI,CAAC;IACjE,CAAC;IAAC;IAAAvG,cAAA,GAAAI,CAAA;IAEFkG,KAAK,CAAC,CAAC;IAAC;IAAAtG,cAAA,GAAAI,CAAA;IACRS,MAAM,CAACL,gBAAgB,CAAC,QAAQ,EAAE8F,KAAK,CAAC;IAAC;IAAAtG,cAAA,GAAAI,CAAA;IACzCS,MAAM,CAACL,gBAAgB,CAAC,mBAAmB,EAAE,MAAM;MAAA;MAAAR,cAAA,GAAAG,CAAA;MAAAH,cAAA,GAAAI,CAAA;MAC/CU,UAAU,CAACwF,KAAK,EAAE,GAAG,CAAC;IAC1B,CAAC,CAAC;EACN;EAEApB,wBAAwBA,CAAA,EAAG;IAAA;IAAAlF,cAAA,GAAAG,CAAA;IACvB;IACA,MAAMuG,cAAc;IAAA;IAAA,CAAA1G,cAAA,GAAAI,CAAA,SAAG,CACnB,yBAAyB,EACzB,gCAAgC,CACnC;IAAC;IAAAJ,cAAA,GAAAI,CAAA;IAEFsG,cAAc,CAACnB,OAAO,CAACI,GAAG,IAAI;MAAA;MAAA3F,cAAA,GAAAG,CAAA;MAC1B,MAAMwG,IAAI;MAAA;MAAA,CAAA3G,cAAA,GAAAI,CAAA,SAAGG,QAAQ,CAACqG,aAAa,CAAC,MAAM,CAAC;MAAC;MAAA5G,cAAA,GAAAI,CAAA;MAC5CuG,IAAI,CAACE,GAAG,GAAG,SAAS;MAAC;MAAA7G,cAAA,GAAAI,CAAA;MACrBuG,IAAI,CAACG,EAAE,GAAG,OAAO;MAAC;MAAA9G,cAAA,GAAAI,CAAA;MAClBuG,IAAI,CAACI,IAAI,GAAGpB,GAAG;MAAC;MAAA3F,cAAA,GAAAI,CAAA;MAChBG,QAAQ,CAACyG,IAAI,CAACC,WAAW,CAACN,IAAI,CAAC;IACnC,CAAC,CAAC;EACN;AACJ;;AAEA;AACA;AACA;AACA,MAAMO,mBAAmB,CAAC;EACtB3F,WAAWA,CAAA,EAAG;IAAA;IAAAvB,cAAA,GAAAG,CAAA;IAAAH,cAAA,GAAAI,CAAA;IACV,IAAI,CAACE,IAAI,CAAC,CAAC;EACf;EAEAA,IAAIA,CAAA,EAAG;IAAA;IAAAN,cAAA,GAAAG,CAAA;IAAAH,cAAA,GAAAI,CAAA;IACH;IACA,IAAI,CAAC+G,mBAAmB,CAAC,CAAC;;IAE1B;IAAA;IAAAnH,cAAA,GAAAI,CAAA;IACA,IAAI,CAACgH,uBAAuB,CAAC,CAAC;;IAE9B;IAAA;IAAApH,cAAA,GAAAI,CAAA;IACA,IAAI,CAACiH,sBAAsB,CAAC,CAAC;EACjC;EAEAF,mBAAmBA,CAAA,EAAG;IAAA;IAAAnH,cAAA,GAAAG,CAAA;IAAAH,cAAA,GAAAI,CAAA;IAClB;IACAG,QAAQ,CAACC,gBAAgB,CAAC,8BAA8B,EAAE,MAAM;MAAA;MAAAR,cAAA,GAAAG,CAAA;MAC5D,MAAMmH,SAAS;MAAA;MAAA,CAAAtH,cAAA,GAAAI,CAAA,SAAGG,QAAQ,CAACiD,aAAa,CAAC,kBAAkB,CAAC;MAAC;MAAAxD,cAAA,GAAAI,CAAA;MAC7D,IAAIkH,SAAS,EAAE;QAAA;QAAAtH,cAAA,GAAAU,CAAA;QAAAV,cAAA,GAAAI,CAAA;QACXkH,SAAS,CAACC,KAAK,CAAC,CAAC;MACrB,CAAC;MAAA;MAAA;QAAAvH,cAAA,GAAAU,CAAA;MAAA;IACL,CAAC,CAAC;;IAEF;IAAA;IAAAV,cAAA,GAAAI,CAAA;IACAG,QAAQ,CAACC,gBAAgB,CAAC,SAAS,EAAGC,CAAC,IAAK;MAAA;MAAAT,cAAA,GAAAG,CAAA;MAAAH,cAAA,GAAAI,CAAA;MACxC,IAAIK,CAAC,CAACE,GAAG,KAAK,KAAK,EAAE;QAAA;QAAAX,cAAA,GAAAU,CAAA;QACjB,MAAM8G,UAAU;QAAA;QAAA,CAAAxH,cAAA,GAAAI,CAAA,SAAGG,QAAQ,CAACiD,aAAa,CAAC,uBAAuB,CAAC;QAAC;QAAAxD,cAAA,GAAAI,CAAA;QACnE,IAAIoH,UAAU,EAAE;UAAA;UAAAxH,cAAA,GAAAU,CAAA;UACZ,MAAM+G,iBAAiB;UAAA;UAAA,CAAAzH,cAAA,GAAAI,CAAA,SAAGoH,UAAU,CAAC1B,gBAAgB,CACjD,qEACJ,CAAC;UAED,MAAM4B,YAAY;UAAA;UAAA,CAAA1H,cAAA,GAAAI,CAAA,SAAGqH,iBAAiB,CAAC,CAAC,CAAC;UACzC,MAAME,WAAW;UAAA;UAAA,CAAA3H,cAAA,GAAAI,CAAA,SAAGqH,iBAAiB,CAACA,iBAAiB,CAACG,MAAM,GAAG,CAAC,CAAC;UAAC;UAAA5H,cAAA,GAAAI,CAAA;UAEpE;UAAI;UAAA,CAAAJ,cAAA,GAAAU,CAAA,WAAAD,CAAC,CAACoH,QAAQ;UAAA;UAAA,CAAA7H,cAAA,GAAAU,CAAA,WAAIH,QAAQ,CAACuH,aAAa,KAAKJ,YAAY,GAAE;YAAA;YAAA1H,cAAA,GAAAU,CAAA;YAAAV,cAAA,GAAAI,CAAA;YACvDK,CAAC,CAAC6C,cAAc,CAAC,CAAC;YAAC;YAAAtD,cAAA,GAAAI,CAAA;YACnBuH,WAAW,CAACJ,KAAK,CAAC,CAAC;UACvB,CAAC,MAAM;YAAA;YAAAvH,cAAA,GAAAU,CAAA;YAAAV,cAAA,GAAAI,CAAA;YAAA;YAAI;YAAA,CAAAJ,cAAA,GAAAU,CAAA,YAACD,CAAC,CAACoH,QAAQ;YAAA;YAAA,CAAA7H,cAAA,GAAAU,CAAA,WAAIH,QAAQ,CAACuH,aAAa,KAAKH,WAAW,GAAE;cAAA;cAAA3H,cAAA,GAAAU,CAAA;cAAAV,cAAA,GAAAI,CAAA;cAC9DK,CAAC,CAAC6C,cAAc,CAAC,CAAC;cAAC;cAAAtD,cAAA,GAAAI,CAAA;cACnBsH,YAAY,CAACH,KAAK,CAAC,CAAC;YACxB,CAAC;YAAA;YAAA;cAAAvH,cAAA,GAAAU,CAAA;YAAA;UAAD;QACJ,CAAC;QAAA;QAAA;UAAAV,cAAA,GAAAU,CAAA;QAAA;MACL,CAAC;MAAA;MAAA;QAAAV,cAAA,GAAAU,CAAA;MAAA;IACL,CAAC,CAAC;EACN;EAEA0G,uBAAuBA,CAAA,EAAG;IAAA;IAAApH,cAAA,GAAAG,CAAA;IACtB;IACA,MAAM4H,UAAU;IAAA;IAAA,CAAA/H,cAAA,GAAAI,CAAA,SAAGG,QAAQ,CAACqG,aAAa,CAAC,KAAK,CAAC;IAAC;IAAA5G,cAAA,GAAAI,CAAA;IACjD2H,UAAU,CAACC,YAAY,CAAC,WAAW,EAAE,QAAQ,CAAC;IAAC;IAAAhI,cAAA,GAAAI,CAAA;IAC/C2H,UAAU,CAACC,YAAY,CAAC,aAAa,EAAE,MAAM,CAAC;IAAC;IAAAhI,cAAA,GAAAI,CAAA;IAC/C2H,UAAU,CAACE,SAAS,GAAG,SAAS;IAAC;IAAAjI,cAAA,GAAAI,CAAA;IACjC2H,UAAU,CAACG,EAAE,GAAG,sBAAsB;IAAC;IAAAlI,cAAA,GAAAI,CAAA;IACvCG,QAAQ,CAACU,IAAI,CAACgG,WAAW,CAACc,UAAU,CAAC;;IAErC;IAAA;IAAA/H,cAAA,GAAAI,CAAA;IACAS,MAAM,CAACsH,cAAc,GAAIC,OAAO,IAAK;MAAA;MAAApI,cAAA,GAAAG,CAAA;MAAAH,cAAA,GAAAI,CAAA;MACjC2H,UAAU,CAACM,WAAW,GAAGD,OAAO;MAAC;MAAApI,cAAA,GAAAI,CAAA;MACjCU,UAAU,CAAC,MAAM;QAAA;QAAAd,cAAA,GAAAG,CAAA;QAAAH,cAAA,GAAAI,CAAA;QACb2H,UAAU,CAACM,WAAW,GAAG,EAAE;MAC/B,CAAC,EAAE,IAAI,CAAC;IACZ,CAAC;EACL;EAEAhB,sBAAsBA,CAAA,EAAG;IAAA;IAAArH,cAAA,GAAAG,CAAA;IAAAH,cAAA,GAAAI,CAAA;IACrB;IACAG,QAAQ,CAACC,gBAAgB,CAAC,SAAS,EAAGC,CAAC,IAAK;MAAA;MAAAT,cAAA,GAAAG,CAAA;MAAAH,cAAA,GAAAI,CAAA;MACxC;MACA;MAAI;MAAA,CAAAJ,cAAA,GAAAU,CAAA,WAAAD,CAAC,CAAC6H,MAAM;MAAA;MAAA,CAAAtI,cAAA,GAAAU,CAAA,WAAID,CAAC,CAACE,GAAG,KAAK,GAAG,GAAE;QAAA;QAAAX,cAAA,GAAAU,CAAA;QAAAV,cAAA,GAAAI,CAAA;QAC3BK,CAAC,CAAC6C,cAAc,CAAC,CAAC;QAClB,MAAMT,kBAAkB;QAAA;QAAA,CAAA7C,cAAA,GAAAI,CAAA,SAAGwC,MAAM,CAACE,KAAK,CAACvC,QAAQ,CAACU,IAAI,CAAC;QAAC;QAAAjB,cAAA,GAAAI,CAAA;QACvD;QAAI;QAAA,CAAAJ,cAAA,GAAAU,CAAA,WAAAmC,kBAAkB;QAAA;QAAA,CAAA7C,cAAA,GAAAU,CAAA,WAAImC,kBAAkB,CAACzB,UAAU,GAAE;UAAA;UAAApB,cAAA,GAAAU,CAAA;UAAAV,cAAA,GAAAI,CAAA;UACrDyC,kBAAkB,CAACzB,UAAU,CAAC,CAAC;QACnC,CAAC;QAAA;QAAA;UAAApB,cAAA,GAAAU,CAAA;QAAA;MACL,CAAC;MAAA;MAAA;QAAAV,cAAA,GAAAU,CAAA;MAAA;IACL,CAAC,CAAC;EACN;AACJ;;AAEA;AAAA;AAAAV,cAAA,GAAAI,CAAA;AACAG,QAAQ,CAACC,gBAAgB,CAAC,kBAAkB,EAAE,MAAM;EAAA;EAAAR,cAAA,GAAAG,CAAA;EAAAH,cAAA,GAAAI,CAAA;EAChD,IAAIkB,WAAW,CAAC,CAAC;EAAC;EAAAtB,cAAA,GAAAI,CAAA;EAClB,IAAI0E,iBAAiB,CAAC,CAAC;EAAC;EAAA9E,cAAA,GAAAI,CAAA;EACxB,IAAI8G,mBAAmB,CAAC,CAAC;AAC7B,CAAC,CAAC;;AAEF;AAAA;AAAAlH,cAAA,GAAAI,CAAA;AACA;AAAI;AAAA,CAAAJ,cAAA,GAAAU,CAAA,kBAAO6H,MAAM,KAAK,WAAW;AAAA;AAAA,CAAAvI,cAAA,GAAAU,CAAA,WAAI6H,MAAM,CAACC,OAAO,GAAE;EAAA;EAAAxI,cAAA,GAAAU,CAAA;EAAAV,cAAA,GAAAI,CAAA;EACjDmI,MAAM,CAACC,OAAO,GAAG;IAAEtI,SAAS;IAAEoB,WAAW;IAAEwD,iBAAiB;IAAEoC;EAAoB,CAAC;AACvF,CAAC;AAAA;AAAA;EAAAlH,cAAA,GAAAU,CAAA;AAAA","ignoreList":[]}