{"version":3,"names":["pwaOffline","init","callbacks","state","isOnline","navigator","onLine","queuedActions","loadQueuedActions","setupEventListeners","updateOnlineStatus","handleOnline","syncPendingActions","handleOffline","handleVisibilityChange","document","hidden","window","addEventListener","removeEventListener","onOnline","onOffline","dispatchEvent","CustomEvent","detail","timestamp","Date","now","createOfflineIndicator","options","message","className","indicator","createElement","id","innerHTML","toggleOfflineIndicator","show","getElementById","classList","remove","add","stored","localStorage","getItem","actions","JSON","parse","Array","isArray","error","saveQueuedActions","setItem","stringify","DevLogger","queueAction","action","queuedAction","generateActionId","retryCount","currentQueue","push","removeQueuedAction","actionId","updated","filter","length","actionsToSync","syncedActions","failedActions","success","executeAction","lastError","onSyncSuccess","onSyncFailure","synced","failed","remaining","url","type","response","fetch","ok","execute","Math","random","toString","substr","interceptFetch","queueHandler","originalFetch","method","Response","offline","queued","status","headers","getOfflineStatus","queuedActionsCount","lastOnlineTime","getLastOnlineTime","offlineDuration","getOfflineDuration","connectionType","getConnectionType","networkQuality","getNetworkQuality","lastOnline","parseInt","setLastOnlineTime","getTime","effectiveType","connection","downlink","rtt","saveData","clearQueuedActions","removeItem","getQueuedActionsSummary","summary","total","byType","oldestAction","newestAction","a","retryingActions","forEach","module","exports"],"sources":["offline.js"],"sourcesContent":["/**\n * PWA Manager - Offline Management Module\n * \n * Handles offline detection, action queuing, and background synchronization.\n */\n\n/**\n * Offline management and synchronization operations\n */\nconst pwaOffline = {\n    /**\n     * Initializes offline detection and management\n     */\n    init(callbacks = {}) {\n        const state = {\n            isOnline: navigator.onLine,\n            queuedActions: this.loadQueuedActions(),\n            callbacks\n        };\n        \n        this.setupEventListeners(state);\n        this.updateOnlineStatus(state.isOnline, callbacks);\n        \n        return state;\n    },\n    \n    /**\n     * Sets up online/offline event listeners\n     */\n    setupEventListeners(state) {\n        const handleOnline = () => {\n            state.isOnline = true;\n            this.updateOnlineStatus(true, state.callbacks);\n            this.syncPendingActions(state);\n        };\n        \n        const handleOffline = () => {\n            state.isOnline = false;\n            this.updateOnlineStatus(false, state.callbacks);\n        };\n        \n        const handleVisibilityChange = () => {\n            if (!document.hidden && state.isOnline) {\n                this.syncPendingActions(state);\n            }\n        };\n        \n        window.addEventListener('online', handleOnline);\n        window.addEventListener('offline', handleOffline);\n        document.addEventListener('visibilitychange', handleVisibilityChange);\n        \n        // Return cleanup function\n        return () => {\n            window.removeEventListener('online', handleOnline);\n            window.removeEventListener('offline', handleOffline);\n            document.removeEventListener('visibilitychange', handleVisibilityChange);\n        };\n    },\n    \n    /**\n     * Updates online status and triggers callbacks\n     */\n    updateOnlineStatus(isOnline, callbacks = {}) {\n        if (isOnline) {\n            if (callbacks.onOnline) callbacks.onOnline();\n        } else {\n            if (callbacks.onOffline) callbacks.onOffline();\n        }\n        \n        // Dispatch custom event\n        window.dispatchEvent(new CustomEvent('pwa-connection-change', {\n            detail: { isOnline, timestamp: Date.now() }\n        }));\n    },\n    \n    /**\n     * Creates offline indicator UI\n     */\n    createOfflineIndicator(options = {}) {\n        const {\n            message = \"You're offline. Some features may be limited.\",\n            className = 'pwa-offline-indicator'\n        } = options;\n        \n        const indicator = document.createElement('div');\n        indicator.id = 'offline-indicator';\n        indicator.className = `${className} fixed top-0 left-0 right-0 bg-yellow-500 text-white text-center py-2 text-sm font-medium transform -translate-y-full transition-transform duration-300 z-50`;\n        \n        indicator.innerHTML = `\n            <div class=\"flex items-center justify-center space-x-2\">\n                <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L4.082 16.5c-.77.833.192 2.5 1.732 2.5z\"></path>\n                </svg>\n                <span>${message}</span>\n            </div>\n        `;\n        \n        return indicator;\n    },\n    \n    /**\n     * Shows/hides offline indicator\n     */\n    toggleOfflineIndicator(show) {\n        const indicator = document.getElementById('offline-indicator');\n        if (!indicator) return;\n        \n        if (show) {\n            indicator.classList.remove('-translate-y-full');\n        } else {\n            indicator.classList.add('-translate-y-full');\n        }\n    },\n    \n    /**\n     * Loads queued actions from storage\n     */\n    loadQueuedActions() {\n        try {\n            const stored = localStorage.getItem('pwa-queued-actions');\n            const actions = stored ? JSON.parse(stored) : [];\n            return Array.isArray(actions) ? actions : [];\n        } catch (error) {\n            return [];\n        }\n    },\n    \n    /**\n     * Saves queued actions to storage\n     */\n    saveQueuedActions(actions) {\n        try {\n            localStorage.setItem('pwa-queued-actions', JSON.stringify(actions));\n            return true;\n        } catch (error) {\n            if (window.DevLogger?.error) {\n                window.DevLogger.error('[PWA] Failed to save queued actions:', error);\n            }\n            return false;\n        }\n    },\n    \n    /**\n     * Queues an action for later execution\n     */\n    queueAction(action, state) {\n        const queuedAction = {\n            id: this.generateActionId(),\n            timestamp: Date.now(),\n            retryCount: 0,\n            ...action\n        };\n        \n        if (!state) {\n            // Standalone mode - load current queue\n            const currentQueue = this.loadQueuedActions();\n            currentQueue.push(queuedAction);\n            this.saveQueuedActions(currentQueue);\n            return queuedAction;\n        }\n        \n        state.queuedActions.push(queuedAction);\n        this.saveQueuedActions(state.queuedActions);\n        \n        return queuedAction;\n    },\n    \n    /**\n     * Removes an action from the queue\n     */\n    removeQueuedAction(actionId, state) {\n        if (!state) {\n            const currentQueue = this.loadQueuedActions();\n            const updated = currentQueue.filter(action => action.id !== actionId);\n            this.saveQueuedActions(updated);\n            return updated;\n        }\n        \n        state.queuedActions = state.queuedActions.filter(action => action.id !== actionId);\n        this.saveQueuedActions(state.queuedActions);\n        \n        return state.queuedActions;\n    },\n    \n    /**\n     * Syncs pending actions when online\n     */\n    async syncPendingActions(state, callbacks = {}) {\n        if (!state.isOnline || !state.queuedActions.length) return;\n        \n        const actionsToSync = [...state.queuedActions];\n        const syncedActions = [];\n        const failedActions = [];\n        \n        for (const action of actionsToSync) {\n            try {\n                const success = await this.executeAction(action);\n                \n                if (success) {\n                    syncedActions.push(action);\n                    this.removeQueuedAction(action.id, state);\n                } else {\n                    action.retryCount = (action.retryCount || 0) + 1;\n                    if (action.retryCount >= 3) {\n                        failedActions.push(action);\n                        this.removeQueuedAction(action.id, state);\n                    }\n                }\n                \n            } catch (error) {\n                action.retryCount = (action.retryCount || 0) + 1;\n                action.lastError = error.message;\n                \n                if (action.retryCount >= 3) {\n                    failedActions.push(action);\n                    this.removeQueuedAction(action.id, state);\n                }\n            }\n        }\n        \n        // Trigger callbacks\n        if (syncedActions.length > 0 && callbacks.onSyncSuccess) {\n            callbacks.onSyncSuccess(syncedActions);\n        }\n        \n        if (failedActions.length > 0 && callbacks.onSyncFailure) {\n            callbacks.onSyncFailure(failedActions);\n        }\n        \n        return {\n            synced: syncedActions.length,\n            failed: failedActions.length,\n            remaining: state.queuedActions.length\n        };\n    },\n    \n    /**\n     * Executes a queued action\n     */\n    async executeAction(action) {\n        const { url, options, type } = action;\n        \n        if (type === 'fetch') {\n            try {\n                const response = await fetch(url, options);\n                return response.ok;\n            } catch (error) {\n                return false;\n            }\n        }\n        \n        if (type === 'custom' && action.execute) {\n            try {\n                return await action.execute();\n            } catch (error) {\n                return false;\n            }\n        }\n        \n        return false;\n    },\n    \n    /**\n     * Generates a unique action ID\n     */\n    generateActionId() {\n        return `action_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n    },\n    \n    /**\n     * Intercepts fetch requests for offline handling\n     */\n    interceptFetch(isOnline, queueHandler) {\n        const originalFetch = window.fetch;\n        \n        window.fetch = async (url, options = {}) => {\n            try {\n                // Always attempt the request first\n                const response = await originalFetch(url, options);\n                \n                if (response.ok) {\n                    return response;\n                }\n                \n                // If request failed and we're offline, queue it\n                if (!isOnline && options.method && options.method !== 'GET') {\n                    queueHandler({ url, options, type: 'fetch' });\n                    \n                    return new Response(JSON.stringify({\n                        success: false,\n                        message: 'Action queued for when connection is restored',\n                        offline: true,\n                        queued: true\n                    }), {\n                        status: 202,\n                        headers: { 'Content-Type': 'application/json' }\n                    });\n                }\n                \n                return response;\n                \n            } catch (error) {\n                // If we're offline and this is a modifying request, queue it\n                if (!isOnline && options.method && options.method !== 'GET') {\n                    queueHandler({ url, options, type: 'fetch' });\n                    \n                    return new Response(JSON.stringify({\n                        success: false,\n                        message: 'Action queued for when connection is restored',\n                        offline: true,\n                        queued: true\n                    }), {\n                        status: 202,\n                        headers: { 'Content-Type': 'application/json' }\n                    });\n                }\n                \n                // For GET requests or when online, return offline response\n                return new Response(JSON.stringify({\n                    success: false,\n                    message: 'You are offline. Please check your connection.',\n                    offline: true\n                }), {\n                    status: 503,\n                    headers: { 'Content-Type': 'application/json' }\n                });\n            }\n        };\n        \n        // Return restore function\n        return () => {\n            window.fetch = originalFetch;\n        };\n    },\n    \n    /**\n     * Gets offline status information\n     */\n    getOfflineStatus(state) {\n        return {\n            isOnline: state ? state.isOnline : navigator.onLine,\n            queuedActionsCount: state ? state.queuedActions.length : this.loadQueuedActions().length,\n            lastOnlineTime: this.getLastOnlineTime(),\n            offlineDuration: this.getOfflineDuration(),\n            connectionType: this.getConnectionType(),\n            networkQuality: this.getNetworkQuality()\n        };\n    },\n    \n    /**\n     * Gets last known online time\n     */\n    getLastOnlineTime() {\n        const lastOnline = localStorage.getItem('pwa-last-online');\n        return lastOnline ? new Date(parseInt(lastOnline)) : null;\n    },\n    \n    /**\n     * Sets last online time\n     */\n    setLastOnlineTime() {\n        localStorage.setItem('pwa-last-online', Date.now().toString());\n    },\n    \n    /**\n     * Gets offline duration\n     */\n    getOfflineDuration() {\n        if (navigator.onLine) return 0;\n        \n        const lastOnline = this.getLastOnlineTime();\n        if (!lastOnline) return null;\n        \n        return Date.now() - lastOnline.getTime();\n    },\n    \n    /**\n     * Gets connection type if available\n     */\n    getConnectionType() {\n        if ('connection' in navigator) {\n            return {\n                effectiveType: navigator.connection.effectiveType,\n                type: navigator.connection.type,\n                downlink: navigator.connection.downlink,\n                rtt: navigator.connection.rtt,\n                saveData: navigator.connection.saveData\n            };\n        }\n        return null;\n    },\n    \n    /**\n     * Estimates network quality\n     */\n    getNetworkQuality() {\n        if (!('connection' in navigator)) return 'unknown';\n        \n        const connection = navigator.connection;\n        \n        if (connection.effectiveType === '4g' && connection.downlink > 10) {\n            return 'excellent';\n        } else if (connection.effectiveType === '4g' || connection.downlink > 5) {\n            return 'good';\n        } else if (connection.effectiveType === '3g' || connection.downlink > 1) {\n            return 'fair';\n        } else {\n            return 'poor';\n        }\n    },\n    \n    /**\n     * Clears all queued actions\n     */\n    clearQueuedActions(state) {\n        if (state) {\n            state.queuedActions = [];\n        }\n        \n        localStorage.removeItem('pwa-queued-actions');\n    },\n    \n    /**\n     * Gets queued actions summary\n     */\n    getQueuedActionsSummary(state) {\n        const actions = state ? state.queuedActions : this.loadQueuedActions();\n        \n        const summary = {\n            total: actions.length,\n            byType: {},\n            oldestAction: null,\n            newestAction: null,\n            failedActions: actions.filter(a => a.retryCount >= 3).length,\n            retryingActions: actions.filter(a => a.retryCount > 0 && a.retryCount < 3).length\n        };\n        \n        actions.forEach(action => {\n            const type = action.type || 'unknown';\n            summary.byType[type] = (summary.byType[type] || 0) + 1;\n            \n            if (!summary.oldestAction || action.timestamp < summary.oldestAction.timestamp) {\n                summary.oldestAction = action;\n            }\n            \n            if (!summary.newestAction || action.timestamp > summary.newestAction.timestamp) {\n                summary.newestAction = action;\n            }\n        });\n        \n        return summary;\n    }\n};\n\n// Export for use in other modules\nif (typeof module !== 'undefined' && module.exports) {\n    module.exports = { pwaOffline };\n} else if (typeof window !== 'undefined') {\n    window.pwaOffline = pwaOffline;\n}\n"],"mappings":"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","ignoreList":[]}